(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    439183,       9531]
NotebookOptionsPosition[    428544,       9176]
NotebookOutlinePosition[    428923,       9192]
CellTagsIndexPosition[    428880,       9189]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Expand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"a", "+", "b"}], ")"}], "6"], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["a", "6"], "+", 
   RowBox[{"6", " ", 
    SuperscriptBox["a", "5"], " ", "b"}], "+", 
   RowBox[{"15", " ", 
    SuperscriptBox["a", "4"], " ", 
    SuperscriptBox["b", "2"]}], "+", 
   RowBox[{"20", " ", 
    SuperscriptBox["a", "3"], " ", 
    SuperscriptBox["b", "3"]}], "+", 
   RowBox[{"15", " ", 
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["b", "4"]}], "+", 
   RowBox[{"6", " ", "a", " ", 
    SuperscriptBox["b", "5"]}], "+", 
   SuperscriptBox["b", "6"]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.617170408318125*^9}]
}, Open  ]],

Cell["Talor expansion", "Text",
 CellChangeTimes->{{3.6171704759479933`*^9, 3.6171704835954304`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "24"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"x", "-", 
    FractionBox[
     SuperscriptBox["x", "3"], "6"], "+", 
    FractionBox[
     SuperscriptBox["x", "5"], "120"], "-", 
    FractionBox[
     SuperscriptBox["x", "7"], "5040"], "+", 
    FractionBox[
     SuperscriptBox["x", "9"], "362880"], "-", 
    FractionBox[
     SuperscriptBox["x", "11"], "39916800"], "+", 
    FractionBox[
     SuperscriptBox["x", "13"], "6227020800"], "-", 
    FractionBox[
     SuperscriptBox["x", "15"], "1307674368000"], "+", 
    FractionBox[
     SuperscriptBox["x", "17"], "355687428096000"], "-", 
    FractionBox[
     SuperscriptBox["x", "19"], "121645100408832000"], "+", 
    FractionBox[
     SuperscriptBox["x", "21"], "51090942171709440000"], "-", 
    FractionBox[
     SuperscriptBox["x", "23"], "25852016738884976640000"], "+", 
    InterpretationBox[
     RowBox[{"O", "(", 
      SuperscriptBox["x", "25"], ")"}],
     SeriesData[$CellContext`x, 0, {}, 1, 25, 1],
     Editable->False]}],
   SeriesData[$CellContext`x, 0, {1, 0, 
     Rational[-1, 6], 0, 
     Rational[1, 120], 0, 
     Rational[-1, 5040], 0, 
     Rational[1, 362880], 0, 
     Rational[-1, 39916800], 0, 
     Rational[1, 6227020800], 0, 
     Rational[-1, 1307674368000], 0, 
     Rational[1, 355687428096000], 0, 
     Rational[-1, 121645100408832000], 0, 
     Rational[1, 51090942171709440000], 0, 
     Rational[-1, 25852016738884976640000]}, 1, 25, 1],
   Editable->False], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171704853925333`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
YuPAzg9yJTQDzbZ0My8/zcZaziVbtPkM5FQ0zejZLTb2vfwgeZ4ME2XYRZpI
vmVjxSQrp/HlTLRPOkQjbT0Hb/FvXD97FRO9OtUwM0Sfg0877BHfoMVEhkuD
a04bcHDpUqM497VMpNeXlCOzj4Ptc9bX9W1mojf12pweZw7OqlBc02zKRBrq
ybdUH3Gw8Z9GQYELE3UtMM0xEOfiyytCL2W7MpFRadTwS2kuzj1vPJHuxkSX
w9W7VszkYtXJUpE4TyZ63174YVSZi7mzUqX8/ZhoMkwnSFuTi6OMvRTNQpmo
YZX0f0ZWXPwrc4529zMmqk2UZ/95zMWKQ99y27OZaM1zw0DXdC7etSFcpzmH
iVIvfM0c/o+L895KbqgpYKKsP9E3Ogu4OOAnd0vuKyZawTCxcXxPPmXly039
aplIkFddKdfLxV5uJ07P4jDR/mR728zFNA404Z7aRDPR1urV0yKW0/jewoun
bAaZ6BRb7PU5TRoXfgs8mTrKRMH9RqcZ62k8vOk/h/WTTNTpPurcbUBjF/Fh
O0t5CoU4mlp32dH48o9Ldj5MCi0em5W/2YHGIQUSdgksChn+PTYz+BSNM0/N
su1WohDFy3k33YXGPR83HvVUpxDH5PDKxz40Ph519VCMNoUYciCpEUFjt7My
h0rWUqj3nqJKTxSN/Q0jDrato9CBiUsaqfdonMR/bLV4E4Ui877JScXTuM36
/YHCbRRaEOK4wTqNxpx1ew+0GFAo0X9fa8tTGo/PbLaYNKTQ5ksfnff+R2PV
8r79hiYUOvct4aB6Do0PLpq579t+Cmm6F6L9JTQ+PRljLjxAoeAQvkFQKY0v
Ns0zn3uQQsskz68pLKNxTJD23pPWFFrxPOjdSAWNGzkWZjwHCjnKhFRIfKSx
WeHDXbM8KbRJdfj2uWZyvWH7KUUvCm2Te7iX30Lj66uX5yv6UEhvtFXd+weN
izOK1RT9KORmmtFh307j+YlfB1gBFFqU4v77WxeN9X7EpbACiV7i9fx53TS2
UnE4zAqmkN22ceVjf4nekUNvqFAKvXxw0+1jL415t+TvMWMoxMIsf8SlMaPy
mwnzPtm/+UHTTprGK8QSRJixxI/aJ2tNBmhs57vSiZFAoScqeybXDdHY58Xw
XEYShTwM3Z3nDdM4mlfSKJ9M2GnpL5ERGn9w3akvn0qhBIeTTZmjNO56xhia
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
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
DTUqcpLc8botb0wnVeVhau39//9/t+B/65VIOw==
      "]]}, 
    {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwVWnk4VV8XNlyza7i411DGSsmQEBWtnQpFNKKMSeonRWWoiFIhSQhFigyl
gQyFqHYlhZCQeZ6ne0/mme98f93nfe4+a6/1vu86+6zzHAUn90OnONjY2MI5
2dj+/8uJ+at6dG7s+LNa5P3f6rgda4c+b5d94ADHXH14zDN9YD5Lw7kpyh0U
DXO82TKDoU/8zGxeVABkbOAY8c94CM1Gt76lRd0HpZOPlGpfv4C/DlHKT6IS
oXO1adfBtHw45CbV/CjqLbinOEqdv/sTIsdtc2OjMLzLOr7yYE0D3JOI1/9C
/QKOinFBm281QE32bTmdQ19AYeLAreieBrAZtu2TbflC5pNMTXzWCOdtBC6M
j36FiEyN1FzpZog2OBMSJ/IddB4ZnONha4MOdsX8AatS+OtnVXjBpAvWPKXG
2yaUQpZ1mkbkpS44s23O709nKXBe21dw82kXjF+sNiz6rwwY5+r2dk50AaXX
vyrctxzkh3ZdOpvQDSo/Wvp0EitAafndo7O9PbC9ZB+/4aVq8JEO3bJ9fz+I
1D3/rfugGlBhq91N937o7eaIUcuthprWSJW4yH4IZyuSk5qohkGHmEDVv/3Q
vX2jzr+Lf6ChTX5k6NgAhOQIOD69WAPuxfbUgGODYPf19NroqBpQTtV54395
EDZXFw/fyamBzpPKDsYPB6GV6evlNV4DlmZXmZvrBkFjw2io2cVaKHlGbD9r
OgT1iRXv5y/UwZe2XXidxjC8zlzv+y+yDmKwwIFH+4bh+qdbqD+7DsYSa9ur
Tg3Dhhb9X3/G6kBgLo4j9PEw+NEzOtMv/AXvo7l/NSkjoHTvnoDVhXpI49+w
IF4+ArOPh6rNIuuBfe2RscKuEah4tSfWMLsebI2KDivOjYB36ZK8+lg98FVk
3tVWHoVyzvNbuC40QK+VhuqJ66PgcdX8RK5HI9wV012TtY4J+87rp/NGNMKO
k83uE1uZoOSkQti9bYTguIC3M2ZMqN/LfY2X1QjRsjtPG15kgoHU50d2Z5tA
ozXJrvUDE+jUNx05oU3A3v9kWPEXE/6xxa/jfdUEkoFnN29oZULqoNe7nMEm
qKtb5ei5xAT+ArVqHpdmmB2qOMhuwILe1zIMu9vNIETx/b3TjAWfE/nsc1Kb
4fiS+xiyYcGF4L4R255mkG058uzqZRY0Wj7hyXFsgfR5gX2Nb1mQs++uOc/1
FnhyTyqA/xML7u64EmOb2AI2soqn5stYsGPdUSWe9hYIGRb9S+thQdqUINja
tMK97QeOK9EI8B+av519tRVYk5ob0GoCrNsGK7jjW0Gw4maT1HoCBEu+H89u
bIWrFWducBoQ0F+Q84x7thXGpDtMxYwJwG+SBm0YbfBlc9iTjgMEXIz28+a2
bIPm0ojAjJMEmIW4frLxagP3citmphsB6/ysKdnRbeA5oR3u5kVA00ntKJva
NuBQsVZeFUQA0hrNyDrQDkcS7X7tSyVAWrl5ksujHWLjxqc3viZgQrp0u839
dvAT+/OnNJuA5xypZVxV7RBRwrLV+UzA9elIERtmO0hPOo5TvhNwfDjAKkuw
AypLA9kjygig1tj0HTftgJiH0XaNtWQ9JXtVs1w74LyoZXRMIwFfPuhe4grt
gFpHV0mhNgLiM9YWHn/ZAR4xqp07uwjwfCbGnlXaAfe5wro39RFgHsNuwjXY
Ac9PCDJaBgmI/u5jnMHZCSk/SrzQKJnPZ9awlVgnLFY5zzgSBJwrOBXOodQJ
fskqMfrjBKjvPSjPrt0Js7bzJrxTBPxr0s9Z2d0Jp47atwfOEJDjun738tFO
MPosYPFmjtx/Qax+0aUTir/djrm1QMCWsJXTCz6dkBi9OkNgiYCZVSNzcyGd
IHl5PHLnMgEFGfV3Z+M64WPlGFq3QsDVHd9Wz7zqBH3phvwPJNb/nfF2qqgT
1guqTi2QeMkhbudkRSe8CDCZHSXx53+3asfbOmHN9UNfw0h8/YbHqTFWJwwZ
7zjYQsY3pNnOECudkGdQ9bKR3J8zxfgOS6QLTP9FVd5aJOC7lpYMU6ELuoVH
cMc8AUHfZTNGNndB8inO20OzBJgc5YfhXV3AW1avkDxNAF//VPXgkS7YJaae
wDdJQLl3l9PAqS4IFEmalxsjIIyncrLPuwu2u0fu7mOS/D8qCOoN7gK3DO3A
Y8MEiGxIlex51AUlnKEf/foJeLDPV7+zsAtkpi0sqkk9j7S4VLX/6gLNP98/
sTURQHc75NjW2gWf+SePdJJ+iL+34VbzMpm/su3mjFICbGUl6E3C3TDYxhET
/42A1W/Z0hvku0HgEBzT/UhAUnXDrzrDbrDSUDAJyCTA6USxXe3hbqD5x8Wo
vCBAaTyT+OPcDaJLZqG3E0m/igWJ/Q7qBkvB6vx99wk4k3ohrfJhN3RRa6Te
k/5X0bHTrUjvhhcfLnn9vkZAhqW2TVl5N5T15HmKnyXg/IAc82dLN/DU9xjD
CQI2XRYI+DHaDdFdPy5JWxHwLq47uVioB7hnfAy6dxJQ2Box/OlQD0hayj8u
FCPA75yf38eTPdDSKqR5locAg+XTQkWePRDcnc9ZOc+CL3KwuSC2B6S9ZTtT
O1nw04l5Jae5B1b/lVR+mc6CusG9fC+cesFIpZ17jQoLiLj1e25e7AXh8c2/
5KVZwG/Kc8MhsBea3PdwtPCxAGV8n2Uk94Kfh+yxkEEmvL4AgyFdvcCvy/ep
PJkJgfPaP10d+0C6ybxeRIAJT16LcRp79MHjirvd09OjUGA7vkPpeh8sbEZ9
Cd2jwPz8Nq8lsQ/K2R4GbvgwCtY3VZ6bdfTBr7f+G/edHAUNQfnb6vb9sOvs
8qXa1yOw79PyF/7z/dCsw635+8EIOJ9vW+y/1g9+Oh+m7vmOQHx1vGfik35g
d1137ui+EeCOkXAWaSPPyTX3aLS+YWhdLbBr3GYAEgz12y4JD0OoxjRbHnlO
rlJRkruxdRCu+uzd2O86CNobwpKyGIPwH044SvcbhJo76x48mxoAE4tdr7yf
DkLwAQv1sqwB4HGPOKzbMwiz17REtq4ZgFuZKs8L3Ibgz1Tx2tGVPvBXczAt
Chgm77NH63bd64ELG0tjvqSNwpevc3+M1Vqh91Tv9aS8UVgMCjmlX9MClkls
btd/joKKqbz1iHcLbJPYaoiGRsH3EzB9cTNwrLxkYVUmHEvSZruxvwmiau4a
41zyHBuhruu3q4ecKxZzn76ygLHd+GeMZTXMnzyb2Xb+H3DZ5jB6+zPB6ZPl
gQiXcUh1t34s6V6LN+dJ0qTcx+HMV4EPUdW1mONtc+0zn3HgZLeWbtasw8lJ
9la5IeOQlT9UXDFRh7tvutjXvxoHu+iCmHVe9dhpn7fbKmIcTi8Vy/51a8JO
DTEh6T4ToN79OuD2hg68udpqn+b1CejVbq+rDuzAHGVSgoUhE2B1uuXqr5YO
nFz45P6vuAnYcPVYzCmjTtz9JC2WVTQBh6V1s89NdWIn5/ep2myT8ONbgsIO
0258cqzuy5eQSRj7rToxUtOLHa9GWBVETEJq6fl78jO92JbTjPX20SS0hmfY
r5Ppw5YSxTKJ6ZMQ/3fZOdWpD5tszfa+VjoJmeaKB04QfVj9xj3VbbxTQAu2
9Ytf6ccq/HuLNUWmQEGo6dsn+QGs/IByfIPkFHQFDLhl7BzA8mm+wZLrp0Bs
u8aPf4EDWKzsv+5p4ylIr6QnrXAM4lkRo0e5wVPg98RKgG1uEE/GsWu8vj8F
T3j7JUvpQ3hM8VNJ8sMp2HM8Z4O19hAe1taeiHwxBTeUkvb/Pj+E26wVzT1+
TkEnX1oQrWsIf0ta5lTjmYass+GJ7wuHcdimfPfnQdNwxMHWpRqN4vLNDf1e
4dPw7SCdN9dyFPPqzNjtiZ2Gkk0mPdZuo/jWVl2z3rRpmGrpCmPGjmJfw/z1
iiXTcElvxwedoVHseiS/6wnnDLQYG92VCWTidMsG63MCMxCkM6OwOpqJ+61n
fuuLzUDjT+e9HWlMfMJO93OL4gxc3/YiJ7WUia1d8uOlDGfg9gfefg0BFja+
nH845voM6I237t9wi4VvXW0odw6ZAW+leEOlKBb+5jezUztiBvLdTV+0JLLw
jhu6m2oTZ+DYXmfT4EIW3hKaLyiKZ2CoeOfQj1EW9gxruNn5YwZ+ND7enT3L
wjnhM/Nvq2Yg5MCc1jEKgdUe6A6Zt8+AS6DF2S5pAq9JyC8JW5oBwZaklOrd
BHZ62qBvyzULvjRXjjRzAiclzeRupM4CUurS32JN4FVpusnlq8j/T1hOhLsS
+PgLK6n4NbPQOrJgbHmJwI9e+kT8pzoLv+2ebmj2JbBYZr4/r/4s9H21N2WE
EfhAVsNUw65ZOGz48kz1AwKH58y4vTCdhcei+yr3PCYwf76ujZHNLHBZrlE7
9ZLAJh+saiROzkKJjji/cBaBg4p89va5zkL01Z9jnnkE5viSr3vr6iyctVV+
7fmNwK+otOdLgbMQ02Ine7uUwIds3MR97s4CZ+z6w3uqCDyf/iPw34NZ+JnC
sf19LYFTpuXH/kuYBbcmzdK6RgKb7fZ16EmdhbThH8yUNgJPRv6ttM2YBWbo
k0TFbgLvVgt9ZfF5FkIWvHzVhwk8erVXsuzHLGRtV44sYhI4unRHsOHvWWhf
fYV/9h+B9elxU0UNs2A0Cx09EwTuOzlxUqdzFkoLZXgDpsn6s/fXZA6S8dgv
+5fNEnjLygu0fmwWwteG6RfPE7jdjOPts7lZcDS1MXBbJOuPt10twzEHce7v
/L4vEVh9MO9uNP8c+F/YPPNrmcD1OqLzVLE5iJLRfxW4QmD/m2fPBMvMgaIK
JXqQxMp/SurZ1szBX4s7uUskrpaV33NVdQ609WJ5v5H4stvV3AntOdgU8vWB
DonlC+sUzhnMwcvWc5bWZPxSHo2I/j1zMPyj7JAKub/H0TvLDuZzoPLz993X
CwSWTOlxa7KcA649RlytcwT+8s+g5ZDDHMzcxsVFMwT+b8ejvRWn56DiWVzF
vikC08LG8/d4zIGM1/LaO+MELmwyW4cvz0FmZE+9N0H6UflFtN6NOZhS5R8Q
GyX94cXOmXNnDi4Irtg7DhI455vNhY1R5PUe0ia2vaQfRfI6UuPn4M98wBue
TtIf9iLmsilzUPRI9qFTC4Ffv3b9+PD1HLw9mSV2rp7AR+a+q4i+m4OY24Xq
yn8IvGgkFxf6cQ5+S96bivhF+qG71uta5Ry493zFlzDpBw313um/c3C27EPX
aAGBE66FHPJon4PsTWmjEjkEZkoaaJwkSD52aHFeTiH1tXg+aCI6D0Uadib+
gaS+T9isvknNgzpP3NfLV0h9h4+XbFecB13dxWIlDwJrBAknq2vNwxtFKL5r
S+rz8bKN+NF5kKJkeDzXJPXhry27ZzcPqiqPx5XXkfpYq+nxuMxDdC9f9XGy
nz0musTnvefB8rSdxF92AouqmFZ1PJqHq3KN+nKVLNzPkyhamjQP3Dhmq/wX
Fi7sGz+SlT4P/+0wfdqWw8LOz+JbrhfMw87LZeLhD1m4QHJ4UKFxHuY2pvOX
2bGwPc8dTmfGAtzMSX1W3MbEWn2tRmZyC1B+S40/voKJeYs3hWorL0Ac/8KY
ehET5/g3inDpLoBgjnRT9EMm5ppWln1uuQBqncXWR/cz8ZveH3qDMQsg+kP6
buWbUXzjm7Rf9ZMFiLlkTEt8OIotk87jgrQF4D0zgDUDRzGbLd3ozvsFcBn0
MH1M3r8P1546rPJ3AV757HK7tTiC579SzruJL8KL8f6GZv0RbJJomPIvahE0
HeK/ikUO4eDS6rbAx4twVvmtJdfFIfxjzF5SInUR+F8/0Hp/aAjv2e17b+v7
RfDmnuQ9KDaEDYdyfQIbFuG8wz+lwMhBrK+11kx81RLY54SYiJPn2aafPFO6
aUsQdI16x3VLH3b/F6NRnrEED93GpKqE+3Cm1BpX27wlUHklsmdhsBeruaGO
6z+X4KZ+ykJufC9WEb1SVja0BC6TfzhfLfTgNTbDT2zUlyFiIImP8103ZhAV
RgH5y2DUlB5txd6JH0XiE0N4GdRvWZQzXndgSe0cv8Oly1BqZ/1Q8zCJrzzM
UW5ahtE8PwW/5HYszekkWz2/DKfk0sVuG7RhWcbMlPyOFVC7fbNog0szXgcK
ad++r8Df9q8pC8F1OP5nITvnf2yo8lT/Xv6bX7D+6p0r8s7s6JikYHO/fhWY
2NZddDrDjjYt2MUYcP6GI49P96e4sSM1AdaRPWW/4axUeOU6L3ZUuV+abdOr
aoiXaHmsGsSOXl/4ErJHqwZmqV56eunsKKi/5M0N/b/wbjn9gsUoO5ryOvbw
9poW+GKg3xfxjx19v/O6oouc6yv8flvXTLIjR3WN6ZnWFuiZn4KjS+yok93Z
zzy6FWgzhkI2Qhxo9Z2PLaErbeBBtL5y2cSBHv9x/l50shM2dor0XvPkQDen
zasDBHrAfED+m/dlDiS3N+FZgWYPeLA2Jbn7cSAn+XutP6x64N3iAdsTtzgQ
bWrOwCmlB/SlIut2R3Mg4YgToXf1esHskGiJwDsOpCnU6OJ4vA/cvos+j5vg
QITCgzVDVwYg/JfCragZDqRnl6SiFT8AWTWaTncXOJDbF/8ak8IBmOw8KHuN
kxPZHz458nduAPyWImMdxTjRY///Yty9ByFsCy1YWYsTrds2yXI+NQQZ6bQz
7y9yovNruMSiJEfg1l+8k9OHE505bNYwqDUCthznZA76cqIMy+pPs+YjwG/7
s2r0Jic6YGfSaHhrBFyE/XTWxHCir8qfCi+PjIC8dx/Hg3xOpCty307zzSjM
JEe1dhZxIq0ny7Xz30ah6jfkqX/hRNfiBeyuNI3CtQ3x/5WXcqJtajaformY
0NxqXs3ezIn6Uw/57zjOhOhdBU88FjmR7RrOUvUpJpz1OOXzmY2CaKVPkjR4
WGD4hHZQkIuC8kYNoFuSBWPTbpR0KgXN9xF02+0sMH+lcLZDloKk20Ktnvix
YG1D1W41JQqq0NscqBzGgkVOP1lfZQpqOnlF0ukxC17b1f+hb6Kg5mau4YEC
FvCK3tUz30lByNhzSfMfCzoM9GgJeyiI90SVzfYlFuS59o0M7aWgpQGtlQk+
Ak59h8Tbhyho8y7nyIuK5Pw/Nnq51pKC0u85ID11AsRl4w8p2FDQcsPPd2+2
EvDNZ5Lr00kKEm066vPMgoC41Gcd/GcoKLXZJEzhOAEef8w/WLtRUAH37kkL
ZwLkNr50m/SkIOay8JF8H3LebLer3RhExt9cm5QRT8CkscGTU6EUxHD2PHwl
mQC37FWnE8MpyL9jKGbqJQE2t1rmaQ9JvuKGAlbyCahhFn43e0xBQfJalHuf
CdhnFR8elEhBlU2//5R/J2CbyjHF+RcU5KQiLWBVTUDOA71RrTcUdOJY6bG0
v+Q8vcTIO5dFQfxav/JTmglIdpkJePGOgmYfPpI81EGAdHX93q4CCrLa4+6R
1UNA1NY8MZlPZLxxy3efBwjgT4lpO/KVgqbOyjf7jRAQKOj1IryEgmQyTzUO
swiY8zpyobSMgjIW7jznHSf56NDazlFFQSMTH/TrJwkYNBHj0q+hILXnIw8O
zxDgmDNe5VVPQbdT2tOuzxHQKFPz6G0zBV0RWnXOboGAA7eznYbaST7Tp3uH
FgkoZUWoKvVQUGt7KN+6ZQKQtce07QAFbaj53CC6QkDBV4svsSMUZO9ouD+D
xJs2aoRWExTku+H+mVkSp0cLHeGfpKDHDwbXT5BYfpm5evcsBVVV2IQ/IfHD
05UD1xYpaLIcx82Q8YX+vMnOZ+NCKXvfm7GTOGhbmO8YhQuJ/Xj+spDMZznl
7J6NfFyI/0pprhKZrzfVVPgUlQv9Npd01yfrYXmrND0V5UIqbXadFLJel06+
lEYJLmRjpUK9RvLRvnfIjSbNhZSvNy6kjhFgmVu6xUyWC7XHheX6kXxWrUpn
C1LkQueOaOtTSL6NgoLL8ToudPlD0NPtpB46x4zstTS4UEXvFL2wnYA339au
P6fFhUSyzhuyk/quUeUaf67LhVbP7704W0f6eaX4tjTiQmvVAmkzZQSEnUmx
OLKbC2XX3ni6XEwApSZQKtyEC5Wqb3DJ+0T6M3VnBvtBLvSt/sDglizSn0IK
PtuPcqGgXXnfV9IJ6PVh2+l1jAtdtbgnf+UZAbX7cN3gCS4E34nka5GkP989
farowoV87Z6M8d4h+2e1/xlbVy60EMkmsuc66c9/+ou/L3KhP/MF4tXnSH8e
X/WDz4cLFSmd3iBH9k9y8cL9Xb5c6K2tn6sc2V9RsYVK+Te50KYRkQatPQRc
0NczfRrNhaqu3d77lkEA2/nogPuPyPVZ27PsBAkIT/yXez2BCx302K5fykbA
K46Xq06mciGXZdaGmkEWdJdKsZTfcaGo0RN7Pr5ngce8l6JUAReKsI4oMk9n
wfLGGkv+j1zow4l3mk/jWSBzPxSPFnOhT7YysZ7+LDhydCEiu5YLuW7leMmx
i4wXZFWS3MCF7jb73LquRcYryJ170MKFHhaud/ioxIIwGTcn7x4uJGqYmHCe
kwUlXa1a2ye4UOZadvmvmAlbzn+u/07jRpq3Cu1AlQnfE6UF8ujc6EDdgbBM
SSYc+uMNL6S5UWaH3pp2ChPOa2uk31HkRrOPPxsEtI7Ci/nEK+abuZHIYfnp
ypBRkAy+sarxIDcycMnT/PF3BOYTdzuNRHCj6o802k3DYdgxYxClGcONTM7w
/xBdOww3zHW/+cRxoxUtfws7nmHgXdqgSEnmRhcCS8RVfw2BxHHh7lW53Ej6
16uRLIsh2CTefML8LzcakDrB/9RsEE6FuJ/IluJBov3PQo5J9kN6x5nImdU8
qEPkzlGliT4Y3eL01UCRB73XbPn8rrIPLvYdUShX4UH13DMDGoF9cN1wW1f3
dh60JvX39qjBXohfpJwQt+dBK1yF43ave6DaI97RJ5kHHbWi7uoT6AKVCJEF
z+c86Ka1grZpTyfcfBsUc/EVDzKlmx++W9gJW1gXy8/l8KC+Y/vvPD7TCU/O
mmo7f+NBvN8VfwoEdYCryyLPwW4eVF0Qn/GiuxUotvZvVRR50WrHrPxOtwbY
aqy43PaMF71eeyDZp+snlO3Zmo4S+NDb0u7w15U/8OWf/uoBSXxI8NTANq7Y
n3j93u/vPqXyoebSImUl+1IcZGbxdVsGHzr27mNjCrMM7z58qln7Mx+6crNs
/w2+SvzFMVJwQycfksp/vv1q3B+c7zvkIbqGHzkNX+J+kNiAXZbUZyzW86Ow
mWoZ+eUGTA/wvBauyo+qtxq7etg2Ys/AlTsCOvxor6fPjKVkE958RyKFy4gf
leufalS414wzY3f+nTvNjwjuF+xd/7XhtOy4rd2v+ZHvm0r1ds8u7Lpgo9L4
lh/9ejVnlJTQhTftkZWpyuVHK1FSt7d/78IfG5MXPxTxozYsRF+kdePaldc4
8hc/ar//VzQhsxuzm3/es3OEH51lW6kSbO/BdsPdB5NUBNDDKLsEd5l+rKid
ZhirLoDA+c2qdwb9ePDaaa2wzQJIejkt7KdDP/YUHRW/vE0ACbyxFD6e0o/v
6k01WOwTQM93/r6xdv0A/hDEY7/ynwB6cEsznr5+EEsoqbravxRAyQvft15b
GcIRUXctX2YIoAOxBzSdVw9jfo4Rw8lsATTNELvGs30Ys3W9lAktFEABZz+0
3/AaxqNPlSvf/xJAM+Np9w0GhvF3aaVNVJYASojcuDry0wiG0MBV1uMCSCbg
a7t0wwgunOviTZkWQLSCcV/bfyM4qzGpS29FAJnfkdrNrTiKE2JlHziLCKIm
WxNR5o1R7EmTni7aLIiMivh21GgxMXHjSje3riBK93rz6qMJE7uONVYd3C6I
TiczdGzsmNix+uGLgV2CqDv2cFXubSY2C5c4JnZUEKVZz7hW1jDxzyXPPfbH
BFEZjS51uI+JDc/Vab60E0QG2Vst7s4wsZ7ZA35wEUQcdwIe0mRYWIlf9KOr
jyBaeJGb6GPPwk+veKS/9xVEVEu1iLDzLCw59Dua7bogKtwrkXbIn4WFSsPP
xYYIol1nrsWNJbDw/G1BuW9xgkhGPcPFu56FvabOClCfCqLjrZwaIr0s/M/5
14xVsiCy8NgzcmyMnB93hVYzXwmilyFP8hb5CVzDzhso9VEQGTq95/HbRmBW
Rpz9gS+CyDJi9Xf7PQTmO75xe/B3QXTM/afLhAWBUY755GSFIFpqIqY0nQls
a99ZvfEPyden9rct5wjsw38xw+mvIIq8/m94iw+BM51iXKrbBFH9htJg9jsE
LhdS3sXTLYh+Fcp+8ogkcF9hgdyOfkEkR3yQjowj8Cqx1sbXLEHUuvHIcm86
gfXwuffd44JoTl7AXjKLnPfPrkRKzQiigHHvuMU8At8tVjQNXiHr5z7u0FBM
4Ofu75Q/c1LRO4+8ssoyAn+TMaJM8VDRiHXUb8/f5Lz+s6FzoyAVNXz+7VRR
R+D5S/99chKhorXCDO+6JgLT5Rfi4sSp6OjuhsWwdgJrVoR5V0tS0WZuo5Gp
bgKfWZOlsUOBirg6B2obhwl8q3qnoNdaKlr98kzhIRaBE/1qB19voKKDUVpd
fmMELlx/qqRbjYqi9E4gq0kC19dNP5PaTEVJV/5Ud00TePx6iP+BLVTUcntj
2Ko5AlPVpG2Ct1ER41+bG88Cgdc3vdb9vIOKwotkzycvEnj3bQPxKUMq+n16
5C5zicCOmr//bTSmoq/zvMWDywT2bXOsdDKlogJeimj0CoFj74y/jLOgosjC
TZ4EiXN0bgVVH6ainj+vRuZJXNUlcZLHmoq0Xx/1ySPx0L0XsMOWigx3tDIU
SUzZtnWVlyMV2azKrjIg48v3l8++dqaiIjehp3zk/vpRtn+7z1DRcv9UyG0y
X6sdrGypc1T07NemB9lkPReHA8IPXKCi280WX+/NEDg8VvRssBcVPTB+LSk9
ReBXhinGn6+QfGc4JVqOE7iEpb1m6hoZf8nWdhdB4M74H2yqgVT0x8PEqnPk
/+93rNucgqgo+kL8I7VBAktODH2ICyX1DLm/YWMvgbUSfWOrw6loo9FG8aYO
ApubUi/xPKCitnV6J3VbCOw689Rix0Mq4vQ1VjSqJ3BQyiZVr8dUlGySbcf1
h8DPLL7xvkmkoh+q0Ypevwjc+KLvq1Q6FeU1yd1w+f/7o8M+Tw+8oaLTiX16
gwUEFmbj8w3OoqKtKvZ50jkENrJW1Z4qoKLrBkrGUSkEfs976Xl1GRUN9R2p
qAwkcL/fDebnSiramVMW7HmVzH/svnbGHypiKxprq79AYL+mN9/uNFGRf86f
tCoHUu9X/e2GQ1Qk5+NXF6ZHYG/ZqbWaTCpS+b0miqZO4PQoznNyY1SkMe0d
cUSJwAK+8gsLs1SEXHgzqFSyv02PM97zCqFtp0IZVm0sTPlyxj5FUAipVSqF
fK1m4S3aPmmRIkJIvHw9ZaiYheNXRWudlxRC2fmvw91fsvAJZqWF8nohtLu4
VNb+Ank/Cd8ZEmcshH77S4S3TjKxIueB38GmQkhuXzr3ul4mPuJjT/e2EELb
H+Ew9VomLnDwTT1kJYREDvkfvZbFxAGb3n8ROC2ETrrwUehnmFioZv3ctSAh
JPh5x5Tlr1GMjHSRW6gQ4mmIwil5o/hi4Z7g4+FCaMeHkHU5z0ZxfbKThG6s
EBr3GLgu7jOKn1xK0PyXJoSGDv8KnJQdxaoSIq5OJUJILJliZnZyBIu9LXqT
ViaEjLKu5rwzGcHzJqeJwUohxPZL/ESD2ggu9fvs6V5Pxj+3+NJsZhg797oF
+A0IIWNH3UfLQcP4SW5ZdCyfMEqaarmP44aw0KGbuHy/MFoKnqfWhw/gqRF1
DqFDwuiGnuUNKbcB3Hq7efdBS2F068WKtMLeAfzqg2Z5g70watmxS9mfYwAb
KXTW9boLo205f8KvXOzH/v/0h5cjhZHc9qDmH8Z9mAifFteqF0ZZUufjncq7
8eg/2W9qzcJo8nUZ7UVKNx4+ZOy+vl0YnXcz4//m14176Y/KVvcLox914X/8
1Ltx89Ot/rzTwkj6iN0B4Ygu7GT1eYLFL4JOZIu8mTLtxPtPs9t9VxFBHYcT
au4easFKwcEa7q4iSCH52Y83q6tx9/GWZsMBEeSaLXTR79RHEDSweuE4RGLj
Xec05j6BjlztJf8REVSy+ktPbBiGkJ5ywUJCBGmID2VtPfYVNNwKd2jOiqCn
XXf+zvl9B79rcclyfKJo2cvkP/PCcpBIsnJdVBFFuauJt/sCamFHYO0WaTVR
dG53nPxkRy2ccbbg1NMQRfPO4v5nUR18XG+ccElLFO2Lq9D6wvYXnLK3VA1v
F0VPsmkSA/71kPlNYnOTmShaVTv9y9qjCUz6aufenxdFLs2rrGwVOuDaxnDf
tx6iqMVY/x6/ZwfkXDBZSr8oioy9mD8u/egAmeWPbAneokjN03zrNp1OYNGf
8wT6i6IDSUJB9xo6IdrksoR5uChqGmhR1ZTohs7XqzT7M0TRqPfNnbSLvSAx
Xp/T8VYUXXpxPdMjthf26UVqN2WLolivwYlnhb2Q+51Lr+K9KJoRrS/35eiD
oDbWjpxPomji8GYxSkQfqAp/NfOvJPP1SclUSu6HyxdPnaEzRZFGhcS/uKRB
CDFlnd5GiKIkjtJ/xl8H4eEan9P2Y6JoLE1GKa9rEPLqQ1yeT4kis7x/VX8U
hmBi2xvnLcui6J/oG+Olp0NwnnPC0VKYht7fYvF1hA3DtVZfx6uiNCQp73TK
9eUwhL2nOD4VoyHXblPe7JJheH2a7tDPoCFFcox0XxqGwV9b7bzlaWjH+MBU
2n8jcDL6+rFYTRqa1nrzu1h7FC6e4ztWqEVDLzvbOXrMRiHQKMq6XYeGZJ2t
dn9wHoWk2RSrddtoSFlbfOnOg1Fot/15NM+Q3M9ivug9cxSYOgeONu+mIYeJ
yzVBnExYFGo6smxEQ4/k/OSpUkyQ+Tp82MiUhjz5+2/r7WKC9VqhQ/WHaShB
LjSaEs2EM8uxB+eP0tCMqdr1Ky+Y4NMgd1DWmoa2n/q6+KyQCbF3NA+42NLQ
hZDFHsFOJtQyj5hPO9PQId3f2nuUWWCe93gf3ZuG0oNXPku+YMGZCacVictk
vic8d398x4Kbm1TeSVylITVK/E/pbywoeFWwWsKfhnTrTlrwtrJAMfHvP7Eg
EkuM7Uwm51f91oQ0sRAaKsp8e09akgArKefjYqE0NFtcMWOmRM7vD8aLaeE0
5B7HKO7QI2A6WPihaCwN/cpgJBQ6EiBSUm8q+oiGvta/0Gd3JWAjx1M20Xga
Gn1/exf7JQIc/VRdRZ7S0JxAl5baLQKufpiQFUmioQLun9PWYQTETBfWCifT
0Hp6RY1BNAHlHnsNhJ/T0Fql1vubU8j5P0NkXCidhlQd91kYviJgZbjhudAr
GrLxe9rLn02A9ikXEaFMGror++TIj08EmCerlVCzaEjb+hXtQzEB/3VMXqHm
0FCa5MlzzmUEPD12s0cwj9w/4vqP3loCCmL3PRIsoCFpL9OMD40E1NaK7hcs
pKHy8+Hsxm0EsESa2AU/kvzfEvoQ1kUAr3lSnsBnGvLN0CwP7SNA8e7pswJf
yHoHlzfuHCLAoFRdXuAbDR04IFv/dpQAa67pOv7vNCS4selLPUHARcNPd/h/
0FDKilTf+3GS34BbO/hLaSg+xU1//xQBLz6aTvCV09DK3uUvCTMEfJujpfNV
0JB3xJNzqXMEtG5ptuWroqGR0EID5wVSj0vPRPmqaehvpYta6yIBotlnfvDW
0BCvz9GtgssEqLI0fHnraEhOp8V+ksRGG2c0eOtp6Np+1mPyeQscz3zu5Wmk
od6kdcT/vz/yTbsdx9NM+jXzk9USiWO7zcx5WmlIPTb8bwmJs+TEOXnaaegz
g/6fEYnLbVvyuTtpiBV1USyAjN8Xl+zG3U1D1hTnevclAtga/lPg7iX9ym72
TpLMT1pcs56rn4b03qllXZkn9Ts4G8o1SPJVk1EZNUuARTgGrmGyP2Jpos7T
BLj+CpqkjJL8F+wKYE4QcIvX/CWFRfavbflqjTFSzz0S9pR/NDRI/TO+nkXA
h8BWGmWc1O+1ElfLMKnfoqsf5zTJnx8H25keAo5Zm26Ym6EhCT8pb+sOAr7n
bqxnzdHQMOdLGqWFgDjXUY3mJRrKDtLoC/tDAOVHRevvFRrimX2k4VpBwHmF
jDsl7GJIM8ehjOMnAbsbz/VkcYmh29/3SbsUEfBWyzziOY8Y2hZ3a3jTe7Le
++oGCXxiKPmKkX5+JgH/9hCxwVQx5JQ+lDCdRMDjXI999hJiyLA2a3lnIAHc
wgdnDjPEEL+9ws3hKwR4uGqm7pUSQ1oqa/ksLpD6KYwvaa8WQ/+KGp3NHAgY
D7+ULbCWXO/6NFia7E+74cP27Mrk/psP7UxTI6B0j7bAzHoxFMJm82xUkYAn
i5PO3apiqMEqKTub7H8TV2/JD9piaCpCGTPaWJBbYlmSuYWsT/394dBqFsgq
6F5M1RND9zTyrQqLWTDRMPPrvr4Yer3ObvXhlyyS/ysBLrvF0CYJtzLXCyzg
e3ZM1dZIDEWkDqz8cmKB5+LWpoMmYmhmeiBq5DAL9ubObzYwE0Mj+fctXHRY
MCnv1y92RAwpMIXK908xwcHP9gGfpRiy0D0RnNbLhPIGfbRiJYYSUj5kf6xl
QmL4UtywjRj6T3BN54ZsJuxb9N//9aQYwn//fOf8jwnPGm68O39JDJ1f5XKl
sWIU+ks2dYR7iSHu2TZLn7xRUH3XwffWRwxV2l7dVpk4CnkRBg6ErxiSm9m1
8PTCKFTsnePzuCWG7tc4tXWKjsJskYfDhRjy+qGHZuJ7RmDHK7nQyIdi6Mk2
/tVIZQRuPqp6lx0nhv5eTeteJzwCQl6q/ONPxNCazpsn1jUOg5L64LuLz8VQ
/w3NrkmXYTBPcuD3zBdDL/wy8oQvD0F0uJBO9AcxFCtV81jw2BA0+X1yeFck
hpY1r4iXbR0C52My7yexGHp5pXT5xvwgXKE1OHiVkvU56kYsXh6E1Fvm772b
xFCUD1y2cx2A+TMGjlcWxNBp6/lIbYU+2FekgryWxFDhcIaFzVIvPKZKyl9Y
EUPzj1xiDjf1gn7OeMcZTnFU6WM/+yGiF/wXXjhYC4gjKm87y2WpBzjDaQ66
MuIo4ZW7z52qbhDMHbCb2iaOatb5aO461AmrlyJtLlwVRw/lrwuc7v8L/cZ3
y3kpEqhf6iLPk/uvsZOpo/xabglUrJ1IryzIxG3mOt47eSVQ2YF48cZ/Wbju
aIfCVUEJJN2XXa8r9Q5/O6l1ZURcAm1dULDxPV2InwS0KFetJbG8hrqFbzE+
kr/x9gNjCWRbsMGD6PqNi9dVgOxdCXSxNSk+r7oF7wvv2Ee/J4HYI+W/vF/b
iqunxo8K3ZdAAhf/3PK52orbv0u5LUdJoA0MLj6k1IZnnU4/ao+XQLcDHAaq
L7Rj1USOsaevJJBnT0jkhhudOJaxNVmuXAKpWrYSbNPdeFWAWQajQgI9u6A1
vSjTg1P6HQqEqyQQP0Xw4O+dPTjrfVDVyh8JdOBefuFUWA/+dbhuvqNJApWI
n3BHCr2YLcL9cNKQBHroYSQXvLMPu/I+pyjw0ZGykGxHkf0A/sURcm+XAB2N
JwutfnpjAKsu/Ud3odJR70VTxu7UAUyMqa1/LUpHekcn2poGB7Bny3tTHWk6
knZTV1JyH8TXMkui9m6ko+U730W63Ydwe/oLGTc1OppRWihrCB/CKOVOargG
HaHDY4t3M4Ywx6P9ebVadFSR3R+jPjyEg278bbLTpyOd/dEKRxyHccSRPvmL
++moqPrgzg4YwWPmP19GW9ARLZGmHHd8BB/a+3Jz/kE6uvm+Y0TQawRL7Di3
e/EoHa0KF6IovBzB8cpTp4Ps6cgg9tymSeooTp2nvI13pyNtVkeHUPko5prq
1/10gY6q95X7mnSOYhei9EvHJToqts8R1psexRt6w2rWXKYj6noj0FNg4sxK
8enM63RU9a20JO8SE+cnrTEojqSjl3czVAL4WXjNym7frw/oyOad2flGaRaO
sDv1AcfQUfbHU24sFRY+I/1c52McHRnr1PEe2MfC0tHK6u+f0VGhhMVc320W
Dho3dstNoaNSQ4tdCtEsPH7gzKvsNDraYP9dTzKZhX9RX67LfElHfcZ1L/U+
sbBfsIrci2w6ihkKcET/WHiwb59dWi7J5+mxT0cXWfjo7rOPU97T0TP9pba1
vARWZ3/DSPpARzxHBhenZAnccVVNJO4rHQ33rZo7tJfAZk37zR8W09FjGb1X
2w8TuED3fFhMCR3Rr2CbdlsCR0xm8kaV0ZHPtvuuB90JbHh+E/vdP3R0KqOf
YzSCwJkVB+BOLR3Vr/njn/yIwDIbL1wL/ktHkZdojrQkAk8OZM/dbCL9Qf0s
IptJYEejGt3AFjpqCyz58uEdgStSx72ut9HR1dP2D4WKCJx2Qmvcr4uO5E+b
Xu/5QWDal8ObfHtIvtU1Lp+sILC/rOf5K310ND9XfCLhD4GH/aLf+AyQ/B23
1wyvJ7Bly7thryE6sv0+1qLXQuBvW/+u9xyho8upIlYJHQTWeDTlcpFJ1nN1
9FFBD4F5j27pOT9GR+qdH81kRgjsmWupcG6Cjo7c3pR5gkXgLlEfh7NTdKTo
4fDecYzA5h4Pn/w3Q0eGaQ9tJCcJXFiV33J6jo7yX/6ID5km8Dq1RimXBTo6
FnHlXPYsgaPuzlo5L9GRFHdbVdQ8gZeHJGOdVugo1/ZToeoigc+abK1zZGcg
5eggtYAlAjc+P0Zz4GSgVKfda0KXCbyb6+oBOy4G2rQ9OWH/CoGzTsaH2/Aw
UMOhkegyEq/6VlhxjI+BAlL5BZdJHCLfwm8twED7J0LZR0g85b9gYklloLe/
Yr0iSOzUJhN8RJiBVgJnz7DI+FXb9UsOiTJQkY50G4XEoQVeC0ZiDLRR9tbN
ZjI/Y523mtslGGg4J8/n7AKBKTmDpzUYDJS/5cfH/P9//6Su+FRJioFCzh23
xDMEvvbapo4hQ+YfnWkSOEXgbetj+AVXM1DMschHbBMEnk6tQmxyDNT429l0
2z8C5yrw+kzKM9C2U7KnNZgE9ni6M2NQkYHW/jUa7xgisKqMb0/rGga6Jz0/
YdpP4KGH76T+rGOgFMeBS5e6CfxcnGVRsp6BTo8fuGrZTtYXqRz0QYWB6tYL
ikw1EVhO6MTHDFUGYre+scPiL4Ef8dStj93EQNl2UuFbfhH46C2qQ+hmBkrj
GfleXEL6jd04xl+bgV4o1mHBLwS+O/+B/bQeA80PxWrV5BLYxGdC12YbAyll
5f4wzyD5mFQ9b6HPQB+7zx0Kfk76k5nYrIsY6NOzkHBVsh+2uTaJqBoykCTv
J7s4sl9m+mnG8rsZ6JHZlpPfQsh6O2/n8pow0CXvriN7LxP4ZO3ZsCYLBvL6
YlKleoTA8gfSvlUeJNfvqze6to/ArRXts18Pk/k83xoWiki//zh46pUVA13Z
FFzbsvH/3xPq7vB1YCAHo85KmxUW5tpywdP9BAMJe/9SjJlg4W85r16dPMlA
4vKbVu4OsPD2N6sZZqfJfE9a5+VUsbB6Iue/Ve4MxP9gQHwgjoWHZQzWiV4g
1wddfiQcxsIvHnnbcl1iIHu5vzemr7GwfNRQKdObgRZl41ZWHFlY7PbvZ5/9
GUhL8pEU1xoWnnV9fNgxnIH65COUpp4w8f2rKTwBEQxk8uNowt1QJl4X+rro
SRQD2VpfPd3gzcRHXxYptcQykM6e5o/3zZk4Z6Bl4mgi6Q/XDsqd+VHs5rwq
2jSL5IdT0LNy9yjm9Fxj4prDQKWhmyk1qqM4/qbqYsg7BpoWrjx+X3wUlyXr
O/8oIP20xumgTs8IXtdlq73zKwM5ORrv0bk2gjvtntRtqWGgFp2VmB2pw9jn
XFrI0ToGklEfqmYGD2Ohaxn6nvUMNPFm1/yxs8PYIOFTanYzA/lODm911RzG
8c1tnqo9ZL0f1a5dLBzCR6xkJRQnyfzyCt85fxnEpQcSj1LpkujUhfRJrqf9
2PV732ceSUl0q2dAzcqvH1P1VNdzSEuil0nPBr2P9+NDch/mp1dLIsUuLaoS
vR+3MGsSO9dKoiY/jaNb7vZhVij3cK6OJHrvV7w/zK0XS5Sc8z9+VBLJOznQ
1wl1Y6et+i9eREuihf7/1G7jJvwfs3KqNVYSDYtbrbO2b8Iezxx20+Ik0Yf1
Y3f6FhtxAN/NLr8nkggJimCtrY04oalM5tBzSXS5IndfUWY9rr9iFbGYL4lo
xr7ezuG1eF/hxSsHWyTR7v3RbVYW5fjgeUppUJskup6u6fcpoAxbK8bSP3ZI
osXJrg1tb0vx6dAPuet6JVFU37/Hh4V/4lvH2VgLo5Iol3Ovs82vYvx5/p7T
82VJdCzm1ae4S4W4JFMuu4VNCvHopez4UlmAK5yyV0Q4pdCVhJ68ZOV83FJe
l+DLI4WihjalZTTn4tl4mYYDIlJo9Xa1kHd+r/CKecbaIJoU+vh76M5ntReY
mxM8i8SlUHTA8kxIewoWP+skuk5KCu28xFnDHRCPZeQmHWxkpFDm+7Mqdzse
YMXa25kRq6XQrqJzbDkBoVglmLFUIieFntYJz/Ndv4o1t780XVCQQoyy2nd/
q+M+/w+7w4va
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->
    NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
      0, 6.283185307179586}, {-0.9999998592131705, 0.9999998782112116}}],
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171704999623666`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "30"}], ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "30"}], ",", "30"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnXuYj9Xax2mnNoUxCEkZ55zHMAfGzEMq0dBQUjqoVFK2unabIvSWor21
i9od5JTEEEXt5OzHpIRUKhWVpMPU7oAkh7Df9/fcn/u5nq/3d9U/z/V8Zlm/
e32fdbjXWvdaZVw/rM+NJ5UrV257hXLl/vS/z97Hay89frxzgmfJo4VFj2ef
H5wztGbbHUvynD/feur+x9aeF/y8vVrJkqEdnF/36WWdjv6la7Cme5X6kxtl
Or9je3rhsgu6BGcn8znXebVzvr53U3EQrE6mz3Be+N1r64uzCoNVSV7N+dwt
V/7lYFFBUC753xf5Ym+wNkwfaPpEmH+g+dcP7QnUnjB9ZqD27wnLG2h5w3zy
nM8xfbBL9eQdXdGTd55HR2V33dC6q+sM/0eNcQtHrgxcZ/gtmf02PPNtgesM
/2DT59fvWJPvOsPnbBr46J4zO7nO8I05Jz1eUq2j6yx2uc6aHp3hcy1/dIZ/
aPagM3yI2Y/O8IlWXnSGHzN90Fn1RGf043uRDo6evPOcY/UHneFTa71Up9Ed
nVxn+Lpb07++/miu6wy/fMuES3vWyHGd4VMKs865cnsH11l+33XW9Ois+aMz
vNTsQWe1H53htBd0hqM/Oque6IxOtBd0hlM/+fdw7OGdZ/Hz3fsPLMh1neU7
uM7w3M++6zK5eZbrDH+rf50Zs17IdJ3ld1xnTY/Omj86qz3oDO9j9qMzfJqV
F53h1H90Vj3RGT3or9AZTntHZzj1k3yl/rrOPMP+p53rDB+ctLO16wwP+5MW
rrPk5zprenSG32L5ozP8mNmDzmr/HinH61ZedIZvM33QWfVEZ8rNeIHOcPpP
dIbTHtEZTv3h9+DoyTvPS5L1p5nrDM9J5tPQdZZ/5zrHf7eh6wwvtvzRGT7E
7EFneJ7Zv0faX7z/yXNeYvqgs+qJzpSP/ged4Ywv6AynP0RnOO0XneHUN+yA
oyfv7nck9antOsvfXWd4saVHZ3ie5Y/O8JJY/c90vtHsR2f4VCsvOsM3mz7o
rHqis/hNrrOM866zjEuus/SjrrO0e9dZ6qnbJ7q6zjzf7jT2pukzv8lfK3/n
HZ3hvKMznHd0jqePdIbzjs7xfNzPUz/UdcY+rc9wrc9wrc9wrc9wrc/wXKnP
8GKpz/BUz0ulPsM7Sn2Ga3328kp9hmt9hmt9Vj3RGbu0f4bPlf4Zrv0zXPtn
+C3SP8OLpX+G50n/DFcdee8o/TPPvtI/w2+V/jn+u1H/DO8v/TNc+2fVE535
ffU34B+KvwEvFX9D/FPXGX5M/A34EPE34CXib8C1Xmp67SduFX9D7UFn+B7x
N+Dqb8DV31A94/U5M1D/GT5E/Ge4+s/wPuI/yzxA6nOm1594fc709qv9prZz
TR+vz1H+2h/vEf+ZZ1/xn+HqP8NvFf9Z9URn8tP5IHyizAfhc2U+CJ8m80H4
6zIfhOt8ED5V5oNaz9BZ06MzvL/MB9Ue1X2azAd5lsh8UPVBZ9Uz3m/kBXNk
fQN+TNY34BNlfQM+RNY34NtkfQNeIusb8M2yvhFvr3nSb0Tp4/1GlH+834js
ifcbeV4/1b/Q9Q3VJ95vRHrq+leK9bogxXpdkGK9LkixXhekWK8LUqzXBSnW
604Y1zW9rNcFKdbrghTrdUGK9bogxXqd6hmoniuS+ZdP8Lw42S/9OSgN3/3v
xcZ55+/Fkp7n5cZzsmvdOXRHpwTPvqesuPDFl6PvC2+8aNDtuXd1C3LD9yBF
+kDTY89PST0aJ55O9huN3Q74FOOhPnWch+sGzTyfs8K/J55L1v+6ng98tnHy
gYfrCQ08PfUl9Luqe3p+Z67lE37Hxp5PqdkDJ/1Usx+74U8L5/cpL/mSnnL5
71l6ykV9lnrhdsjfvZ7z9zwrL/mSnnd04L1EdIBrefl3fC/0JT06Uy7S813U
Dq3fpOe7xPvVOuYnnx1oOUpETy+H1Cv4VKmfyqnftANtL/Am0l40Pe+0G9KT
P/lpu4OTHt34Dvb07w7vlxyXm3p69LCnp4cPNj3REb3RGV3gl1v+/J7Y5fnK
73v+8fGwjucf90ei+oa9lIv84djP94VT//X3tJz83uWiG5ynfK+A78W71ofX
kvnvXcPzgmQ/fLDwzfC9EF5snHf+XizpeV5tHDvldzwdf+e99MzaTyz5MT/B
c3TP0T2evbNb8Hr4HsDHGOffnZnUq6L1V6d5ueT3CxuE6fzvJZZe7VB7+P0x
Yo9yvivttZP0b/wdTn3gO2cb552/w2lv2PVR+feG37OtW0D5KddMKxec8qg+
6IEOb4pO841TTn7/Y/td7KB+YQ/v/LsU6ROaXsuFnZRjpnwvuD0D7KYc2A/n
3/GOHWqnlNd5A/mdcvf833iRHogdicOj4lzsPcEOnjfurLn2eGFH33/s0+7+
pRnXdQ1GrUnfeHxstuu27/a5380qjTjpB7+4KL1KnS7BpBlV3z++pp2nb3Hk
hVVbX4046Xv81P/aep8XBr2S6Vp5+rW/H7m26+bAOemnj5nyrxXvdw5GJn+3
iadv8tKzD6w+PXBO+tJ//Nz3Tw3yg4uT6ep5+qdnfTHsyKEC56R/qclFk6Z/
3DG4KMkre/qVj0++PK9bgXPS/236uG97ncL8peyEffDLwvSB5kN63c8lvebf
J7QzUPvhpF9k9o8OdfD0TU0fOOlfN32KQ50D1R9O+pmm/+TwOwb6feGk72nf
956wngRaf+Baf24K66GnP6X3P6t3/vk856Tva/WTesu86sGiguMb9wVeP+Fd
Gz8477XahV4P4cE9w5b9cn++1zf4S2sHjj0vp6PXK/jydz+vcvj8XK8/8JIh
Wae+sz7b6wm8QvXei9Zv7uDfXfeX+e6anu+r+fMd4SvMHr4XfJHZz3fR8qI/
/DzTB53h401PdGae+nFG2ox+VxW6zvCqn/evsK5XvusMb5X2TuKWO/JcZ19X
CFrde9q2bNcZvnHHuvIPPd7edYaftbLDFds2tnOd4RsO5DySmJLpOuv+Mjpr
enTW/NEZvsnsQWd4htmPzvDWVl50hqeZPugM/8T0RGfft+24cluf/M6uM/yN
+x84ufxPea4zvKDavoInS7NdZ/jwFo3+Vrgly3X2/ejsfdfMb5bpOsN/+6j/
4dv3t3Kd4R9ee/lXQ39q7jrr/jI6a3p0hh+y/NEZXmr2oDN8hNmPzvBCKy86
wzeYPujs61WmJzqzjnLFS6e99vu0Tq4z/IW3xzy3v2au6wyfPeLrkpxZ7V1n
+IGRlaq37Z3pOsN3nlU8pvHglq4zvMcvi7bedqiJ6+z7tkNe7Lz1uwaus+4v
ozN8nqVHZ3hPyx+d4V+aPegM/83sR2ctLzqrPugMH2B6orPv//YoeqTd0x1d
Z+dHb1rZqizbdfb5VNWGw5p2znKdfR929UXfnpnXxnWG57fb3+7t+s1cZ/hj
I+9auezmSDf4xUl9znDd4AeTOmS4bvAFyfI2c93gM8wedINfYfajm+87W3nR
zbnpg274a/buusHt3XWD27vrBrd31wHOOzrAeUcHOO/oAOcdHeC8owOcd3SA
844Ovt8q9ce51B+41h/f97TvRbnhvaQ+wJ+0+kO54YHVN8oN1/oA1/rg+7ZS
H5xLfWBd9krpr+DaX8G1v4JrfwX/QvoreE/pr+Dzpb/SfVR0djulv4IXSX8F
3y39Ffyg9Ffw56W/gi+Q/gqu/ZXHS8r4C98g4y9cx1+4jr++PyvjL/yQjL/w
j2T81f1SdNb06Aw/IuOv2oPOcB1/4YGMv6oPOrudMv6yb/CJ+JPwNPEn4a3F
n/R9HvEn4ZvEn4TXE38S/pb4k7ovGq/PUfp4fY7yj9fnzGCz+JPwBuJPwtuI
P6n6xOtzZrBd/En2YcbL/Ah+nsyP4F1kfgRfJPMj+AqZH/k+psyP4KfI/Ej3
P9GZ91NlfgSfJ/Mj+EqZH8EXy/xIy4vO8G4yP1I94/1GXtBX1k/guk4C7ynr
IfCZsu4BXy/rG/DFso4BHy7rFbrPGe838oIRsv6g+cf7jcieeL+RFzwr6wbw
i2V9QPWJ9xuRnujMOksFWx+QdaqAdQZZjwpYr5B1p4B1D1lfClhfknWkgHUY
WS8KdJ1H9zNlXcjTyzqP5y/rOQHrObJu4/bL+oyXV9ZhXB/05Dl5+pOlax+J
6u0LxWf0afRWx0R63R7HE6Ojeru39Izd3ft0StRssGP28UnReh37AAOC+/bM
mVPoeo4uqVVh8qD8RPtXuj7Z/9Fo/Y111y/v6XH3t993dj0rPly76Y7hnRPD
G0x+o8aKzqrnCets2L887YG7/vpIVG+x/+aLd45/+dtOUf9g9n+avefNpi90
dj2zzf43ctJufHp9oeuJ/Z0uGb1hV3qkJ/Z3P7nK0Z+vifTsUJSet+NAh8SW
Wjdvq1evi+vJ80j/nX/9/L2ov12bWX1Ao4o5ieZj2k5O/3dn1/PU2dV/6D45
J/FEr3/3G7uvk+tZdEaN0UPr5ibWTxxz9QMzOrqej02oUWXy7NzEc4Nr7t+4
Mc/1/ORwjRlLWuUlWrcc16/56DzXM9U6JPb3eKB3l+8vy3Y9sf/fzW6ePev9
nGhcM/uXvtO7wl0b8lzPU8z+pXsvWD22dr7rif3X/fDkg8cWFrie2E88Bv0A
9lcafOWuLdmRzhVWVFm8ZGFm4tIv60+/eU7kP/RsVbXrjux2icMDKgyp/Uvk
P/B8785HBuaN6+g6f1QtbVCji7ISF9z9xcChw3Jd53rj0n7tvjUr0St799xL
t2S7zjccSHtw6ID2iV/2tGyasbyD6zxvcLVak79qn1g9s9c5z573x+t+2F/l
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
1zSumHLCJ+Y9PrHZwOg+HPiIYVNGVn0+uscJ/v0PIypmXVLg/Q786mEV6952
bnRODX7Dt0MGXdM70gGdPt06Zf/LvaJ4QT9nP6HSrbtqROu8fg9rWXHrp7Kj
OC3477ec2++uN6Pzku7Hvndf0dPbo/OSGg9MeT0O+d0Prn7uwmj/2O+3+eT9
6buaRutHzrvWeX7SddE+HHznqMVfDd8dnX+EowPlRY/f579SVqNidA4XXif9
uadu+T6KV4NP6JeZGNW1vZcX3m9hl2vPb5nl5dW4XMoFv3145Vo/tIjOz8Ir
jbrs3L/Ojta/4JTX59vG+e7uv1r5On2zc1LGhsjPgxdsOW3BlA+j89rwTX2C
Tk+d3sbt13hX7ITfYfZjJ/xV+17YCafeYg/2fjJk2cHMhtF4A6c+kA/8LmsX
fi7e8nvY2lGqfQfqAbx40HdVP/g00he+7suCco+1ifZX4FMOP/hmv1rRPbfw
I8n6H/Xj8FDnqN+Hl8i9E/C0Levu3bkrOocIP23hiIGvbInunYBvse/Fd4H3
t3qInvDq1h7Rze+Ztf4KfXTfAX18Pb/6owNW9I3ul4DvuKJf8zt/ju5pgVef
9nLZ5fWieYj285QX/pnVB8oLD6zeUl7f17D2SHnhR61fukn63UHWb/u5Ztlf
oFxuV8sPt1T7NbovAj5+78JRExu0dTvhna3d+X1l7CNYf3KP9H8J61exE17V
xh3s0f0C7IH3NTvRGc53iZ9HbhVMs/pMe9c4osnSbx2zfhL74Y1svHA/zHia
jafYQ34HrP74+WXjpdbusEfjbfhd3j+z8cvvIzKeYeM7+fPv+lp7J3+NMyEf
96vNfyC9xlHQz/g+uKWnXfl9Lfa7pPf7Js1O0sF3WLnIx+/xMn2ox/D9pif1
Bp5j9ZnfpR5Vse/C78IZ9/1eBeOMj74OaPxpqz/x89etEtutvvn9BvQTVj+p
H7pu4/eZWL3G78JOv8fd2gt2ws+09kW+cMZB7IFPkPYLpx1hD/UXfw974Pg/
2APHT8AeOOMvvwdnHMROeA3rP7ET/qnp7HFgxumfPb6Edi/9PBw/Dfvh+DPY
D8dPwH74qTZOYQf8NBvXqCfwwMZHygs/auMp5YVPtfpGef28uLUL2i28j7Q7
8cfl/vayFPe3l6W4v939I7mnvSzFPe1l+f//Pe1lKe5pL0txT3tZinvay064
px07JopfhB3ML9DBxx3zu7QcjMs+zzG78evIB47f7nE2xvF73Q8zjj/D78IZ
91U/xlm/L9X0wh/GHjj+M/bA8bd9Pdq42gnHv8JOOH4IdsLPsn5JvzPjKfb7
fZA2T8F+OPOa+D1X2V4u7Ifjh9NOPe7Rvi/lguMfUi7fl7f+jXJ5XKb1w5QL
jj+g9ZfxmnJRX3V+Cuc7Ui449Y1ywZkX0P/Aqf+U1/1B6w8pLxz/kPLC8cco
Lxw/h/LC8UO0veJX0E9RDvpP2rOeg8NOOH613wth5aa/JR94kf178tF9f79n
0vIrkfPg/LtC67f1/1PB/IV80Y/xi/Rw5jV+D5iVi/mU75fHxs36cm9DWYp7
G7zcJ/TLfWUcwh7GHe2vtR/X81zx/39HWb7qKP/uhHQ8/wuXt5Ki
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
kXxH7tz/+eg51dxOzFxvCMG/r4f8WK3T6HyoEbKrgnO7c+AHChul538wuAYi
m7coOse9Hn4R+YTMufl9mfPX3vAc2ajov/Wv9Cy3XVXcKv2XHVBeUCm3nlfI
XCdTfLs4uDamePWx4HkZXNjSPxPb4UsS18Auo10eXHsbDT8RPIeKWRTDqI5S
Hu4UXI8sB58aHPPUp12cucZ2OfIVwXXQA+DTg+tOiv1OCY4ba8jXZa7/ac6X
FPHGGHhlcK7WBL4muM6nOPnhYJ1TfW5n4lhF8ckj8vvBNlM2dHq0bR+TOZZX
3PsQ12dGxxWqrY3N/F5mReeIjeFx9Dk0+v6/pr6mPqpJ1oFP0Dhor8wdw63m
HtdF+x2924m5Y5q1yKsivxh59ei4r1rwPFaL5kOia1bqs1h1xMyxfQ/aOzPH
8N0Lv1cxeM3JVvwuPcmd4/wPbq2cOzg21b3+5agUrG+Nirjh0GLO1Efz1i1a
x1XfOCM69pYN/iu6JjZEayPa78v/d43WcdVJukTbBNUQJkXHsRrvlOhY/RV4
anQMvw5urHUgPxCci+3ifm1oY26da0s7K3NNriPtpanX49Jg/apd6NjiYj41
r4r1FfMrv2gSzPxLmhb+Y9/ENTz5X/lhjVtzpLi8bNFH/qVVMT/vwM8E613U
+KL19DN+e2R0veq4aLv6m2yTHBr9DwquX6mmpdxnfDHHNYt38Qu/eYl2cOZ1
IJnee9ViTkpxLIke7/jMOq9nuCb1O9OzKd47qej/SaGvFYJ/83O0jxjE73rA
xySua30aXTs9G94ZXVPtn9l+yY6pfvUZvBw+Rz4oc9yoXLJs5nqF8s0O0fZc
uls6c9yoPLFk5pxIudGa6Dqw6mCnRtt87VOsjq4Jq2b1cnTtUXWqJ6Prw6qP
zYvWd+l9qcw5vnLVp6LrzKqfPCNbn7hWViZzTKuAYl10/VM1rlei65+qfa2N
rpGqbvZStF+Qf+gb7dNVAwxFLqDYOc1c9x5K2z065lGNMc8c56v+8F10/Xkg
fFq0n1WO/210nXkA3CnaF2vf5/Ro/6gaXcdov6n68zfR8bPi6Kty57drMtfe
tRaUmwyItkWqZZ0VHZOoRtc7OgaTj+0THeeozqm8QvmF6iL9ouMZ1Sp/is41
VhU+7j/42Gj/IX06LNqWyaY1oN2d2h/UirZ9shfaMzqi8Gv1aSsUvuZn+f9o
G677nEx7YqGnl0fnXC/wDBdG55WqAXbmNyfD19NnZLR/VG3h0uiYVvMwGm6e
2K7Kn7ZQbKh5zR0vLkP+LnwMsv1pG+SO254uYrHmhZ27gOsNEtcqx0THz8o7
FWcr3lZu2Et6mLjeeGaxzjW3yiWUU3wIXx2dt75In2uic1vlnZ2j41XZzHHR
ee5L9JkMd4Jfhi+LzrWfz5z7twz2A+Vyj2l7bp2WbpfmOCV6n0W1U8XWirFV
w1DdRPWThbTto32o9PEEjiPg87lWo4ife8om5Y7vJdPejWyk6i5LMtunlrQN
o2OP2lpfha2TzVuQ2c7tyG0jGxa2VCzbqrhcca/s6l3R9kk2tGRhg2WLVffp
Gb2vpBqvbG69wu/Irk0obK1+26iwvZqHxoV9Ux1Ja0nPGYp1pfjqvGL9Kxdp
lfr9juXasbnj0eX0v43j78KW3s7xT+I47Y/U9cCK3OO6zHs68q17R+/tvBqc
42tvSP53WnTOqPzrwtxzrbWnHHG/4PE/mnl9ak8tj44t13FeK9i/613PK2JE
7XlNzfy3Ts0c08pnyN/9l9qHHBSdr2jP8XWuXRWtL8oT08IHyRf9ndq3V1L8
EB3vKI+enPk+yscXFe9XOnJ5bt2Tjmg/T+tKOYhipXLBvz8wOgb7IfV7rFv4
0zuLtaE1Itskm1kmdSykd6r1c3YRP6j+3z96TaqeP1R2I/HewZDo+pX2C86N
rllpf2Hf6Hx8H6396DxuR+p1pzVXtvB7pQtfqTqB7JXGpjj/G/renDse/k5z
J5nuV+j5zxzlg+Nd2Uf50mnyX9Hxxmvy07nXk9bPdPmqxH1eR7YZLps619Re
+bv0vz96X0x7E9qDfRUOtAui98W0vyMdl3+Wb9ff0N9SrqJ4VzZTMcyL0bog
36Ratmy46uQTomN+7W1pzjVuzY/iItkR2edV0TG29sgmwn0S73/pmTVGjVVj
VD25SnS97luuTc29/vdCtqGwo4rb5RdUB1HM/FXqmm3rYH1VnVa5kvLHldE5
gvbpVA9sE7w2pEfSncoab3Quo71y2ZMGhe1qGZ33qW7cIjrvU448KPc+peIQ
7Vlq71LPtzG6Lqf6nGqtXxX28Lzce8OKqc7NvWes+Ed1HtX9yvG7wbn3XOWX
W0XXGZQTDcm9Xys/fn2xthW3q96icb+eu04k3VdtWmNrU/jHwRzNEu8NaV5a
Fz5xYHSeon2oQdG1Vu0T3RKdmyhHuRUelngvcnx03VJ+RHUqxfdau9rz31Xo
oPZ8VAdTfL9X5jWmfQ19H7G78L+qA2utK2eXTZDC/pM6rpYdkD1QrWknsnW5
/a7siWrEqlnpnR4QbVsyxa+0V0TnMvKVql3ruxHtgyv31HtsFF3HUwwq3Rsb
7Su1Z6pan/RN60w2TfYtRNel9V5GFHZY+cmftFnmGqb2g7R/Ilut3EY1Yvlc
Pffw6Dq29vtko2U/VQtQLq+xds6LOkBwnec5jSHxfvH50TV/7c2NiK6/ac9u
eXRuq32r83PXWRT7DSviBPmXi6Nr8to31J6b6pzKW66NrvNrr1Z7O/I1ygeq
FrGQYiLlj7L/yvNGcXRMvM+oGoLGfbpsQ/RehvYiX4VnJt5n3BT9zUDPzHsc
8jeq1QzL/U2D8rJ+ub8P6AOXyJyjKQ5vG13HU42oTXT9TXWkPrm/Dzgzc63u
Pekg7UPR+/Lam+6f+7uBfpqr3N9GqKZ3Vu5vSvrKV2auIWtvqG/u7w96w71z
f5fQS3FU7u8M9Pzro79h0L7te9HfP+g+zaJrCKqnfRD9fchZmb+9Uq1ANbRx
ufdUFENenXtPSHFUr9zfYXSDm0bXH1SLuyb3PoTitB3R31doft6P/jZD45qQ
e59AsZlqbaq5aR9zfO59BcVvipO+KHzQJ9E1bdW2z879PY2ec2DubzKUW2l/
UXGF9nzfjP72RnvcK6K/D9Fe4aTcexvKi7cgn5943l5XLJL4u6YBub8XUY52
UhFbKn7bEG0PNV7FBIoNSikuiK7Tqq64OfobD73fd6K/FdG7mJx7H0U5eOvo
mqHqjf8HImLB3g==
          "]], Polygon3DBox[CompressedData["
1:eJwtmgf8VtMfx+8Zj1Ky94jMEoWEqERkpVIkSSqlNFS0NRBCRSVlNVDKKP4o
RaRk7z0jI3tkr/D/vPvc16un576fc5/7u8+955zv5/M5t1a3/m3Pj0VRvKL/
st5HpaI4Te9niZ+uFMUJ4i3FdcW7ik8Sby3eX1xL/L3efxFvHYpiG7W11Gsb
cT19vrva39RB+4nvVft08Ylq30q8n9p3EzcVbyTeTbydeKX2byEer/3HiLuo
vY64udrri5uI9VbsKt5WG13F+4qPER8gHiZuIz5DPFrcTVxXfKz4QPE54v3E
LcQHiY8UVxHXEm8vHipuLe4gHiX+Qu/fi9fp9ZW2j1L7xtreU9s7qn25eKT4
KvHJ4iHiVuLTxSPFr+v39BEv0O+5Xvyt2heIH1D7ueLX1N5bfI/ap4o/0+ff
iQ8Q19G+C9V+jLb/1GdztP2YPrtI21dqv5baf5D4ZHF78UXiS7TPevHF4mO5
PuJHxL/oGN3FjZPvc021byNuJOb+76z/thJfJD5G/JH4KfGz2rm9+GZ9f5z4
MLUfq+2g1wHafkPtfdW+UDyN6y1eJv5V3EPcXfyE+B9xL/HR+k418V46/k7i
p8VXiCeJTxW/IB4vnipuL54g7i7uLX5OvEo8VjxRfIq4nvhgHfszffa3PttC
nw3Q9qH6/F1tX6z3E8Rd1XaEeJ7O5xDtv1af3abtF9U+QdvXq/10tU8SnyHu
L24iflJ8mfgacVuur/hEcTdxY/Fw8dHiM8WHi+/UMRvr+J/os9u1fTDt5d/b
R9sD9Gqk7Xba/1Dt/7z4avF14tPEJ4u3FdcX7yG+QHyE+DRxI/GN4m7iPfT+
tnig3g8Xn6r2w7ie2f33Ov3Ny8RPZffHKeKx4ie0/6XiCdq/Db8vu/9MVvul
4rvETcvzHaPtVXq15P7os0vUvkzfHyEep++fxPno81PF35ZzRiu1b0f/1fae
jA+OJ740eDw8kz0+p4ovFz8uPlI8Nni8PSZuIr4kuD+31fF2EjfU8fYRnyne
U9xEvJ+4k3gvcVPx/uKx+v4/fF/cgvEuXiler+P1FDfX/tXFe6t9Z/Ex4k24
N+JdxCu0fzPxZcHzx27Zx+8VPJ8dq/1riGtr/5riNuIdxA3Ee4nPEx8kPknc
QNxb3EDcUnywuA/9VXyyuCH3R3y5+FpxO/E0/b0d9bd2YByKz9D77mo/Qu37
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
I3kyOONfXtaPd6P9Etkn9WZd9JyB9zxSvCQ4c74tOZP4gLm1cFZBBrE6OPMh
m7ghOotBc6A9yOxfCs4syPLJWF8OzlDIXslQPgzOhMhWyBzWBmeeZBFkEp8H
ewqyital5sJDb15xhv6CeHLhbJ2M86PgTIfskwyCrAcNhZYio/tMfFfh7A6P
hV6uU/anVNY+NMwjwZ4MPY6eJlvDE+INdyuc9X2ZnMctjGW+lJzn3RudL32R
nPctiM63vkvODx8U30MtTs4zV0XniT8k55OLo/Ojdcn5ykPReeafyXnk8ui8
8Pfk/PLR6DxxfbJWeUK8iLkvOf9bFu1//kjONx+Lzg9/Sc5zHonOJ8m4B6O1
yvH6fXJ+uig63/o3Od99MjpPraAhmGui88X/kvPep6Lz1SrUdLRDdJ5aVfwu
2iA6T0VTvU/fKbXW2mS/dk90XpjV/iZzU3TetIl4Nfc2Ov9lMY08+eno/Km6
+AP6UnR+iiZZI347Om+uIf6Qeh2dT28q/kj8VnQ+zfwzsZzPmd9Yl90q+pw5
92eis2v+Jn+bTIK1UjIksgoyiQllfWD+2rAmGJxpsFaIxx1UXt9eZT0YXM6X
1As8Md4Yfd6znN8uL+d35j/WaMaW9YO1Uvwi/gq/hN9jjYe1HjIy1kLxQ+h1
/A9+lDWVy8r6xHxJRkBWgCcnexlRzq+NyvqGBx9ZzrdkZWQMZA14dLI0PD5r
jWQGeP/7orNsxgBjgTUL1j4fLryWgcfGa79aOPuZH53V47HwWmTC3wVnemTF
ZLLfB2doZLVLorNGxgRjgwwK/Y8fwe+RsbHWubJw9kYmyNrTisJZIZlG1jGe
K5x1PB6d7TOmGFtkQPjHWoX9ER4KT3ChuIa2e+ucvy6s+dH+kyrWeD302UYV
ezI0Bhn0phVrBtYWGHNoCfok2T5jnr7KmIjl32esbHgOoNQ/6CP0PDoNvTY4
e4xhLhjzlbI/ri9/L9eTPl69vL70ffp0tbK/0tfp86zNMEYZC4wh1lIY04wt
xhjZLnMGY29Q9t9G06Jtz89ea0SToc2GZnslMgKyAjwF2hPPhfcanq21uH43
q316cjZJJkQ2NCxbG3cv7FfwR+9E54Uc7+Ls9XT0/L3Jmh2ti59Zkco1nLI/
MPecmu3F0ehodfxKkezROZ8F2v6vcD0eVfobfDvfuVI8Pltbb0yN1vZp2V4F
jY5WPynbC6DRp5f+jXVXrkn/0g/Rv8mUJooPF39ReA2hV+mvcnImwPebZP8W
NPyGepudbeE55mr70uxrh2bF+zfN9npofPQE1wevhGedUvodnlsgs1uQ7RlY
RyRjn1z6verimYV/Dx6mavIaANcLj8BzJGTIk8r7x73Bw1ybfb+5N3gIsjQ8
zufReST9A4+F1yITHFn+nobBnhxvTkZGVsaaH2t9rHeTrePpySLwvHgPMqiB
pT9cE53J09/w3Gh/xmAfvFi2d/mK+TN7zZ88onn5+5uW/ol7fll2xkAOQR5B
9sAzCGsLPyNwT3m8muJuwX4dTYQ2aljeDzwmXpNnDMhDR5ftZBhzSv96UHJ+
we8hg6iffE/5/VxDriVzBnMHmZT+FbtEZ1VHZGtHNCZaE8+N1qGP0lfbZmt/
ND5anzmCueLVaG9VpeL8+fbgvJV5imuFZ5qmzw6mDxf2GHiNBtleAw+Dl2mY
nWWgudHeh2RrezQ/2v9QccfCmh/tf0q218BD4CXIQJqLV5fz40HZtZSaineq
WnFeSx+jr1WveD6gj9JXq1Ws1dHs5MnMD2QZNzGfiDtkazs0I9rxDPHcwpoP
7Xd6tpZEk6JN8ZB4v5XR3rJHeb2YY6kF7bO1K5oWbYtnxfu3ivayHbO1IhoS
LdkpW4uiUdGqq8uxNCfay56V7WXRrGjXztm1DM+D9+kifrBwTaO2nZ1d26h5
1L4zs7UvGhWturl41+A1V+aTA7O9NZ4Qb7hPtnZAQ6Ddjs/2Fmh8tH4b8bTC
ngZvc3S2V8Bj4DWOFY8r7BnwDs2zvQWeAm/ROtsLodnR7q2ytTuaHm1/cra2
xyPhlQ7P9kZ4BrxDo2zvgOfEezbOzrLwSHilw8TnFfZseLeW2V4LTY+2Py7b
q+Bh8DItsr0MnghvdEy218ET4Y3IxOi/n0ZnZbtna3s0Ptn4XtlZOhk8WXz9
bG2FxsK77y3ev3DmTvZeO9ub42nxtntkZ/Vk7mTvB2T3dzw4XnzP7GyfTJ9s
f9/s/kQGQBawX7aXxmPjtetmay00F952/2wvjOfGe9cTNy7skfHKZFJkVUdG
Z1V1srMFMgSyBDIvaiU1Ez+Jxk6l3kG/ko/ha+qX8x16jb5Gn0Of4Yfxo/hZ
/BRzCHNJl7Jes8bC2h1zDGsveALWvsnM8Qp4INba8Vt4ow1r7MFjCD24YY0/
OAPHG6HxeTaAzBztj+f5utSDeCHWmFirZA2OtScyHtY+WeMh+2GNjWet8P+s
vbFGx7NWPIPF2h1rgjxbxTNYrBUypzC3dC3rE3kAcxtzHHkBa2SsvbKmyNoZ
a2SszbKGx9oZc/a30ZqGuZw1pK+jNRD1EI+GniXfWFfqVcY+c8CPpd5ED6OX
0Z94wC+D1xTwhmT8zKXMqfhV1gh4FoJ8hrUD1hR4FoLMn7UG1iDeDX5mgbUJ
9Msqbf8bnLcyZ34TrbGGledLBkhNzxV7xN+DPSnekTUPnq2YXXgthDUFnk0g
f2CtgTUQ/P2thfU6npNnWfDAeFE8Jc+moP/xmnhU/AD6H32Nx+RZGDwe3hNP
ytocHhmvih9gLmZOJh9iTYSxzpgnnyJfYG5gjiB/YE2D/Ab/T97Amix5EHkR
eQ9rKKyNk/ewtkI9Zm2A9Yc7sp+Z4NkJ8rElyZ6WZ4Xw4HhdPCV+Y0VRbPB7
XE9qEWvSlYqfGeXZUdZUb01ec+RZTfIr1iJ55pZnb6l5dyY/o8mzmqyhzkte
gyCPIq8inyOvYy5kTpyd/Mwqz66yhju39CO/R49v9B7PeJDvDWNOTc4QeDYJ
z062MCR7rYE1nFnZmSZzMXMyeRLPyPCszIY16eSMnaydNXSenyA/QwswpzK3
smbN2jVrVIuT14zJ68gDydNYf+dZWZ7B4FkM/NAf0c8Eol/HlHqLNV2epyDf
Z12P9T2etfg/rBeUqA==
          "]], Polygon3DBox[CompressedData["
1:eJwt13nAVlMaAPD324osM5EiKkbZ2hgqtNKqVTvtu5n2RKE0o5VRoZVWJMqU
UGkvaU8LKS0qihKpFG0S83vmfn883fP8znPue7977zn3dFO7Hg26p6dSqSUi
SyzITKWqg+fSUqny8k4ZqVR9NpqtZi+yTaw1e5ftZ2+xb9l9rB8b40RvyN8U
DdlYtlbdCHVb2CL2EBvEKrLHWC32kvZ6lpIPkc8TldQ9w54WJZx3PnuA9ZOX
VtpK7f2sPxurf7r8bbGQ1WAD1VVQ15F9xB5k/VkZ1prVYSPYcjaYrWHLWRP2
MqvNnmSfsp5sFuvMRrNXtceLA/woa+H4ibpWjhN4Y/asunWsE3uTtWJD2Xfs
bfYDe4/tZ5vZ4+w91pWNYatYazaRNWEDWCM2WftLlkP+vHy9eEzdNNZa3zC+
lnVkb7CWbAhrzKZo72SXyF+QrxBN1b3C6uh7gm9lfdlc9gSbxD5nT7P5rA+b
wjqwxew4m8d+YSvZo2w0q8f6so/ZI2wUq8v6sM/YU2wee5JNZt1ZVe3/sIP6
esg3iK7aM1hHfSPUbWTd2EzWiY1kW1hvNod1Y2PZJtaLzWZd2Cj2PrudtWeF
WA3WgI1ha9hwtpktZfXZi6wa685ye8eKO5YQf7LZjs3Uva5uu7qJbA+bId4R
O/QN0PeAcd9qv6W9S91uMZ01Z2+wHfJJxn5lzIF4RuwAeyeeM2vB3kxPnnk8
+72sJZuWnjzLeKb72DfxbrBv2NvxnNlBNpUdZDPYLlaGtWMvsVpsYDwj8az2
ef6b+EvMNzZP7FQ/iNVgc+LvN+5ux7+Lq9iCmF9il7rB6h7KSuZ/rANfZM/P
imxRzE2xmw1hNdlc+YfiSzaQVWd7tIfGfPI7z7umZdnzOub3dn3P6qukbqV8
gP7f5RfFX9ky/Q20hxtbXV8PNY+ySewzNo7tYI+wiWwrG8u2szWsA3udtWCD
2FtimtiWvb5V8Bv7tEdpb1P3qroNGckcibnSh/8kcqibyHrHGiL/UWRmJe9v
vMddYt0QWWyx89XTfiH+3ljb2BL2cHoyF2JOdIvzs0bar7Ej+p7MTN6r6dpH
2PeijbE5xbGYl6K7+nHG5mIn5adiXrHx7GFjX5avNG5YrL+sCXuNbWaj2TbW
lE1gW9gY9gX7mo1ne9hUtpXVi3WcfcyGsnWsXPYcGO/3Z8rfFXXZSLZC3RB1
a9le9gr7PNZVtpGVzX7W47KS+RTzajVrz6aqa65ucMw1VlJ+m3bJeFfkP4q5
6ck9iXszyzmOsPfYSfkCY79X+wtbFc8rnoXorO57Nlv7Z3UfqTukbgq72fGH
cDY1+zfmyc+qOxNrkbE945nENcsbquslPy3WsEvivrKLzvMrWy3PKTbFOxzn
ZnPiGRm7kB3JSN6NuunJNzC+hX39xhm2ll0az0TdH+oOs1nyE2rms8PsJ/YR
O8+Ws+PsBFvK/mRr2K+scvb8npiVzOOYzx3ZSnZa3VJ1F9jPbFlsGOKb7nCG
nWTL5WliHTvL+mQm92i6sbv4Y/JjYkGsLWyFvhPqTsX3h6WL9ewcG5yZrK0X
2G6R4ZqOsvna54xdpu+YuuNsCfuDrWanYy1iBWL9YZqpcizd+J0sv/iaXanj
gtgizx3rJ8shPy82xboX6zHLjOsQ2+X5xF52mfyi2Ca/RuQRXZ3/d7ZV+6pY
39XllP8mNseaFOt27K9iHxDfs1irXN+quI3xjor7WG9WkjXJfic/SU/eqXi3
5vuNc+xTdmV8a2KbJM8tbog1M+3/26ZUWf+cZetYrljb2J8ZyeZuh/xasU96
uZo8opC8TuwjWAV1aeq+ZNeJ/ewKNVeLgvJaackesby6vOwmVj/2EawSu47d
wpqzy1kVdi0rwh5ll7HK7F7Wg01hzdgr7Bp2I6vHcrKKLB8rzJqyXOxB9gf7
guUVX7Fc8vziVnlLdVewquqKxz6C9WTFWHt2F6vDnmKlWFdWgBWN7xC7mtVk
BVkxVpvlYbVYIVac1WXXsNrsRlaCPczysjqsGKsS6ysrytqxm2JtYg1YPlaX
3czuYS3Y9awBK8xKsVbsBtaQVWfPs0WsP1vBirDSrA0rwBqxW1gZ1o4VZI0z
kvf08+w1Lda2FR5eNTZMe6G6fuqWq7uNlYs5ygqz5uwDdidrHPtO0d3YQ+yd
+I7J56j7Wt2trCzrxG5mzdjf2N2sGcvP6rP2bBE7xuayU+wOVoH9k93CWrLS
rC0byWqy57Kv5S7WJfbecY2upSirHN82+R3q2qq7nZVn/2BFYj/Orme3sdbs
SlaNVc3ee0yO7658iWjD/hvrQ+zL1H3H7mGN2b9ZOdY7vqEip/xSxw2OG2Mf
FN9kdf/SLqvucX13stqsL7snvvWxV2IN2QB2f3wXMpL/41RMT/6u+Pt6uaba
bDhbJh+kbrW6duxDdpjNZj/FHoxVY71YcdYh7pV4XwyMdSr2LzFO3KvucXUl
WFP9D2Yme60JWcn+LvZ5rdjMWB/UTVN3kFXJTPZzk7KSfVvs32qwF9jitGS/
GPvGkqwW6xP3g3VmpVhzNpRVZs+wtuwDdii+x+woKx/fR+1+8Qzks0Rn7X3q
hqmrEvdP/j+VM+/D
          "]], 
         Polygon3DBox[{{1138, 741, 407, 408, 742, 1139}, {1089, 641, 760, 
          1294, 946, 947}, {938, 937, 1288, 751, 752, 1289}, {1088, 640, 759, 
          1293, 944, 945}, {940, 939, 1291, 755, 756, 1292}, {1132, 735, 392, 
          393, 736, 1133}, {1243, 650, 458, 457, 772, 1159}, {1246, 662, 473, 
          472, 779, 1162}}]}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ssrZnEYB/Df+7rfX+NuQf4AFjaYS7FC70huCUkk9Vqw0NTYymQWNlJm
q1z+AjZkxWKydL/NoETWmv18Thbf83m+dTrPr3NO3cRs70wshPBDPhqiudHl
JeppISTYwVoOsoFT/MJv/MpFjnCV09zgpsybD/iTx/zFS27zmbv8xyMup4eQ
Y2+rnOrNrJGCeAhneiHPWcQLJnjJYl7xA69ZwhuWskxuzeW8YwX/sJJ/WcV7
VvMheraz5NnZJo96C2sl4WwnepyHfHPfDp+4xXOu8TeXuM89+W5eZ4orHOYC
k5zjZ06yngOsYcqOV36yt4hN0TuQcSnUx6LOUeZzhHkcYm70jZjDfvZJtrmH
WexmJruYwSStC520PrQzHr1bJT/2/j/8B0emNrM=
        "]]}, {
       Line3DBox[{826, 1128, 539, 825, 1299, 1041, 827, 1300, 1042, 828, 1301,
         1043, 829, 1302, 1044, 830, 1303, 1045, 831, 1304, 1046, 832, 1305, 
        547, 833, 1306, 1047, 834, 1307, 1048, 835, 1308, 1049, 836, 1309, 
        1050, 837, 1310, 1051, 838, 732, 1052, 1129}], 
       Line3DBox[{840, 1200, 1389, 839, 554, 841, 1311, 1053, 842, 1312, 1054,
         843, 1313, 1055, 844, 1314, 1056, 845, 1315, 1057, 846, 1316, 1201, 
        1390, 847, 562, 848, 1317, 1058, 849, 1318, 1059, 850, 1319, 1060, 
        851, 1320, 1061, 852, 1321, 1062, 853}], 
       Line3DBox[{855, 1202, 1391, 854, 1203, 1392, 856, 570, 857, 1322, 1063,
         858, 1323, 1064, 859, 1324, 1065, 860, 1325, 1066, 861, 1326, 1204, 
        1393, 862, 1205, 1394, 863, 1206, 1395, 864, 1327, 1067, 865, 1328, 
        1068, 866, 1329, 1069, 867, 1330, 1070, 868}], 
       Line3DBox[{870, 1207, 1396, 869, 1208, 1397, 871, 1209, 1398, 872, 586,
         873, 1331, 1071, 874, 1332, 1072, 875, 1333, 1073, 876, 1334, 1210, 
        1399, 877, 1211, 1400, 878, 1212, 1401, 879, 1213, 1402, 880, 1335, 
        1074, 881, 1336, 1075, 882, 1337, 1076, 883}], 
       Line3DBox[{885, 1214, 1403, 884, 1215, 1404, 886, 1216, 1405, 887, 
        1217, 1406, 888, 602, 889, 1338, 1077, 890, 1477, 1130, 1131, 891, 
        1478, 1132, 1133, 1488, 892, 1134, 1135, 1479, 893, 1218, 1407, 894, 
        1219, 1408, 895, 608, 896, 1339, 1078, 897, 1340, 1079, 898}], 
       Line3DBox[{900, 1220, 1409, 899, 1221, 1410, 901, 1222, 1411, 902, 
        1223, 1412, 903, 1224, 1413, 904, 616, 905, 1480, 1136, 1137, 906, 
        1481, 1138, 1139, 1489, 907, 1140, 1141, 1482, 908, 1144, 1414, 1285, 
        909, 1225, 1415, 910, 1226, 1416, 911, 622, 912, 1341, 1080, 913}], 
       Line3DBox[{915, 1227, 1417, 914, 1228, 1418, 916, 1229, 1419, 917, 
        1230, 1420, 918, 1287, 1421, 1146, 919, 1290, 1422, 1148, 920, 821, 
        1197, 1187, 1193, 1192, 921, 1495, 1182, 1183, 1142, 1127, 1483, 922, 
        1143, 1166, 1423, 1284, 923, 1145, 1167, 1424, 1286, 924, 1231, 1425, 
        925, 1232, 1426, 926, 1233, 1427, 927, 634, 928}], 
       Line3DBox[{932, 1342, 1081, 930, 1343, 1082, 934, 1344, 1083, 936, 
        1345, 1084, 938, 1289, 1346, 1172, 1085, 940, 1292, 1347, 1173, 1086, 
        1156, 1283, 1348, 1174, 1189, 1087, 1199, 1498, 1190, 1191, 1186, 
        1196, 639, 1185, 1153, 1349, 1088, 945, 1155, 1350, 1089, 947, 1351, 
        1090, 949, 1352, 1091, 951, 1353, 1092, 953, 1354, 1093, 955}], 
       Line3DBox[{954, 1437, 1241, 952, 1436, 1240, 950, 1435, 1239, 948, 
        1434, 1238, 946, 1294, 1433, 1171, 1154, 944, 1293, 1432, 1170, 1152, 
        943, 1298, 1496, 1195, 1194, 1151, 1180, 1181, 799, 942, 1178, 1184, 
        1179, 1150, 1188, 1198, 1497, 1297, 941, 1149, 1169, 1491, 1291, 939, 
        1147, 1168, 1490, 1288, 937, 1431, 1237, 935, 1430, 1236, 933, 1429, 
        1235, 929, 1428, 1234, 931}], 
       Line3DBox[{957, 1242, 1438, 956, 1355, 1094, 958, 1356, 1095, 959, 
        1357, 1096, 960, 1295, 1358, 1097, 961, 1296, 1359, 1098, 1158, 1484, 
        1157, 1099, 1175, 1492, 1159, 1243, 1485, 962, 651, 963, 1360, 1100, 
        964, 1361, 1101, 965, 1362, 1102, 966, 1363, 1103, 967, 1364, 1104, 
        968}], Line3DBox[{970, 1244, 1439, 969, 1245, 1440, 971, 1365, 1105, 
        972, 1366, 1106, 973, 1367, 1107, 974, 1486, 1160, 1108, 1176, 1493, 
        1161, 1109, 1177, 1494, 1162, 1246, 1487, 975, 1247, 1441, 976, 664, 
        977, 1368, 1110, 978, 1369, 1111, 979, 1370, 1112, 980, 1371, 1113, 
        981}], Line3DBox[{983, 1248, 1442, 982, 1249, 1443, 984, 1250, 1444, 
        985, 1372, 1114, 986, 1373, 1115, 987, 1374, 1116, 988, 1375, 1117, 
        989, 1376, 1251, 1445, 990, 1252, 1446, 991, 1253, 1447, 992, 680, 
        993, 1377, 1118, 994, 1378, 1119, 995, 1379, 1120, 996}], 
       Line3DBox[{998, 1254, 1448, 997, 1255, 1449, 999, 1256, 1450, 1000, 
        1257, 1451, 1001, 688, 1002, 1380, 1121, 1003, 1381, 1122, 1004, 1382,
         1258, 1452, 1005, 1259, 1453, 1006, 1260, 1454, 1007, 1261, 1455, 
        1008, 696, 1009, 1383, 1123, 1010, 1384, 1124, 1011}], 
       Line3DBox[{1013, 1262, 1456, 1012, 1263, 1457, 1014, 1264, 1458, 1015, 
        1265, 1459, 1016, 1266, 1460, 1017, 704, 1018, 1385, 1125, 1019, 1386,
         1267, 1461, 1020, 1268, 1462, 1021, 1269, 1463, 1022, 1270, 1464, 
        1023, 1271, 1465, 1024, 712, 1025, 1387, 1126, 1026}], 
       Line3DBox[{1040, 1165, 781, 1039, 1476, 1282, 1038, 1475, 1281, 1037, 
        1474, 1280, 1036, 1473, 1279, 1035, 1472, 1278, 1034, 1471, 1277, 
        1388, 1033, 720, 1032, 1470, 1276, 1031, 1469, 1275, 1030, 1468, 1274,
         1029, 1467, 1273, 1028, 1466, 1272, 1027, 780, 1163, 1164}]}, {
       Line3DBox[{327, 540, 1299, 328, 554, 356, 1392, 569, 371, 1397, 584, 
        386, 1404, 599, 401, 1410, 612, 416, 1418, 625, 429, 1429, 636, 1343, 
        440, 647, 1355, 451, 1440, 658, 466, 1443, 670, 481, 1449, 685, 496, 
        1457, 700, 511, 1466, 715, 526}], 
       Line3DBox[{329, 541, 1300, 330, 555, 1311, 357, 570, 372, 1398, 585, 
        387, 1405, 600, 402, 1411, 613, 417, 1419, 626, 430, 1430, 637, 1344, 
        441, 648, 1356, 452, 659, 1365, 467, 1444, 671, 482, 1450, 686, 497, 
        1458, 701, 512, 1467, 716, 527}], 
       Line3DBox[{331, 542, 1301, 332, 556, 1312, 358, 571, 1322, 373, 586, 
        388, 1406, 601, 403, 1412, 614, 418, 1420, 627, 431, 1431, 638, 1345, 
        442, 649, 1357, 453, 660, 1366, 468, 672, 1372, 483, 1451, 687, 498, 
        1459, 702, 513, 1468, 717, 528}], 
       Line3DBox[{333, 543, 1302, 334, 557, 1313, 359, 572, 1323, 374, 587, 
        1331, 389, 602, 404, 1413, 615, 419, 1421, 749, 750, 789, 1490, 751, 
        752, 1346, 791, 761, 762, 1358, 454, 661, 1367, 469, 673, 1373, 484, 
        688, 499, 1460, 703, 514, 1469, 718, 529}], 
       Line3DBox[{335, 544, 1303, 336, 558, 1314, 360, 573, 1324, 375, 588, 
        1332, 390, 603, 1338, 405, 616, 420, 1422, 753, 754, 790, 1491, 755, 
        756, 1347, 792, 764, 765, 1359, 455, 773, 1486, 774, 470, 674, 1374, 
        485, 689, 1380, 500, 704, 515, 1470, 719, 530}], 
       Line3DBox[{337, 545, 1304, 338, 559, 1315, 361, 574, 1325, 376, 589, 
        1333, 391, 733, 1477, 734, 406, 739, 1480, 740, 809, 821, 822, 810, 
        812, 811, 823, 1497, 813, 814, 763, 729, 1348, 793, 767, 769, 1484, 
        768, 456, 775, 795, 1493, 776, 471, 675, 1375, 486, 690, 1381, 501, 
        705, 1385, 516, 720, 531}], 
       Line3DBox[{339, 546, 1305, 341, 560, 1316, 362, 575, 1326, 377, 590, 
        1334, 392, 735, 1478, 785, 737, 407, 741, 1481, 787, 743, 745, 803, 
        1495, 817, 804, 757, 798, 801, 797, 802, 799, 806, 800, 766, 816, 824,
         1498, 815, 808, 770, 794, 1492, 772, 457, 777, 796, 1494, 779, 472, 
        676, 1376, 487, 691, 1382, 502, 706, 1386, 517, 721, 1388, 532}], 
       Line3DBox[{343, 548, 1306, 344, 562, 364, 1394, 577, 379, 1400, 592, 
        394, 738, 1479, 605, 409, 744, 1482, 618, 422, 1423, 746, 629, 433, 
        1432, 759, 640, 1349, 444, 651, 459, 1441, 663, 474, 1446, 678, 489, 
        1453, 693, 504, 1462, 708, 519, 1472, 723, 534}], 
       Line3DBox[{345, 549, 1307, 346, 563, 1317, 365, 1395, 578, 380, 1401, 
        593, 395, 1407, 606, 410, 1414, 747, 619, 423, 1424, 748, 630, 434, 
        1433, 760, 641, 1350, 445, 652, 1360, 460, 664, 475, 1447, 679, 490, 
        1454, 694, 505, 1463, 709, 520, 1473, 724, 535}], 
       Line3DBox[{347, 550, 1308, 348, 564, 1318, 366, 579, 1327, 381, 1402, 
        594, 396, 1408, 607, 411, 1415, 620, 424, 1425, 631, 435, 1434, 642, 
        1351, 446, 653, 1361, 461, 665, 1368, 476, 680, 491, 1455, 695, 506, 
        1464, 710, 521, 1474, 725, 536}], 
       Line3DBox[{349, 551, 1309, 350, 565, 1319, 367, 580, 1328, 382, 595, 
        1335, 397, 608, 412, 1416, 621, 425, 1426, 632, 436, 1435, 643, 1352, 
        447, 654, 1362, 462, 666, 1369, 477, 681, 1377, 492, 696, 507, 1465, 
        711, 522, 1475, 726, 537}], 
       Line3DBox[{351, 552, 1310, 352, 566, 1320, 368, 581, 1329, 383, 596, 
        1336, 398, 609, 1339, 413, 622, 426, 1427, 633, 437, 1436, 644, 1353, 
        448, 655, 1363, 463, 667, 1370, 478, 682, 1378, 493, 697, 1383, 508, 
        712, 523, 1476, 727, 538}], 
       Line3DBox[{353, 731, 732, 354, 567, 1321, 369, 582, 1330, 384, 597, 
        1337, 399, 610, 1340, 414, 623, 1341, 427, 634, 438, 1437, 645, 1354, 
        449, 656, 1364, 464, 668, 1371, 479, 683, 1379, 494, 698, 1384, 509, 
        713, 1387, 524, 781, 782, 783}], 
       Line3DBox[{525, 714, 780, 510, 699, 1456, 495, 684, 1448, 480, 669, 
        1442, 465, 657, 1439, 450, 646, 1438, 439, 1342, 635, 1428, 428, 624, 
        1417, 415, 611, 1409, 400, 598, 1403, 385, 583, 1396, 370, 568, 1391, 
        355, 553, 1389, 326, 539, 730, 784}], 
       Line3DBox[{533, 722, 1471, 518, 707, 1461, 503, 692, 1452, 488, 677, 
        1445, 473, 662, 1487, 778, 458, 650, 1485, 771, 443, 639, 820, 807, 
        819, 818, 1496, 432, 628, 805, 758, 1483, 728, 421, 617, 788, 1489, 
        742, 408, 604, 786, 1488, 736, 393, 591, 1399, 378, 576, 1393, 363, 
        561, 1390, 342, 547, 340}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
O44o5pCjH6j2tpnl+PXhYLU5fYpDQx2Ep1ztrddv3G2y9OSZNSFQ+atDRZOJ
6eA/ZMIFvX7GbtnsS0NqeoN70I6XDztnwKtvocv1uqPjByz69XXbDLNnXNy+
4aDynjrVXqTHIbUHlvZZdSYQbYMG76zjotTPolFlvZQ8djVrts2uHk8xaEHN
Q0ftdXC6+otsfR2xun2jyyPLaNx5efLuiRXSIGJpRsJrZX76+IUf4pvEY0Ke
q04jPFJgUejSjauV8Z4nNtZdbZOE7V5vG2rXPxnmPfEv9lY5v/Qdhb7bEw9m
2zW9i15XHbXYpZteZ53luzNHX1Gi29x2J72ioMi3fU3139n6jTkUoP++1vxG
134PzoZB/rn2Jz2fKHaa//FGry+qUX/2j1/L7sE1zznvfuXPgLFjmy7Sfz+q
4VbpR8vHrtBpffbnns4ZcP/Als4FTinxme+Ka3S5CBwx7tc0r+w06DG7Tm0X
pS4/qT4l9p/+sbh1pXM6Dk+FKg/P/HvjXAZM2WUWW2twIv5lfq62iVcy/Nzc
2KSVUq/tBjx2++qRjCveJ255vigR8s0w7eug1OtCL6JWfQtPwcUbQ+od8ItT
n+v1/uBRvY4572CPy3pds129f3P0PKv9sjxtJkbAsPWdPfe9SYPzR09s1+tV
Ntk1ijIdGQgWCV2alz6cDnn/Cbin16H1elo8f/KVMzD557TeW9dlwIAKS+fH
6O/ZZdS+0i88HqMupCdtGZoCL88NGWZyLQPW1TwTfXJiMq7bWupIR9MkAPfK
1TtfyoA5lnlslyt4xbFvlkNnnzgwcamToF/n1eP6326EK/m5Tdefa95FQ4+E
mL/KK/sdEpPxs1DNWLAv/LB7+KJUWOIp9AZm80Z0NO8bBrWWHuiTlqyDLdcr
59TZNu5Fsq4Vuw5XVhWdvkrpt2xXNxPfBwN8K3W9l4J/fTvf9TDGQXADMd5s
Y3aPRXnScOyqsMeNB0VDtx8zcnQv3pYX52yOTcPwq9OGJa+NgBFHS+XoNM5E
BxSO6xsFiReW3bw2Ng1G/upjptf1pX76MXSHlQ43uaWszvtVyUPfzryLVtYx
tX61ZlmMDi/sy3/q3bAwMD98pZ9e1+F4pOXzdbfTscCrvU3WXfUH8ynZ4/W6
DuoTFzP8P7X2hS/WSn9ntmZx64MVEGtfO/jDX3kv5Zulrt+j9HG+41uGH7by
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
     "]],
   Axes->True,
   BoxRatios->{1, 1, 0.4},
   Method->{"RotationControl" -> "Globe"},
   PlotRange->{{-30, 30}, {-30, 30}, {0., 42.426400810277585`}},
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.617170559558775*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
dUn8ftkrSw9U7m468/tqgyr528tlm871by75R/sy6YnS/c6vvuOGTNP59ven
XDZzQnpiXpH9D7Ut3M10fqFKqTY7jqUn7hr27KIKFaJxbe+4qbdUG9g10WnH
hfN7Le9qOs9RvGiO8x/Olf1reryRuqlpF9P5Ptk/8YsbtpebnG46/yr7a5c8
Wvje3hmmM/YPf3x6jxnjM01n7CfPCp1flP3Dz+mz4mSfaFzbJ/vvfmjC2HmF
o3Ht5uR31DZRNe+7acemRf5w+L20Szy3YWarhaWyTefwu26fSCk2fdXY97qZ
zvxOSeaHdDWdG88qe87MvR0S2yYvXfDCietN55e7XphR7eOOiaeuqvrYpvmd
Tecq5180762lnRI7d762+OWh15nO8oMT3h8eIPtf/Hbh9sNZ7UznnbJ/z/tb
hs9f2tF0Tpf9g7+v8XL2911MZ+wnDxCdsX/tnKaJl27PNJ1fkf3fjn+udbFq
kZ92uey/72CrjBZHepjOY5Lv/dpEl/SR9xSrEc3vUpPvN0iUf3TIx78PjOZ3
4XsMEs2aHBz46ifR/K6y1pnfHvHV8B/e7WI687s12f90NJ3PTn6nrRIZLX+q
8WuXdqan5m+aT0fzuAmyc1KyfQamZ0PZOSLZDlubni/JTvJR0RM7i/x68ZB1
la83PbGzlto5ev5Ndt7Z/eCcE62i+cV9yX6jdaLFzz2vmNUgml+E38XViWcr
bF/TqGUUTwjve01i+85rK5btEsUTwvrrJd5d+PO/+98axROOan1+T8Pb1pZo
3cns25VsPw0Te7o89sUPZduanvxOT7bzFqan4g6Jp1z8obHsHNLs0Om56+ub
nlVlZ9GkPmmm5zmyM9ShjemJnbNyS5WrN7+T6Ymdg+9NWVLwWRR/+ER2fq/+
HD3fTLbbJomevdccff/7KP4wPWn376vKlW18duX9UfzqGa27ruvQYMHBz6P4
1e9Je8omdu+funvf+Ch+9azWqe9+u/34KXd0cPErfutYvOqA7jt0xgOFc2df
Zfqs1n1HJnlj06fIjvC+o8ZMOLWvaCvTh/vekyzfwfS5MqnzZYn0fRfvfXX9
/4tf7QjXY/OT9UT6bFE/9KP8DfR5X/b+LI4+h7ReO0b1oM9F4X2DTN0XfSZq
/f9e2YkuD6ndTHXth9+JyfZ2jemzT/fdlmy3TU2fFN13S7L9R/pw32F6L+iz
PXyPwQ69R/TJ0rr5x3rv6HNqQ/J9pV2odoI+S8J2FfRSu0KfhOw9pHaIPlvD
dhvcrnaLPoeU7/KI2jn6TFc/NcP1V8/pvvOS40hz04ffyfpO0Wez7rtD3zX6
cN+v1A+gT+HwewyWq99An7Lh9xt8oX7G4p3h9x48pX4JffLDfixoqX4Mfc4K
+71gmPo99Jkue/EH0KeC8nuKql+lv3ou7IdtXwa6HdZ4ediNm3fLnolJf7KN
6VVM9nTUeGFxdf1+qvEF3bDnNY1H6IY9jTV+odvV4TgSXKTxDt1GhONO0FHj
I7pdGo6nwTiNp+j2Yjj+Bns1/qJbajheBx9rvEY37GV8R7dOoT8Q3CZ/gP49
bJ/tgq/lP+Cf5IX+RvCs/A10nin/z69vXiL7v5A/g87Py/7H5f+gb33Z/7n8
Jezm90H5V+iM/aXlj6HzFtn/tPw3dO4t+y+Tv4fO34b+YYB/iM7Ph/5kgD+J
zoND/9Py/NG5XuivBvir6Iy9jPs2rwn94WC8/GF0Lh76z8Fq+c/ozDq9X6/f
I/s7yD9H58Wyf4T8eXTG/kfl/6Mv9p+n+QJ287tU8wt0HiX7T2g+gs7FZP8R
zV/Q+a1wvhO8p/kOOof9Q6bl+aNzEM6nAuZT6Pw/4fwrWKP5FzqvC+drwcWa
r6HzDNmLP4DO2eF8MFip+SA6kx/j82TelP33ar6JzqNk//2an6Iz9l+v+Sw6
Y/+Vmv+iL/bfpfkyOvO7UfNrdM6S/YU0H0fn+8M4Q1D1wOihDw2L4kjXKZ+r
qub16FwmjAMEbysOgM7KowzuUdwAnReEcYZgueIM6HxTGJcIshSXQOeriHvJ
f0DnhOI2/KLzJNn/N8VJ0Bn731FcBZ2x/4+0MA6Dzth/THEbdMb+uxXnQd88
2V9BcSHsWaLnGCc/hOf6Un+fI+70T6A/7+uhM/DqxFkVp6L+0fL/H9Y4hW4H
NR/Ur5UfrvnLfZq/YP8I1TPejXeFNe+okmyH7aye1+QnPye/gvs+qHnTQ/JD
7P3Kz+8nP5/7LlI9s51/8rbayyT5J/BtyhP8wvl1n8nPfzLZn7c1XkL+Lf4e
7fNy8Z2Or5XfPlb+M/xr+YGeXyN/8ivVQzv/TXZ+JzvhLeS3j5HfDr9T/uRY
x88K/fDggOpBZ/JdH5Xfip623yK5blsrimOr/rvcfOHicL4QjHLPVVR+3XDN
s+Dfyj98UTrzfsnbLXZXeF/sLy8/8CzN4+AbZNdMN0+knpf1S/115DfeqvZD
+Zc0H3hZvxb3k9+7RO0Kbnnry/5vHbCR6Zam+oepfuy8Rv7YMM3r4efID6zt
vot75Kf9Q98Xdi7S9/Ck+y40fw+m6buz96h6Jqse+o2a6g+OqR+gf+D3F8fV
nwTVXH9CPJx8Rbe+kGB9Ie5XRPsU4nmALZTv19L51anKw0q18vD/vBHqT7sK
/12J5ro2neG6tvLkCZRRHgvl4dcp7wWdbT+78hywk/ag+IFbp2sRNHbP5fcR
wAfquxupdhufz1dvzrwePk7lprry5HHP1feKbu+rX/o02Q/83cqTv73Wlbf9
NOoHeC7ycxLSAU6/ccqVPxDOZ1eNU/wBXlRxhkOyB94hjFekjXflK6if+cnZ
v1p2fuh0GCs7/6H3Bn9Bdr7sypM/fljzfnTo8Floz3DZA9+h/vxz2QOvr/68
RLK/qmP2W/6mG98ZX04fjZen3era7CR/XeOD5Qfz/bF+yncI53skz9XifFqH
JS8TTr4reYRwy8/UOG3zSOWB0D7g5L/xPG7dzPJ14OQvkV/i6ycfAk6eCev3
cPIiWJ+x59Lzsg7mdbN8bvmzrKva+TzirJPaOTzirHfbOTzi5BvYOTzi5LXa
eTri5GHaOTzi5A2ip1sfi87hESfvy87hESffyc7hESc/x87hwR7Zb+fwiJP/
YOfwiPeI6xZ43dCZ+QHr2ugMZ90ZneHkG6AznHwPdIaTJ4zOcPJa0RlOHiY6
u3Uw0xlOHh06W1xc9aMznHwndIaTn4POcPJJ0Bn+SFy3wOuGzrbOrLwCdIaz
jo/OcPLq0RlOHjs6w8m7trxecfLl0BleJ5ZnaHmZ/N10hpOXiM6+fnSGkz+G
znDyndAZTn4OOsN3xnULvG62z0f+BftN0BlOXgQ6W36K8m3QGU6+EzrDyWO3
PGlx8q7R2eYfyrd0fhJ/N53h+EXoDCe/EZ3h5OOhM5z8sUouLkh+keW1iI+K
6xZ43dAZf419TOgMJ88EneHsK0FnOPss0BnOvgB0hpPHjs7weN61+Z383XSG
42fa+Tvi5IuiM5z8RnSGk4+HznDyu9AZnhbXLfC6obPNh5TXFD+/K4pjoT/l
yeeJnwMW5fXwXijPPqD4OWBRPJL3RXn2s8TPB7N9MPYeKc8+jvi5YdgfnRtG
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
+wm9n7BJ3yl8u+ISfKf4/5y3wHcKJ+7BdwofoTgJ3ymcfZ18p3D2M/Kdwncp
DsN3CmefGt8p8wvOf+A7hRMX4juFE0dqou8UTtyJfadw9p9+ofHF9l+qP2Sf
odmjeNez+t5tP7riYx31vcPZ/8W5FcyPOL+C8xcs7q14HecFwInvvarvHc4+
d/Zpw4cqfrhO3zP8oNrzKY1fFs/XOJIufwHOPlP2VcLZX8m+QTj7Bzern4Gz
3419WfDfFF/lvAn8Us6d4HwEOHFd9vPbfnTFgcdqPwmc/enLtN8Dzj7rzepH
4OwvPqn9tHDbV6v5BZz9pJrvGGe/JPv64OzvO0v9m53Xq3g7/Zud26f4PPt5
7Bw4zaPZz2D7yTRPeUvxJcqzH4H9A5RnHwH7ASxfW3En9vnA2e9z0MUP2e/D
fh76W/b1vCr9qYf9O+zboR7277A/h3rYp8O+IPpb9gexT8neo+IGY51fSl43
/hP+WNNT6XsLb4rOibK84lGFlv6yPzonCr7ntcdeyWvWw8Z1eN+NNbr23xad
EwX/48ZO825aH50TBf/ggqUDdl+abX6iXx/hOeEdJuZ/ctnG6DwoeKPX72u6
Z1cU37F9FfOn1t3Ssof1R/D5K86rtexIdB4U/OlxxTMWbIt0sHzdnlvXpQ2K
8hftPLOKu8b3nxHFteGd5syrvrlIlDdm+1ZrbWi3d2O0zxHe5OU5ibHndIvO
ZXXrI3Yuq3je0klVS5SO1sXhg1J7FWv2ZBSfgrfIO5j7W360vgif2uzABd/O
jPYtwtHBzqOQHleteGTQjOLR/lk7V2Ba3dM5raI4PvyStZs+Kb0n2j9ruq77
58JhR6Nz6vy6iZ0vIb5sT+oF86tF+17h9WZU7PxmvSjuZvtT9bw8F3ye3jv2
83z9a4xoP6VzdA4MvOzSC4YvKRXlgcGLtOlzzebd0XkF8DdkJ/bAb9N7wR74
arVP7otd/Wq3uT5zQVurB95H75164A3V/ilPff6cDXh7fUfxc2JTCv76nNiU
gr8+Jzal4K/PiU0pIA85vs8opeCv9xn9Od9Xu4+f+5pSsFrX8XNfUwr++tzX
lAJ/7ivvjXEtfh5sSoFv9/RD8zfNyetVMjoXwvLHPrul0K+/Rc9r/Xz+j+lr
93eI1rfEX0x+79F4Aw/bVZTXBe+fc+TvlatGeUvwbe/ctPHg1ujcDPip1vF2
aOcT6/tCD3hD9TN2zpX4avXDPC92PXX+8ZF3/hitF8KHBPseW904yleGN/1y
9qFhc6N9oPBctWfsh5+v7wv74RXUb2A//Dn1n9hv+W8aX+z8Z91/V4ebig6b
G51HAX9o5vq70/ZG50XA+6gfsHOYxVPUv9k5zOId1M/bOcziuRoHua/5/7LH
8qHFB0tPm++Jj1W7wh54dfXD2GPn+ms8wh741xqvuS/1Pan3a9+JeCu1c+qH
99U4aH4G5/3IT6AeOwdX3xHl4Y3kb7h+x/Y32bnr+i6buvJ+/46dcy7O90s9
tGv8GcrBGd9dv2b7VqgfTj9A+4PzvZh/o/aIv8R97XxTvS/+PZxx1vWntr8D
e+D0P9gD5zulXcJ3qx1iJ+0U/w077TwStXPbdyReTt8F9cIH6DvivvCH3Xdn
51o5eyxvX9819sDxo7AHjr+BPfAL1c9wPzjjLLrBp7jzeeD0b9gPHySd+R7g
i1x7MD9C/S3PBccP5LnMT1R/znPB8UN4LvhujRfYAR+q8YX2A5/qznGCl9Y4
hQ42f9G4hg62zuX6K3hL15/YPM59p9j1szvnCrvw/9HNx6ns/yMge5kX2P9H
QBz/2f4/Ai7u5M+nv1HthPrtPFT5b/FzpdoH+OHUD8eP5buG4+fw/HDGd+yB
l1Z79uflM35hJ++B+Q52wvGTsROOX017g7/h7Pf5q9jP9VS1W+yHM75bXrg4
46w/75/xzs6FI66ieQrPBWdeEz+3KsOel+eC45/zHVmeqtqJna/n4kje7/T+
FtcN3fwOjj+DDnD8CnSw/w+Pxgvv//bR+IU+/lwC9IH7eS6c+RH6wJmnoA+c
eQf6wJlf8J37+JL3v70/avdVP4lucPw9dLNzpDR+oRsc/8fO3yNPVf6Anzfg
n/j/X8RRdw6M7RNUf4udcMYLyqMT/TCc56Yfphz1TXHndcBXuv4aTr/t//8b
zC/s/3si/bCT+v36r80rdM18xM3rbF+kxa3EmQdRnvsz76N8fLyO5kf8O543
/v8Niey1+J2uGafi5wOkFHym+3HN/d91nH9H+eXu75T/X1pQQ9w=
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
TX7+TWmrJOdHH5V8beVzO3Bhsh9R7qM4Q/FGRcZU4Vp/o+0S1oSqFB1/j5Cm
Qftk5pz0B8bcKh/N53X0z6DdKL8N71Ly/DTM99TwZP+yUv49X7fyUack+6ZV
9F+U7B+fhScmx13PwWfIDsNPyV4mx2bysZclx2wv0D8Z7gY/r3WSHJtt0H1x
fT/pGdIeEdYvVtPfJznf194ZlKwnPEH/wOS19Dh8XMlzfgU30Cisuayg/8Rk
PeExuF3J1zaBMb3p3xdeTv8M+s/VGPp7JOs2isNPzp/1gfBv8JMF5yZjw/qF
YnLF5hvoL0v7S7LepXzk62StQ5qHkl9pL8ovipl1XSW+pczarHKEv5N1Huk9
Y/j8RMn50RfJepfyha+StTjlC38ma7/Kg35P1n6VH/2VrCErH/kjWQdWPrIp
OUaSHvZlsp6mfOT7ZK1M+YI0C2kXb8j/J8dCiiWkjSr++S9vgvvDr8KzkmMh
5UF3JecCb8KLknOTTXl8KL+kGPVB+kfCm+GfkzVA5X0/JeuHyvW2ww8UnMv8
mKzXKX95KTneky74YrJv/ZD+H+ClBec1ypn03S94jiOZw/vzHOrN5DhTOZ10
wjvgrUXP8f3wdvhx+D7t36J1S2mGn8n/wjfCG+FH4DvhD+BH4fnwNngJvEDX
A98Jz9T8yJ/JFmitwqvyWOU4rmEB/Tdo3mTrtN+L9inX0n+h9mzR96n7fQVO
2pS5r5lP//VaJ0U/Sz3TzUXfq/zOO/B7ybqo8rh3k+Mf5cVbku9dc/BOcoyk
HHljckz+cea8XOv8d87zBv03yRbRf3NyjqA8+pNkHVj548fJOrDyxPv47hz4
bdlY2Rv4LfjT5PnUvC7ObPfupv2I/oUF55UfJuvGykOlcciXtaTtl6zv1YRn
Jucsytmfha+At8Adk7Us6S1dclshv9Ap2S9I22mTrL9J82mdrO9JI+qQrHdJ
k2mfrGtJ52mbrLNJz2mXrL9J85mW+2LFRao1fF2wbtMqWT+UHqWawveK/8L5
nuJM1UKUyyn2UH1C9YhvFYvTXptcB2nMd8tm1sl3oL9MZtsScP9kfbgWfYOT
dciD4GFwS7gOPDS5VnIIPCRZnzwYHpCsA9eGuydr0dIQuiXr29Kmuibr0tK7
ymWucZTld49O1palie2Qud5Rhv4dM9d9yslWJ2uq0tbKZ64N7Uh/y2TdVfrb
abmvlB9ZmKyZt6H/Ovg0+HB4dXJso9xFOaNiMulgyiW1R6RNKdbXPkqMzTLX
pFI4FldMrpxTeavExAG0j9NO0Jpk7IpkPe0d+LnkvHJr5vWqdVuevne0N7SW
Sq5HKDaVDqZ9pf0lDSJlrtmVwrqE9HNpYucnxwAN4AnJ8bNiA/kk+SbVqC5J
1oQbMuZSuB/cCD4z95WKK2Yn17+a0X99cr2sCXxrshbaHL4puV7WVP4kOe9+
Hz4rubZ1mPZRcm4r/6sa2RcFa5XKRRVLqH42NrlGVi9zriuf/gX9pydrMofS
PzK57lYXPhvuCtfXtXH/55TsC+5N9qFt4TnSgkr2IyPC9m4gfErYng6Cn8rt
uZ71yeH6wYlaz2Eb2l++I2xHToKHh23fAHhNsg3sqfUQ1jW0RwaHaw+96V+X
bLd1zrXJ9rYXfE64xqD48OlkW32C9ku4ntEHPi+cYys2uCKc/yvOuSysMSm+
nZzrUIqZLwjn54pDLgzn5IpPJoTzecUe48KxrGLay8OalGLpKWEdSvHztLAG
oTjqyrBGoxjpqrAuo7xsRlivUbw0PaxHKKaaGta2FKsPDddv+mrfhe3yyVqz
8Nsl60IfcFwAt6L/oWQ/1QFuEK5Ryc48nOyPOsLjw7G7Yu/zw7GU4qtlyXWf
bpnjSeXlu9D3QrL913wuTa4fdYWXJ9eGusOPwVPhYzLHtIpzFRtLQ1Te3Un+
KLnGdGxmHUp6VA94dNhnD5OtCutuskUv5pqX7OfF4bhQMeSGsEYm23V62JcP
pv+MsC8fAp8brlcpPzo7XM87RXYurNPJpo0K+/uh2rPhWtpweBt8IdxaezBc
0xohWx7W9WRL13P9swpenxeFdSjF55PCWo/i6kvD2pPysv7hmED3q1qY5kfz
pHxJeZNyhJ6MmVpyrbBvOJbVfPYLxx+at6vDWpXytW/yOFNxaftwjUq299vk
2qXu5bhwDV7zXz9cX5T/bRiuicqPHB6uNcoH9QlrTHqm/yTnJopje0n7K7lm
qhqScjvpM8XkOuuhtB3DOrzsWIfcnsjWqRar3L9xsgar3O5V/l4vXK+SzqA6
mXJr1bgbh2uuitVV69QaXBOur/0hv6kYNly71TpUvUR1E72T0Ttcx9Ua7hTW
9mV7Vc9QXUN6SedwHUG297PkOF/xTKtwLVD2s0W4jiub2Tr87oLspGon0pO0
1xYkaw5aJy3DNUXZ6oHhupds0aBwnVX27ZKwhqh8SrmecjvVWCaGNUTlaCeF
a7Syb8qh5CPkK9qE35mQP2oXfg9DMUbb8LsR8jtHht+HkD/6PLkmqz3Vlf6J
JdeJDgvXC6XbHBquEUr/OTq38/LjPcLvcMhW1A3XCKX/HBt+50O2pRs8qWQf
0Txcu5VPaRau3SqG+Y5rWFvw3mkarnkrnvk3uRas/dgkXDtXbLMh2XfL1kkz
l4+rKj9fcn1Kz135tfJ5rbdnw+9AKGbQuxnSBBWH6R0JaTHSnqSzSzeRFqd3
MBTj7Z5cg9P7G9dn1mTa5+tHmky7fK1K71NuUjG5XqR3M5SfyzbofQPl4bK7
Oo80R2mhijveDr83Ir16j+S6m8bfkLku3JLzNkiugco/v874V5LzEflKrVGt
Vb338VpyPiKf+2pyniK/+Tp8V8H+V/UI1SZ2S9Y5pXkpZtJ+lf4pTUzapuKs
N8PvqwwtWL+UvZE2Jx14c3Jsr1xEerLitLK0LyfnGspjVEeWBijN8tPws1Fs
L71Fuod0TenR0v/0HsKd4TqBYvs7wjUAxWzrwu+mKHeeF643KK5THUTar2qp
dcL1cmmV7yfn4Mp3ngm/46KY7e3kvE8+8a7weyTKJeeGa67KT1WbkfajPOWt
5NxQccjC8Dsuyonmh2sYirtUt9Ia0FrYmvx+hfzLovC7MsqtFoRrFYo5b8/3
gnJkaW56vqqN6j0f6YPKH6QzK7bcl/aD5Hck5KdUE5fWI11Sdaj2uUZ4W75n
lYOrbqk6nfQU1dKk46s+vo1xSwr2X/8DsaK7tw==
          "]], Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[CompressedData["
1:eJwt13egjmUbAPBzjnPM9FWorEqijGjRILLDsfdWQimOrRTZI4XsTSgjGdmy
d9mi7O37rJL5WY3f3XP+uM65r999Pc/znue918nxdlL1NnExMTFrRYJYHx8T
UxMMio2JKStvkyImZiWrwHqy11kL9grrwka6aIx8rFjNEllvdcXVtWQvsQ5s
IqvHhrJX2YdslGvHyceLjaw++1JdJXUd2VpWnQ1kpdkHbA2rxgaw/qKIe7zI
WrAh8orqeqlLL1LK7/N7m9/bxSZ1DdQN066srrO+Qqwjm8Tqsy/ZBlaPDWWJ
rBPbzBqy4awK68JWsYqsFyvGmrN1rAb7jJVhrVlztp79wRayy+xl1pmN8PlH
yUeLxexF1krdeyKPvpl8hvhF36f6EtlZ7ZnaZ9XMdL/9+k+xKewom8y2s7fY
9+wEm8aOszNsBjvDZrCf2Uk2mR1hk9gg+dtiITvJprMT6k6zb9hp9g3bxxqy
aWwPG8F2s0ZsOtvLRrI9rBlbxE6xr9lJVo9NZD+yL9g29ivryZazj9hctowV
ZR1YQVabHWHD2A42hA0I362Yynaz4WyXurpsAtvKPmc/scbsa/YzG8X2sqWs
CGvPCrA6LIbtC++IPyB/xLtfxPLLm6l7XN+bvAmbzQ6wCewAO8bGsf1sDNvM
lrCX2PssN6scxpDopv13mITaD3tGHXVj5BvDGMebeG02mm1g/dhGtpDlYjVZ
DfGYawuzTmGcag9TM1zUYqPYejV9XbuBFWVdWS7tO6yH/LgYz35RN5Zt1XeI
DWab2UC2nLVgG9gVtoj9wb4RX4v9+rrrq+j5o8P7FefkF9Q18Xu6mmlin7pu
8grq3tFeoX1O7Rx158J8YFnk2cPY1veuvKn4Vvsgn6juoL6D7Au2iQ1gK9hR
NpbtY6PZFrYljGk2jtVi3Vhu9ka4N8vFGrLK7HO2jH3IlrHf2DJ2gy1jZ9kl
tpRdZ0vZGXaRLWHX2BJ2iv2fbWUJYQyyG6x+fPLnV5dOPjA++i6fUlONVRcd
vZe28dEaEtaSC/raydvER2thWBPPsyR5GrXHtbOJY/rSslviR3nKML/YTc9J
q+6EPLs4ztKpuS22yVOLVGH8q7nDtmunEdvU3XLteTZf/pvnzmNHWLzag+zh
8J2E/UPN72Kl/La6WyJJTUb2NKsjT6uupGtfYM3ZYFaB9WSZ2DOsXngvrBTb
ypqx8aw26x7mCMvDGoT1nZVmV9la9idbwy6xK2wNu8dWs4vsGtvIYsP8YlfZ
ZbZKfkfdSnae/cFWs7tsFbvArrNNLC6MN3aF3WCb5SnCHGHX2E22RR4vtrDr
LLX3cEyeNazRLI2a78RzYT0M65qaOfL7xeNqysX+uxzEFPHjP+wJVj723yUp
pihboVGKdWWFWCO2nJVkH4WxK15MiDb1/eyhsBZJY9XEsV/lGcWvYdlhsewX
eYYw/1kc+zusf/IH46J1MDz8NXE9zJ+wrnrmRDEleQ25F/YLkS4hGgc/aJ8P
Y1csSIjG2k9x0bgI42Mlqx7Wl7Auh7/XffqG+Rz2TNY2rDHifnUdw77Kxqj7
nXWSL1DXJswp+c3wN6pLEIe1HxWH9KVU95fYLU8vdoXP6boHWI6wTsVG557X
2f/YXHaRfccOsYdYTlaFpWLF2YPsSVaJpWTFWAaWm9ViaViJ5LNK1bjouwjf
SQ8PSimOsMzisLpUalKwA/JMYQ8Jr5ndFTvkacV2dtv97rGd4f2GfY/dYVPF
V+JjfdfYJ2H9kr+jnaTusrjP/f/ku0Jb7NR3V00qflSeJez9LLWaZ0UVeRef
9yX2fvK4KhEXnUnC2aSr6/KzyqxzGGfqWqnbzlqxqawx68dKJJ9bJrlmlny2
eCN5j5iYEJ1twhmnDOvN5rm2tWvns5/Yu2wKa8h6sx9ZSzaZNWB9WEnWg80J
5yb2LWvJ9oY9NeyZYX9l/w1zLi4aj2FctvL8nawdmxUbjbkw9n4Iayz7mBVm
jdkO9j6bxpqw/uFcyd5jX7FGrC/LGeYIezvsx6wWK568101IiPbIsFeWZr3Y
XHUfqJvHEtlnbAnrzJawimwgW8w6scVspBghdifv9aUTon0+7Pd74qNzZRlW
SXuQ9lLXdnHtUv27WHs2m7Vgg1lVNpStjI3OIuFMEs7z4Vz/c3x0Vi/nfmW1
+2jPj43m3YLkc2s4v+6Nj/4fKKuuivYQ7R/UfaJupf6abCRbx/qw9awGG8HW
st5sXfJ3NCfMXXZYzHK/c2weuySfq+6wulysOGvJnmIN2POsMevHSrGurACr
zbqz11g7doD1ZatiozPGrLD3imKshTynuvrqZrDn5fm084pHfZZ8rHzYi/mz
6t4JfexN1pblZ81YBTaA/SU6skXsGVZW3kZdXvYWyxwfjZMwXs7qayX/nieF
OR/2pLAueG553j/sb6KDvoUpov8XXoiLzn7hDNhZ3XOsLushL6qug7o8rBxL
Cn9LeBYryOqwT1kR1p49Hc4brHX434M1ZY+zwqx+eFesWngPLB9rwu5nZdkT
7GXWkGVl1dmT7FXWNJzjWE2Wg73CGrNsrAbLwgqwCiwDq8AusMXsKlvMTrPH
WCFWl2VmVVm2sIeyyiwTS2RZWUGWyDKyiix7+C5ZVfYwq8QeYXlZI5aelWH/
ACGd9Dg=
          "]], 
         Polygon3DBox[{{925, 924, 1299, 759, 760, 1300}, {1138, 747, 406, 407,
           748, 1139}, {1248, 670, 475, 474, 782, 1162}, {1085, 635, 752, 
          1293, 929, 930}, {1243, 657, 460, 459, 775, 1158}, {923, 922, 1296, 
          755, 756, 1297}, {1132, 742, 391, 392, 743, 1133}, {1086, 636, 754, 
          1295, 931, 932}}]}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ksrZ3EYB/Df3/1+Z9zlBbCYDQbFCv1NoiQkkRRTYyE1tiI2FlNzeQVs
yIqSLZq9y7jfspCdvAE+J4vv+TzfTuc8p3NO7fhM3/dYCGFJvhii+bPDU9QT
Q8hjJ2s4wHpOspVz7OYih/mLv2XavMV57nGF//iXJ1znI3f4ygOuJoWQbm+b
HOuNrJa8BNfo+TxlAf+zkGcs4jmLecESfpJLcymvWMZrlvOGFbxlJe9Yxfvo
np4l0852edCbWCPZnu1If3N+ny/c5gPXeMQ/POQyd/mDm9yQKfNPDnGBcc6y
hROsYz+r+c2uZzbbm8uGaL+MSY4+GnWOMIvDzOQgM6JvxPTofkxjH3sl1dzD
FH5lMuO0LnTR+tDBhOidKlmxj//hHUAyN70=
        "]]}, {
       Line3DBox[{826, 1129, 542, 825, 1305, 1038, 827, 1306, 1039, 828, 1307,
         1040, 829, 1308, 1041, 830, 1309, 1042, 831, 1310, 1203, 1396, 832, 
        1311, 1043, 833, 1312, 1044, 834, 1313, 1045, 835, 1314, 1046, 836, 
        1315, 1047, 837, 1316, 1048, 838, 1488, 1130, 1049, 1131}], 
       Line3DBox[{840, 1204, 1397, 839, 557, 841, 1317, 1050, 842, 1318, 1051,
         843, 1319, 1052, 844, 1320, 1053, 845, 1321, 1205, 1398, 846, 1206, 
        1399, 847, 1322, 1054, 848, 1323, 1055, 849, 1324, 1056, 850, 1325, 
        1057, 851, 1326, 1058, 852, 1327, 1059, 853}], 
       Line3DBox[{855, 1207, 1400, 854, 1208, 1401, 856, 573, 857, 1328, 1060,
         858, 1329, 1061, 859, 1330, 1062, 860, 1331, 1209, 1402, 861, 1210, 
        1403, 862, 1211, 1404, 863, 1332, 1063, 864, 1333, 1064, 865, 1334, 
        1065, 866, 1335, 1066, 867, 1336, 1067, 868}], 
       Line3DBox[{870, 1212, 1405, 869, 1213, 1406, 871, 1214, 1407, 872, 589,
         873, 1337, 1068, 874, 1338, 1069, 875, 1339, 1215, 1408, 876, 1216, 
        1409, 877, 1217, 1410, 878, 1218, 1411, 879, 597, 880, 1340, 1070, 
        881, 1341, 1071, 882, 1342, 1072, 883}], 
       Line3DBox[{885, 1219, 1412, 884, 1220, 1413, 886, 1221, 1414, 887, 
        1222, 1415, 888, 605, 889, 1343, 1073, 890, 1489, 1132, 1133, 1500, 
        891, 1134, 1135, 1501, 892, 1136, 1137, 1490, 893, 1223, 1416, 894, 
        1224, 1417, 895, 612, 896, 1344, 1074, 897, 1345, 1075, 898}], 
       Line3DBox[{900, 1225, 1418, 899, 1226, 1419, 901, 1227, 1420, 902, 
        1228, 1421, 903, 1229, 1422, 904, 620, 905, 1491, 1138, 1139, 1502, 
        906, 1140, 1141, 1503, 907, 1142, 1423, 1292, 908, 1146, 1424, 1294, 
        909, 1230, 1425, 910, 1231, 1426, 911, 1346, 1076, 912, 1347, 1077, 
        913}], Line3DBox[{917, 1348, 1078, 915, 1349, 1079, 919, 1350, 1080, 
        921, 1351, 1081, 923, 1297, 1352, 1169, 1082, 925, 1300, 1353, 1170, 
        1083, 1191, 1304, 1507, 1201, 1192, 1151, 1179, 1186, 633, 1182, 1180,
         1183, 1181, 1153, 1187, 1198, 1510, 1084, 1152, 1145, 1171, 1504, 
        1085, 930, 1148, 1172, 1505, 1086, 932, 1354, 1087, 934, 1355, 1088, 
        936, 1356, 1089, 938, 1358, 1091, 940}], 
       Line3DBox[{939, 1090, 1357, 937, 1438, 1238, 935, 1437, 1237, 933, 
        1436, 1236, 931, 1295, 1435, 1168, 1147, 929, 1293, 1434, 1167, 1144, 
        928, 1291, 1433, 1143, 1185, 1184, 927, 1509, 1196, 1197, 1190, 1200, 
        821, 926, 1150, 1432, 1299, 924, 1149, 1431, 1296, 922, 1430, 1235, 
        920, 1429, 1234, 918, 1428, 1233, 914, 1427, 1232, 916}], 
       Line3DBox[{942, 1239, 1439, 941, 1359, 1092, 943, 1360, 1093, 944, 
        1361, 1094, 945, 1298, 1362, 1173, 1095, 946, 1301, 1363, 1174, 1096, 
        1156, 1492, 1128, 1175, 1193, 1240, 1508, 1202, 1194, 1195, 1189, 
        1199, 646, 1188, 1154, 1364, 1097, 947, 1155, 1365, 1098, 948, 1366, 
        1099, 949, 1367, 1100, 950, 1368, 1101, 951, 1369, 1102, 952}], 
       Line3DBox[{954, 1241, 1440, 953, 1242, 1441, 955, 1370, 1103, 956, 
        1371, 1104, 957, 1302, 1372, 1105, 958, 1493, 1157, 1106, 1159, 1495, 
        1158, 1243, 1494, 1176, 1160, 1244, 1496, 959, 659, 960, 1373, 1107, 
        961, 1374, 1108, 962, 1375, 1109, 963, 1376, 1110, 964, 1377, 1111, 
        965}], 
       Line3DBox[{967, 1245, 1442, 966, 1246, 1443, 968, 1247, 1444, 969, 
        1378, 1112, 970, 1379, 1113, 971, 1497, 1161, 1114, 1177, 1506, 1162, 
        1248, 1498, 1178, 1163, 1249, 1499, 972, 1250, 1445, 973, 673, 974, 
        1380, 1115, 975, 1381, 1116, 976, 1382, 1117, 977, 1383, 1118, 978}], 
       Line3DBox[{980, 1251, 1446, 979, 1252, 1447, 981, 1253, 1448, 982, 681,
         983, 1384, 1119, 984, 1385, 1120, 985, 1386, 1254, 1449, 986, 1255, 
        1450, 987, 1256, 1451, 988, 1257, 1452, 989, 689, 990, 1387, 1121, 
        991, 1388, 1122, 992, 1389, 1123, 993}], 
       Line3DBox[{995, 1258, 1453, 994, 1259, 1454, 996, 1260, 1455, 997, 
        1261, 1456, 998, 697, 999, 1390, 1124, 1000, 1391, 1262, 1457, 1001, 
        1263, 1458, 1002, 1264, 1459, 1003, 1265, 1460, 1004, 1266, 1461, 
        1005, 705, 1006, 1392, 1125, 1007, 1393, 1126, 1008}], 
       Line3DBox[{1010, 1267, 1462, 1009, 1268, 1463, 1011, 1269, 1464, 1012, 
        1270, 1465, 1013, 1271, 1466, 1014, 1272, 1467, 1015, 1394, 1273, 
        1468, 1016, 1274, 1469, 1017, 1275, 1470, 1018, 1276, 1471, 1019, 
        1277, 1472, 1020, 1278, 1473, 1021, 721, 1022, 1395, 1127, 1023}], 
       Line3DBox[{1037, 1166, 785, 1036, 1487, 1290, 1035, 1486, 1289, 1034, 
        1485, 1288, 1033, 1484, 1287, 1032, 1483, 1286, 1031, 1482, 1285, 
        1030, 1481, 1480, 1284, 1029, 1479, 1283, 1028, 1478, 1282, 1027, 
        1477, 1281, 1026, 1476, 1280, 1025, 1475, 1279, 1024, 1303, 1474, 
        1164, 1165}]}, {
       Line3DBox[{327, 543, 1305, 328, 557, 356, 1401, 572, 371, 1406, 587, 
        386, 1413, 602, 401, 1419, 616, 416, 1428, 630, 1349, 430, 642, 1359, 
        442, 1441, 654, 454, 1443, 666, 469, 1447, 679, 484, 1454, 694, 499, 
        1463, 709, 514, 1475, 724, 529}], 
       Line3DBox[{329, 544, 1306, 330, 558, 1317, 357, 573, 372, 1407, 588, 
        387, 1414, 603, 402, 1420, 617, 417, 1429, 631, 1350, 431, 643, 1360, 
        443, 655, 1370, 455, 1444, 667, 470, 1448, 680, 485, 1455, 695, 500, 
        1464, 710, 515, 1476, 725, 530}], 
       Line3DBox[{331, 545, 1307, 332, 559, 1318, 358, 574, 1328, 373, 589, 
        388, 1415, 604, 403, 1421, 618, 418, 1430, 632, 1351, 432, 644, 1361, 
        444, 656, 1371, 456, 668, 1378, 471, 681, 486, 1456, 696, 501, 1465, 
        711, 516, 1477, 726, 531}], 
       Line3DBox[{333, 546, 1308, 334, 560, 1319, 359, 575, 1329, 374, 590, 
        1337, 389, 605, 404, 1422, 619, 419, 1431, 755, 756, 1352, 793, 757, 
        758, 1362, 795, 767, 768, 1372, 457, 669, 1379, 472, 682, 1384, 487, 
        697, 502, 1466, 712, 517, 1478, 727, 532}], 
       Line3DBox[{335, 547, 1309, 336, 561, 1320, 360, 576, 1330, 375, 591, 
        1338, 390, 606, 1343, 405, 620, 420, 1432, 759, 760, 1353, 794, 761, 
        762, 1363, 796, 770, 1493, 771, 458, 778, 1497, 779, 473, 683, 1385, 
        488, 698, 1390, 503, 1467, 713, 518, 1479, 728, 533}], 
       Line3DBox[{337, 548, 1310, 339, 562, 1321, 361, 577, 1331, 376, 592, 
        1339, 391, 742, 1489, 744, 406, 747, 1491, 749, 808, 821, 822, 809, 
        811, 810, 1507, 823, 812, 813, 769, 1492, 738, 797, 773, 776, 1495, 
        775, 459, 780, 799, 1506, 782, 474, 684, 1386, 489, 699, 1391, 504, 
        714, 1394, 519, 1480, 729, 534}], 
       Line3DBox[{341, 550, 1311, 342, 1399, 564, 363, 1403, 579, 378, 1409, 
        594, 393, 745, 1501, 790, 608, 408, 750, 1503, 792, 622, 422, 1433, 
        737, 764, 805, 634, 1510, 434, 818, 819, 807, 820, 646, 446, 777, 
        1496, 658, 461, 783, 1499, 671, 476, 1450, 686, 491, 1458, 701, 506, 
        1469, 716, 521, 1482, 731, 536}], 
       Line3DBox[{343, 551, 1312, 344, 565, 1322, 364, 1404, 580, 379, 1410, 
        595, 394, 746, 1490, 609, 409, 1423, 751, 623, 423, 1434, 752, 635, 
        1504, 435, 765, 647, 1364, 447, 659, 462, 1445, 672, 477, 1451, 687, 
        492, 1459, 702, 507, 1470, 717, 522, 1483, 732, 537}], 
       Line3DBox[{345, 552, 1313, 346, 566, 1323, 365, 581, 1332, 380, 1411, 
        596, 395, 1416, 610, 410, 1424, 753, 624, 424, 1435, 754, 636, 1505, 
        436, 766, 648, 1365, 448, 660, 1373, 463, 673, 478, 1452, 688, 493, 
        1460, 703, 508, 1471, 718, 523, 1484, 733, 538}], 
       Line3DBox[{347, 553, 1314, 348, 567, 1324, 366, 582, 1333, 381, 597, 
        396, 1417, 611, 411, 1425, 625, 425, 1436, 637, 1354, 437, 649, 1366, 
        449, 661, 1374, 464, 674, 1380, 479, 689, 494, 1461, 704, 509, 1472, 
        719, 524, 1485, 734, 539}], 
       Line3DBox[{349, 554, 1315, 350, 568, 1325, 367, 583, 1334, 382, 598, 
        1340, 397, 612, 412, 1426, 626, 426, 1437, 638, 1355, 438, 650, 1367, 
        450, 662, 1375, 465, 675, 1381, 480, 690, 1387, 495, 705, 510, 1473, 
        720, 525, 1486, 735, 540}], 
       Line3DBox[{351, 555, 1316, 352, 569, 1326, 368, 584, 1335, 383, 599, 
        1341, 398, 613, 1344, 413, 627, 1346, 427, 1438, 639, 1356, 439, 651, 
        1368, 451, 663, 1376, 466, 676, 1382, 481, 691, 1388, 496, 706, 1392, 
        511, 721, 526, 1487, 736, 541}], 
       Line3DBox[{353, 740, 1488, 741, 354, 570, 1327, 369, 585, 1336, 384, 
        600, 1342, 399, 614, 1345, 414, 628, 1347, 428, 640, 1357, 1358, 440, 
        652, 1369, 452, 664, 1377, 467, 677, 1383, 482, 692, 1389, 497, 707, 
        1393, 512, 722, 1395, 527, 785, 786, 787}], 
       Line3DBox[{528, 723, 784, 1474, 513, 708, 1462, 498, 693, 1453, 483, 
        678, 1446, 468, 665, 1442, 453, 653, 1440, 441, 641, 1439, 429, 1348, 
        629, 1427, 415, 615, 1418, 400, 601, 1412, 385, 586, 1405, 370, 571, 
        1400, 355, 556, 1397, 326, 542, 739, 788}], 
       Line3DBox[{535, 730, 1481, 520, 715, 1468, 505, 700, 1457, 490, 685, 
        1449, 475, 670, 1498, 800, 781, 460, 657, 1494, 798, 774, 445, 645, 
        1508, 824, 814, 772, 803, 806, 802, 433, 633, 804, 801, 763, 816, 817,
         1509, 815, 421, 621, 791, 1502, 748, 407, 607, 789, 1500, 743, 392, 
        593, 1408, 377, 578, 1402, 362, 563, 1398, 340, 549, 1396, 
        338}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJyNXXV8VUfTDgR3d1KCS5CgLQEGdw3uHlwKFJdQpMU1SCAQ3AmeoBMIEieB
uN8bAYoVp8W+czMzJ+/dcMvXf/Lrvts9s3NmZ555zrP3tR01zXFsVisrq7Ts
VlbWVvJPEsjfQIclTnvc06BXk4PbN8+Mh5f+Py0rXsegj3dZ6dDbt1sMZE2I
e3hoglEft276vk7yzAjwmVHSz+lQsj5+KJ9HvsMPQ6FkyuzLrQJT9PFc7qPb
TYr3hVx2nnHXb6bq4y47Tf9cBqf0f9L08TJDCtb7y8vlmvy7/N1L81Gdn4/W
R3X9I2QPqvaw/XhLsb877RfV/fYh/6DqH/Yjqv6UeeJXZX4m/198NLvRmY9x
ENa/Q2/rURnrl53da2TfMtHgUupLLu+HRgji8QKdOo4q2jwMCqb/zdhXxHO8
U2VvIIx63aPPkDkZfmjT9+CNcbeuw3v4FBzUK8NvNtuuGa/235nJzz1oPsp8
eW48rY/q+oXIHiyg2FOe7MetbL+Me9F+8aGyX/Hnl2+mfxJVf6LqT3lPEqcy
Ln4Uv1ryv+xrf/+/NzZvFwe3G2+b3/5Ehj19rfc0Xt8xEmacWlbbdlyyPj9u
5a/2h4NDYOvjoOs9smb4YetjB/cy3jfhqrFzR9t6Gf707maM6zBhTyY/u9J8
lPmyfiKtj1t4fRnvR/bgr4o9B8h+FPuDfuDPcPIPXlD8w/5E1Z9yzuXc6+eX
36vEqTxX7BC//ij+1xf7Nr9ytVjIM/pbr1JlMuJE4lyNq/zHYNzxN3egUPrf
DP/vmJ7/r8AsBzL5uQTNR5kvdhaxELebyB7Mzfb8yJ93ab/ozvuV+dvIP1iG
/aP4E1V/Sp6SPCrjcs7FHzIucSlxKs8VP4pff+R/S3lG8sloPu8yXiE9bxzL
5OckC/nBhvPAFiUPZFH8KevnJftxnWI/7xd7834V/2A+xT/sT1T9KXVC6pKM
i92y74xzTedQzr15fGZ+L5bOhaX8k99CPt+ZHs/ndT/L/GIW4lb8+VmJT4nD
0kocWvIb7xdjlP1yHGAY+yfI3J+o+lPqtNR5GZe6InVJxiUPSh7V6wufWzn3
ij36+woy35fu1x/l/13pfvbJ5Gdr9uc/ij8Lsd/y8PpBin8eKPaw/ZhHsf8K
7Rc3Kftl/2BLxT/sT1T9+SPcZKnOW6pLlvKopXMvcRqkjItf1fwpf5V1cLPy
HmTcRTkHMl7++/bgtu/bj1e/v19eJ5N/UPWnxLPgUDWeBTfJfiWepc4r8aDX
JRmX/CN5VM0zcu5lXOLSWvGn4kd93JL/eX0spKzP9mC8Yo/EczG2X43nnbxf
NZ67sX/UeFb9KflZcL2an1V7BCcJbgpS/FZE2ZfUIalLMi55M4viHznncu5l
fSUuM/xjnp8t+l/WYXyMZRV7CirvJch8vxiv7FfeV4ziH8nPqj8Fb0ifpMab
Gg+COwWHynMFJwlukvEvij9lXOqQ1CVZ/4E53tDnK+dcn6/0I/p4WfO+44f+
Z/uR8ZK6X2R8lem8FFD8I3hD9ectc/ysj0tfVF5574KfBder/lTPr+AkwU0y
ns8cV2TEszl+1seVvKmPFzPHz5nivKByLtab4+cf5p87jJ/3Kft1Uc5FkLk/
UfWn9IPSx8u49JnSdwb+wJ+C4wXXy3N7m/eD+vwY835QH5e6LnlRxznmdUgf
l7ypzo837wd1e/qa94P6fPHjHcV+S/5n/6Cn4h/pB1V/Cr8hvMiP/Cl9pvSd
Ol6xkAcsxW2YhfzQ0pzf0OcrdV0f72bOb2S8Rwv5pICFfC5xKXEq9nia8xs/
zD/Cb6j+VPCqPq7wdfq4wtfp4wpfp48rfF1GvTDn6/Rxha/LeI/mOEkfV/i6
jPdrztfp4wpfp9ovfJ0+rvB1+rjC1/0w/1jqi3PwvNcK/pd/z/H9df7f69cf
UKBkwNYkKNoYctQLSPghz8DzUZ2/wQLvtMcCvzSA88Z0rucW6q8+/ojPxUiF
B8jKdgpu0us7n5d8jCNkfAyfKz+lv5Z82kvp69luXM/7U3H1BqVvkvE9Ct6W
/TxQniv7kf3J/D3pdfBhpj4n0ML/XpjzQjal35TzsF6ZL/krSXmu5P3dCn6W
9zRAwSHi39IKPpT3Ie9Hr8vmdujryPsYo+S94kp+lnXEbjUP97JQH9ebx6c+
f7eFemepjtjzeSlG8f/DvCrz+L/T58v5kfNnYb7SJ5/OzHdxXd6s8MC26XXn
cqb5tlwvNis8mPi3uMIXCZ6IUniYH9ll4flYxsL4VWUd2Y/sTx9nu20VvCpx
X1ipj8rz9PEoC3hJscPS+9Lfr7xXC/GQmWfj+EhV8pX8e34lfizl8yPp5yjZ
Un7AP5T/3ZI9su43Jc+/4/M1QsnDlp4v5/aqkt8UO3T7v1k4X5b2K7hH7aOL
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
eh2pTf0RbKH+CKU/usrfBeU7odTZTtR/wT3qv3AU919LqF+DetSvofRrVowD
uL/T8/B/83XHM/l5nAUeqbWSTyRv8HdZlO+W0s+Opf4Xy1D/i9L/vqB+Gblf
RumXLfmf+3G8T/04Sj/e8NaNM8GlEiDXzV/CbyYn6Xz1IOrr4Qj19Xpdy0c8
ADQgHgCFB1hJvAEkE2+Ac5g3sCGeAQYTz4DCM6QRLwEHiJfAZOYl/puvy8yL
WuKRRhGvgpOJV0HhVXISD4MTiYfR/RxFvA0uJ94GPTk/3yeeB5nnQeF5OhIv
hFuIF0LhhbKz3z8q+k/59+zKe2lk7n8Q/9ejcczD4/KdRd7rV2X9rgrvIXGl
1DV9vhvnk6pK/9LSPD51/mQcx6HwMB4ch1Us9KcKDtFxfnfC+RDHOL884/wK
5nleX8eS/n8X45BNSj8yj/O5K/fjwZzPBYckKf2O9EH/KuPPGa+uU3Cv4Njj
jGMFV5/ldbJ/IJwj60jftF+xU/Ctf8Pv4nl4ReMo49t4nRMK7sqW7p+QZn7s
l1DRTfJ32yqsH5DviUofoa8vOP+lgs9jGHf5KLjrN+Y9Dil1sxrrFn7i78Xy
nTSY8dheBY+JDl+9R6DsC2VfnTh+kih+UOInq3lfqa9jy/Gp4gdFL6TX05rc
h/7F69vw+oW4XrdX6jXnZ1Dzs6v5+dLXl++Vah7rZH5+9fj5w5xnQNEdyflX
87wl/KPkE/27raJXRNErKt8XQL4viJ5HzSdb+DvUT4rej+b7ZOJPlO+wup5K
/vcwRXch/30/Radhx9/91e/a8n0/QPm+383Cd3zFTt1vR/j7XXnl+53iB31+
nvTxv5rdkX3w363czxfl95L2v/Od9fko8+nelyHTOm6c95Yr+SR9vnNSpnUq
ch6or5zH3uyHnoqOy47PbxFFd9Sb89JcJV9t57x02EJ+81Py2Bae78V5zJHn
W9KlpPtZ6/dVvZMy33zc+WGm8a6c964rec+V/emi5FVv5p1ucb6S+XyuMvFa
4Zzf1jBPJflN4tZR0R0pdur7Ff26fEcVHbucQzmXch5FNyw6YvkOKzpX0RfI
d3DREYpOU3QIonsTfY3oQET3Jjo40eFY0m+Jbkl0TKJfEr2OrC+6HdGXLFTs
ET2Ear98v8+q7Fe+N4vf5Dup6PtF7y/fVUXPLd9L5Tup6K1Ffy3zRR8semHR
G4ieVfStkldFfyl6TNEjiV5Q9IOi47KkexO9l5syX3ROtZT1RZezTbFHdCRv
FftF9/C7sl/5Du34fb+h6jfRzcs9CfmuLTp7+f4s351Fvy56dtEbiN5a9Ncy
Lvpg0QuLvkj0rB+V74CivxQ9pujNLOkIRT/3TJm/3rwv09cXnVNJxR7R5YhO
R3QjoiMRXYmMiw5AdBC5zP2Gqt/kPkmQoueU+yfyPV++g8t9ALkfIHoP0WUt
V/TJore2V/Thog9W71OInlX0raIzVHWZ+v1H1gVGKfNFh9dbWX+pBb16XXNd
lj4uupwAZb+WdMKie1D9Jvdw5F6O6EzkXoroI0SHIPcr5L6F3LOQ+wByP0D0
TqJfFz278Mmity6rfBcWfbDohcUeFSfJX8FDgo8EF11WvjsLTyI6vAaKPaIb
26fYLzon0T2Jvkh0OZO+7zdU/Sb3l+Q+k+hq5L6T6E1EByL3SeT+iuAxuV8h
9y2kT5H7AIL3BYeLfl3woOAc0VuL/lrGBXeqODbAQtwKvuysrC+6xveKPaLD
C1DsF13XPmW/onMS3ZOLud9Q9Zt8lxEdhPAq5t/lMu57ie5EdCjCq5jPz/ie
L9/75f6Q8GPm8zPuD8l3a/mOLbyl+fyMezByf0PucwifHGg2X++r9HsIci9B
7iOYz/dqJrhLcHBv5X0JblPfu7xfNX5EByy64Lbmz0XRBSv7wnvf3xeq+xKe
t973/Yaq34SvLPL994LqexHebf734wQtxAlaiBNU40TicJzyfVDiTfg8WUfi
Snhr4atFLyL3osQPom8QvYP4U+6ZyL0TeS+iwxZdtuixRTd8XllH/C/fK+Q7
hfhZtVP4X6fv7xfV/cp9SLkfKflQ7k+KPk7Nh3LfTvKD3AeT+2GST+T+ktxn
kr5b7tvI/Rvhi0T3L/cAZFx06q2U+aKrlv5e8pvogG8r9kh+Ex2r6FdFZ2n4
vh9Q9YPcC5V7omq9Fv2g1B25fyj3EaV+yX05uT8n9U7ud8l9L6mbV5TvDlI3
5V6E3JMQe0THX1KZL7rzOsr6opPerdgjut4xiv2iQxVd6mel/qp+EDznr/Ak
cp9W9JWCi+R+ptzXVPGks6KTX2pBl25J3yv3juQeieBD5b6NzreUMseT+n0T
uRfhqKwvOv46ij2iO1ftF520r7Jf0fX6ft9vqPpN6Y9Qwfm6XlV0qnLfVe6/
Sr8g9zNFFy/jcp9Q7hdKP7LWXCepf+8INO+P9Ps4yv0l3c9yb0edL/dM3ivr
y70IuSch9yMemPdHus5cdOeiQ/dU+iPRTSt9Jap+k/vYcj9b7fdF/yu6X7k/
LDp3mS/3XeWegfTLtc37fZ1H7WLe7+s8ZIh5v6/fb1Lug+l+lntQ6vxu5v2+
vn5d835f/363wbzf1+0PM+/30UK/r/oNVb/dNOepdF36QHM+Sr8X4GLOR6HK
R8n9GIPCR8n9JOGjvpjzUfq9MOUeXQYfy3yUOl/uO6nrXzHno/R7OnKf5LNi
v9x/yKLsV/T6dxX/CM8uvLvw7d1d820w6aRfla253aSb7llhT/r32VVbnRq+
aan1sQVW7DLpfCPyrU3/Pl7+77qNRy4PA4dVqePW1kyBMMOFziZ9Ataef+T4
0iAo8+/aUlajU8G37ygPkz5k/IKpZ/tW9IZDARuf3muVBs8+BS806W2mm3+n
hraMT6o6Frm55Lg/9g/os6mKayrUzRtZ7LqWxy68mdpjS4eHGDCr4p79M1Lg
mM2T96Y60uyqV+v7jaNw47mxLqNLJkP4/LT459r8tJGz38bVjsOELBc2Dzpt
gNnB81c6a+MdDq+s6twjEZs+X9/PqWcS/PrAN9/f2nPlO7R8l5Z4Htg2tbVJ
xxwx17WdSdf8+tamdP1A4XbTmx65Hgm5P+2oY/oe1X3YHj/Td6h6Xm273T0R
Ctmnzzji+SAFjtr+9MKkn6lSfeqXbwtuw0XPaa++ZdfiYHidOabvLB8t6Lov
ZjvvFlU8HAeN+Dbh+vtk6Di1SmVXbfy+zbiYP3rG4JrFW1NxoBHK3jv+l5dJ
17qlQEylPglafT1Z2ep6EnxdZWfVUKvXTr1C3P89nYSLXyesfjwnAawnWXdd
q9XrnE8il3wKM+C8lUHVdvnEwp1dq1vlOKrhjde795t0w1n7nD5n0hE7Vfsr
Xa/i7PPGs8focOi/vJXnjhfJcHL/4Q0mPcZ6p1qR1oP9oW5863pF9qaC9R9+
t036q3sW9NJ2aZXPdwuLwyiP1MTV/Qzw7GTfAVYXtTpS8XjUkdFJuHJN4X0t
rBOh5aEyNq3OpsHUxln6L9Twyqaub9a2uhkLVq5V4qM1PzwLqf7JK8yI15u0
/br0VRS0j4/uXkLbb//otK+5KsbAjNz32ofNMcI8T/qeXuTXQS1su4ZCpfm7
uiQnpcCaS2XS6+xov1ul297W8s+nU233YiwE1qib/n3NbuX7DnOyJOOIJaEh
dr2joN2XSen6DWx8ZtqqmGSMujBhQNLv4TBof+F0vcGpKL/csV0jIc5jweWL
w5NhyLcuBUy6NeOHL/02OqTgGneDc9Z/H8L8T8dfRWnrZG3zbOmC6BQ8vyP7
0VcDQqHC3vPdTPoE0X9kZT1II46H9fsaPF52NRXzP9tee9kFX7Ad936kSbdg
1rc67830fYzGM+vfqT86ZGE8Q8dt/js6FzKNi65W+tmA/+2/vCP0cfO+8p76
XB6/amH8koXxsxbGM/pQ6YOEf2j73b4yow8dX9njnzZa3/eP89xGu0siVr64
+4uvFs8l6hqXb9P6vksjG4TtdfDBfacTNtto/dfmjVsKDtb6vn+GTlv5qpQf
ZvtSNZ+1Freizxa9tvQjojMW3bHojX2fb+x2bGMKZtlWY97XOw+w9j+NmpTQ
nlu8X5D39mOpmPbrkz2xT/1Q8kadPs2KuWr94NE9Kz930ex5fvrQup80ewa7
NljYUesHX6wpHLylBKJD475N/bV15mabUeCl5oeZbw4PL1jgCkreq+kVWjNS
6weDV7r3raX1g1taVp5j6gcH+Ni6H9Ts37Hx6bbdM0Nx7xaXr/Ga/fvyLJ5e
2ysZ3E/nvz/4VDgWbzz/+A5vDYew7lx06PKdWvTToqeW71m/dZqQ/YSGo3I3
+WPT4EeRGH/+eV/TvsQP2RQ/tJ8yYOjwNqmYt9f6j3aXg7W6emDCrkMZ/vlL
8c/FAjHjbZ+k4viRzl0PjryLYY+HDDXpcN6PzFf08TkD/P40oeF7jEWr1aOa
B/hoeWaw29Y/SieAewOnucfdknDtEBiyL1yLE9Z5i+5b+sd8m4eP3TTCiJOy
DJ29dnQMnoWyuU06wLD8PcuVv5yM2TdO/7dm1QiUPHn6+sJsdTSc6hDaImmL
hlv9J/kUNeHVf/Yl/7K7QCruT7h0M2BZCNq/mV7INL781wF2p7rEQKzDhBzP
HIxY7EXpGia/tXxWfM/Eug+g5+pnucZp6wUssfU06W+3PQgv8MFoQL+t/Uea
9HEnWBd399XttRVtkvHMlEoFe9aPwg5VSCdwtc37Ub+8Tsa0yr99XDEwHCVP
vrg9Ile9fCGw8kH2rgM0u5rl77zzlJa3feu86GrSe921+7WjSf/1MtAlXff1
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
rv++gcwP+N/nauvI/P8D0FLdfQ==
     "]],
   Axes->True,
   BoxRatios->{1, 1, 0.4},
   Method->{"RotationControl" -> "Globe"},
   PlotRange->{{-100, 100}, {-100, 100}, {0., 141.42133603425862`}},
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171705626229506`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
dUn8ftkrSw9U7m468/tqgyr528tlm871by75R/sy6YnS/c6vvuOGTNP59ven
XDZzQnpiXpH9D7Ut3M10fqFKqTY7jqUn7hr27KIKFaJxbe+4qbdUG9g10WnH
hfN7Le9qOs9RvGiO8x/Olf1reryRuqlpF9P5Ptk/8YsbtpebnG46/yr7a5c8
Wvje3hmmM/YPf3x6jxnjM01n7CfPCp1flP3Dz+mz4mSfaFzbJ/vvfmjC2HmF
o3Ht5uR31DZRNe+7acemRf5w+L20Szy3YWarhaWyTefwu26fSCk2fdXY97qZ
zvxOSeaHdDWdG88qe87MvR0S2yYvXfDCietN55e7XphR7eOOiaeuqvrYpvmd
Tecq5180762lnRI7d762+OWh15nO8oMT3h8eIPtf/Hbh9sNZ7UznnbJ/z/tb
hs9f2tF0Tpf9g7+v8XL2911MZ+wnDxCdsX/tnKaJl27PNJ1fkf3fjn+udbFq
kZ92uey/72CrjBZHepjOY5Lv/dpEl/SR9xSrEc3vUpPvN0iUf3TIx78PjOZ3
4XsMEs2aHBz46ifR/K6y1pnfHvHV8B/e7WI687s12f90NJ3PTn6nrRIZLX+q
8WuXdqan5m+aT0fzuAmyc1KyfQamZ0PZOSLZDlubni/JTvJR0RM7i/x68ZB1
la83PbGzlto5ev5Ndt7Z/eCcE62i+cV9yX6jdaLFzz2vmNUgml+E38XViWcr
bF/TqGUUTwjve01i+85rK5btEsUTwvrrJd5d+PO/+98axROOan1+T8Pb1pZo
3cns25VsPw0Te7o89sUPZduanvxOT7bzFqan4g6Jp1z8obHsHNLs0Om56+ub
nlVlZ9GkPmmm5zmyM9ShjemJnbNyS5WrN7+T6Ymdg+9NWVLwWRR/+ER2fq/+
HD3fTLbbJomevdccff/7KP4wPWn376vKlW18duX9UfzqGa27ruvQYMHBz6P4
1e9Je8omdu+funvf+Ch+9azWqe9+u/34KXd0cPErfutYvOqA7jt0xgOFc2df
Zfqs1n1HJnlj06fIjvC+o8ZMOLWvaCvTh/vekyzfwfS5MqnzZYn0fRfvfXX9
/4tf7QjXY/OT9UT6bFE/9KP8DfR5X/b+LI4+h7ReO0b1oM9F4X2DTN0XfSZq
/f9e2YkuD6ndTHXth9+JyfZ2jemzT/fdlmy3TU2fFN13S7L9R/pw32F6L+iz
PXyPwQ69R/TJ0rr5x3rv6HNqQ/J9pV2odoI+S8J2FfRSu0KfhOw9pHaIPlvD
dhvcrnaLPoeU7/KI2jn6TFc/NcP1V8/pvvOS40hz04ffyfpO0Wez7rtD3zX6
cN+v1A+gT+HwewyWq99An7Lh9xt8oX7G4p3h9x48pX4JffLDfixoqX4Mfc4K
+71gmPo99Jkue/EH0KeC8nuKql+lv3ou7IdtXwa6HdZ4ediNm3fLnolJf7KN
6VVM9nTUeGFxdf1+qvEF3bDnNY1H6IY9jTV+odvV4TgSXKTxDt1GhONO0FHj
I7pdGo6nwTiNp+j2Yjj+Bns1/qJbajheBx9rvEY37GV8R7dOoT8Q3CZ/gP49
bJ/tgq/lP+Cf5IX+RvCs/A10nin/z69vXiL7v5A/g87Py/7H5f+gb33Z/7n8
Jezm90H5V+iM/aXlj6HzFtn/tPw3dO4t+y+Tv4fO34b+YYB/iM7Ph/5kgD+J
zoND/9Py/NG5XuivBvir6Iy9jPs2rwn94WC8/GF0Lh76z8Fq+c/ozDq9X6/f
I/s7yD9H58Wyf4T8eXTG/kfl/6Mv9p+n+QJ287tU8wt0HiX7T2g+gs7FZP8R
zV/Q+a1wvhO8p/kOOof9Q6bl+aNzEM6nAuZT6Pw/4fwrWKP5FzqvC+drwcWa
r6HzDNmLP4DO2eF8MFip+SA6kx/j82TelP33ar6JzqNk//2an6Iz9l+v+Sw6
Y/+Vmv+iL/bfpfkyOvO7UfNrdM6S/YU0H0fn+8M4Q1D1wOihDw2L4kjXKZ+r
qub16FwmjAMEbysOgM7KowzuUdwAnReEcYZgueIM6HxTGJcIshSXQOeriHvJ
f0DnhOI2/KLzJNn/N8VJ0Bn731FcBZ2x/4+0MA6Dzth/THEbdMb+uxXnQd88
2V9BcSHsWaLnGCc/hOf6Un+fI+70T6A/7+uhM/DqxFkVp6L+0fL/H9Y4hW4H
NR/Ur5UfrvnLfZq/YP8I1TPejXeFNe+okmyH7aye1+QnPye/gvs+qHnTQ/JD
7P3Kz+8nP5/7LlI9s51/8rbayyT5J/BtyhP8wvl1n8nPfzLZn7c1XkL+Lf4e
7fNy8Z2Or5XfPlb+M/xr+YGeXyN/8ivVQzv/TXZ+JzvhLeS3j5HfDr9T/uRY
x88K/fDggOpBZ/JdH5Xfip623yK5blsrimOr/rvcfOHicL4QjHLPVVR+3XDN
s+Dfyj98UTrzfsnbLXZXeF/sLy8/8CzN4+AbZNdMN0+knpf1S/115DfeqvZD
+Zc0H3hZvxb3k9+7RO0Kbnnry/5vHbCR6Zam+oepfuy8Rv7YMM3r4efID6zt
vot75Kf9Q98Xdi7S9/Ck+y40fw+m6buz96h6Jqse+o2a6g+OqR+gf+D3F8fV
nwTVXH9CPJx8Rbe+kGB9Ie5XRPsU4nmALZTv19L51anKw0q18vD/vBHqT7sK
/12J5ro2neG6tvLkCZRRHgvl4dcp7wWdbT+78hywk/ag+IFbp2sRNHbP5fcR
wAfquxupdhufz1dvzrwePk7lprry5HHP1feKbu+rX/o02Q/83cqTv73Wlbf9
NOoHeC7ycxLSAU6/ccqVPxDOZ1eNU/wBXlRxhkOyB94hjFekjXflK6if+cnZ
v1p2fuh0GCs7/6H3Bn9Bdr7sypM/fljzfnTo8Floz3DZA9+h/vxz2QOvr/68
RLK/qmP2W/6mG98ZX04fjZen3era7CR/XeOD5Qfz/bF+yncI53skz9XifFqH
JS8TTr4reYRwy8/UOG3zSOWB0D7g5L/xPG7dzPJ14OQvkV/i6ycfAk6eCev3
cPIiWJ+x59Lzsg7mdbN8bvmzrKva+TzirJPaOTzirHfbOTzi5BvYOTzi5LXa
eTri5GHaOTzi5A2ip1sfi87hESfvy87hESffyc7hESc/x87hwR7Zb+fwiJP/
YOfwiPeI6xZ43dCZ+QHr2ugMZ90ZneHkG6AznHwPdIaTJ4zOcPJa0RlOHiY6
u3Uw0xlOHh06W1xc9aMznHwndIaTn4POcPJJ0Bn+SFy3wOuGzrbOrLwCdIaz
jo/OcPLq0RlOHjs6w8m7trxecfLl0BleJ5ZnaHmZ/N10hpOXiM6+fnSGkz+G
znDyndAZTn4OOsN3xnULvG62z0f+BftN0BlOXgQ6W36K8m3QGU6+EzrDyWO3
PGlx8q7R2eYfyrd0fhJ/N53h+EXoDCe/EZ3h5OOhM5z8sUouLkh+keW1iI+K
6xZ43dAZf419TOgMJ88EneHsK0FnOPss0BnOvgB0hpPHjs7weN61+Z383XSG
42fa+Tvi5IuiM5z8RnSGk4+HznDyu9AZnhbXLfC6obPNh5TXFD+/K4pjoT/l
yeeJnwMW5fXwXijPPqD4OWBRPJL3RXn2s8TPB7N9MPYeKc8+jvi5YdgfnRtG
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
+wm9n7BJ3yl8u+ISfKf4/5y3wHcKJ+7BdwofoTgJ3ymcfZ18p3D2M/Kdwncp
DsN3CmefGt8p8wvOf+A7hRMX4juFE0dqou8UTtyJfadw9p9+ofHF9l+qP2Sf
odmjeNez+t5tP7riYx31vcPZ/8W5FcyPOL+C8xcs7q14HecFwInvvarvHc4+
d/Zpw4cqfrhO3zP8oNrzKY1fFs/XOJIufwHOPlP2VcLZX8m+QTj7Bzern4Gz
3419WfDfFF/lvAn8Us6d4HwEOHFd9vPbfnTFgcdqPwmc/enLtN8Dzj7rzepH
4OwvPqn9tHDbV6v5BZz9pJrvGGe/JPv64OzvO0v9m53Xq3g7/Zud26f4PPt5
7Bw4zaPZz2D7yTRPeUvxJcqzH4H9A5RnHwH7ASxfW3En9vnA2e9z0MUP2e/D
fh76W/b1vCr9qYf9O+zboR7277A/h3rYp8O+IPpb9gexT8neo+IGY51fSl43
/hP+WNNT6XsLb4rOibK84lGFlv6yPzonCr7ntcdeyWvWw8Z1eN+NNbr23xad
EwX/48ZO825aH50TBf/ggqUDdl+abX6iXx/hOeEdJuZ/ctnG6DwoeKPX72u6
Z1cU37F9FfOn1t3Ssof1R/D5K86rtexIdB4U/OlxxTMWbIt0sHzdnlvXpQ2K
8hftPLOKu8b3nxHFteGd5syrvrlIlDdm+1ZrbWi3d2O0zxHe5OU5ibHndIvO
ZXXrI3Yuq3je0klVS5SO1sXhg1J7FWv2ZBSfgrfIO5j7W360vgif2uzABd/O
jPYtwtHBzqOQHleteGTQjOLR/lk7V2Ba3dM5raI4PvyStZs+Kb0n2j9ruq77
58JhR6Nz6vy6iZ0vIb5sT+oF86tF+17h9WZU7PxmvSjuZvtT9bw8F3ye3jv2
83z9a4xoP6VzdA4MvOzSC4YvKRXlgcGLtOlzzebd0XkF8DdkJ/bAb9N7wR74
arVP7otd/Wq3uT5zQVurB95H75164A3V/ilPff6cDXh7fUfxc2JTCv76nNiU
gr8+Jzal4K/PiU0pIA85vs8opeCv9xn9Od9Xu4+f+5pSsFrX8XNfUwr++tzX
lAJ/7ivvjXEtfh5sSoFv9/RD8zfNyetVMjoXwvLHPrul0K+/Rc9r/Xz+j+lr
93eI1rfEX0x+79F4Aw/bVZTXBe+fc+TvlatGeUvwbe/ctPHg1ujcDPip1vF2
aOcT6/tCD3hD9TN2zpX4avXDPC92PXX+8ZF3/hitF8KHBPseW904yleGN/1y
9qFhc6N9oPBctWfsh5+v7wv74RXUb2A//Dn1n9hv+W8aX+z8Z91/V4ebig6b
G51HAX9o5vq70/ZG50XA+6gfsHOYxVPUv9k5zOId1M/bOcziuRoHua/5/7LH
8qHFB0tPm++Jj1W7wh54dfXD2GPn+ms8wh741xqvuS/1Pan3a9+JeCu1c+qH
99U4aH4G5/3IT6AeOwdX3xHl4Y3kb7h+x/Y32bnr+i6buvJ+/46dcy7O90s9
tGv8GcrBGd9dv2b7VqgfTj9A+4PzvZh/o/aIv8R97XxTvS/+PZxx1vWntr8D
e+D0P9gD5zulXcJ3qx1iJ+0U/w077TwStXPbdyReTt8F9cIH6DvivvCH3Xdn
51o5eyxvX9819sDxo7AHjr+BPfAL1c9wPzjjLLrBp7jzeeD0b9gPHySd+R7g
i1x7MD9C/S3PBccP5LnMT1R/znPB8UN4LvhujRfYAR+q8YX2A5/qznGCl9Y4
hQ42f9G4hg62zuX6K3hL15/YPM59p9j1szvnCrvw/9HNx6ns/yMge5kX2P9H
QBz/2f4/Ai7u5M+nv1HthPrtPFT5b/FzpdoH+OHUD8eP5buG4+fw/HDGd+yB
l1Z79uflM35hJ++B+Q52wvGTsROOX017g7/h7Pf5q9jP9VS1W+yHM75bXrg4
46w/75/xzs6FI66ieQrPBWdeEz+3KsOel+eC45/zHVmeqtqJna/n4kje7/T+
FtcN3fwOjj+DDnD8CnSw/w+Pxgvv//bR+IU+/lwC9IH7eS6c+RH6wJmnoA+c
eQf6wJlf8J37+JL3v70/avdVP4lucPw9dLNzpDR+oRsc/8fO3yNPVf6Anzfg
n/j/X8RRdw6M7RNUf4udcMYLyqMT/TCc56Yfphz1TXHndcBXuv4aTr/t//8b
zC/s/3si/bCT+v36r80rdM18xM3rbF+kxa3EmQdRnvsz76N8fLyO5kf8O543
/v8Niey1+J2uGafi5wOkFHym+3HN/d91nH9H+eXu75T/X1pQQ9w=
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
TX7+TWmrJOdHH5V8beVzO3Bhsh9R7qM4Q/FGRcZU4Vp/o+0S1oSqFB1/j5Cm
Qftk5pz0B8bcKh/N53X0z6DdKL8N71Ly/DTM99TwZP+yUv49X7fyUack+6ZV
9F+U7B+fhScmx13PwWfIDsNPyV4mx2bysZclx2wv0D8Z7gY/r3WSHJtt0H1x
fT/pGdIeEdYvVtPfJznf194ZlKwnPEH/wOS19Dh8XMlzfgU30Cisuayg/8Rk
PeExuF3J1zaBMb3p3xdeTv8M+s/VGPp7JOs2isNPzp/1gfBv8JMF5yZjw/qF
YnLF5hvoL0v7S7LepXzk62StQ5qHkl9pL8ovipl1XSW+pczarHKEv5N1Huk9
Y/j8RMn50RfJepfyha+StTjlC38ma7/Kg35P1n6VH/2VrCErH/kjWQdWPrIp
OUaSHvZlsp6mfOT7ZK1M+YI0C2kXb8j/J8dCiiWkjSr++S9vgvvDr8KzkmMh
5UF3JecCb8KLknOTTXl8KL+kGPVB+kfCm+GfkzVA5X0/JeuHyvW2ww8UnMv8
mKzXKX95KTneky74YrJv/ZD+H+ClBec1ypn03S94jiOZw/vzHOrN5DhTOZ10
wjvgrUXP8f3wdvhx+D7t36J1S2mGn8n/wjfCG+FH4DvhD+BH4fnwNngJvEDX
A98Jz9T8yJ/JFmitwqvyWOU4rmEB/Tdo3mTrtN+L9inX0n+h9mzR96n7fQVO
2pS5r5lP//VaJ0U/Sz3TzUXfq/zOO/B7ybqo8rh3k+Mf5cVbku9dc/BOcoyk
HHljckz+cea8XOv8d87zBv03yRbRf3NyjqA8+pNkHVj548fJOrDyxPv47hz4
bdlY2Rv4LfjT5PnUvC7ObPfupv2I/oUF55UfJuvGykOlcciXtaTtl6zv1YRn
Jucsytmfha+At8Adk7Us6S1dclshv9Ap2S9I22mTrL9J82mdrO9JI+qQrHdJ
k2mfrGtJ52mbrLNJz2mXrL9J85mW+2LFRao1fF2wbtMqWT+UHqWawveK/8L5
nuJM1UKUyyn2UH1C9YhvFYvTXptcB2nMd8tm1sl3oL9MZtsScP9kfbgWfYOT
dciD4GFwS7gOPDS5VnIIPCRZnzwYHpCsA9eGuydr0dIQuiXr29Kmuibr0tK7
ymWucZTld49O1palie2Qud5Rhv4dM9d9yslWJ2uq0tbKZ64N7Uh/y2TdVfrb
abmvlB9ZmKyZt6H/Ovg0+HB4dXJso9xFOaNiMulgyiW1R6RNKdbXPkqMzTLX
pFI4FldMrpxTeavExAG0j9NO0Jpk7IpkPe0d+LnkvHJr5vWqdVuevne0N7SW
Sq5HKDaVDqZ9pf0lDSJlrtmVwrqE9HNpYucnxwAN4AnJ8bNiA/kk+SbVqC5J
1oQbMuZSuB/cCD4z95WKK2Yn17+a0X99cr2sCXxrshbaHL4puV7WVP4kOe9+
Hz4rubZ1mPZRcm4r/6sa2RcFa5XKRRVLqH42NrlGVi9zriuf/gX9pydrMofS
PzK57lYXPhvuCtfXtXH/55TsC+5N9qFt4TnSgkr2IyPC9m4gfErYng6Cn8rt
uZ71yeH6wYlaz2Eb2l++I2xHToKHh23fAHhNsg3sqfUQ1jW0RwaHaw+96V+X
bLd1zrXJ9rYXfE64xqD48OlkW32C9ku4ntEHPi+cYys2uCKc/yvOuSysMSm+
nZzrUIqZLwjn54pDLgzn5IpPJoTzecUe48KxrGLay8OalGLpKWEdSvHztLAG
oTjqyrBGoxjpqrAuo7xsRlivUbw0PaxHKKaaGta2FKsPDddv+mrfhe3yyVqz
8Nsl60IfcFwAt6L/oWQ/1QFuEK5Ryc48nOyPOsLjw7G7Yu/zw7GU4qtlyXWf
bpnjSeXlu9D3QrL913wuTa4fdYWXJ9eGusOPwVPhYzLHtIpzFRtLQ1Te3Un+
KLnGdGxmHUp6VA94dNhnD5OtCutuskUv5pqX7OfF4bhQMeSGsEYm23V62JcP
pv+MsC8fAp8brlcpPzo7XM87RXYurNPJpo0K+/uh2rPhWtpweBt8IdxaezBc
0xohWx7W9WRL13P9swpenxeFdSjF55PCWo/i6kvD2pPysv7hmED3q1qY5kfz
pHxJeZNyhJ6MmVpyrbBvOJbVfPYLxx+at6vDWpXytW/yOFNxaftwjUq299vk
2qXu5bhwDV7zXz9cX5T/bRiuicqPHB6uNcoH9QlrTHqm/yTnJopje0n7K7lm
qhqScjvpM8XkOuuhtB3DOrzsWIfcnsjWqRar3L9xsgar3O5V/l4vXK+SzqA6
mXJr1bgbh2uuitVV69QaXBOur/0hv6kYNly71TpUvUR1E72T0Ttcx9Ua7hTW
9mV7Vc9QXUN6SedwHUG297PkOF/xTKtwLVD2s0W4jiub2Tr87oLspGon0pO0
1xYkaw5aJy3DNUXZ6oHhupds0aBwnVX27ZKwhqh8SrmecjvVWCaGNUTlaCeF
a7Syb8qh5CPkK9qE35mQP2oXfg9DMUbb8LsR8jtHht+HkD/6PLkmqz3Vlf6J
JdeJDgvXC6XbHBquEUr/OTq38/LjPcLvcMhW1A3XCKX/HBt+50O2pRs8qWQf
0Txcu5VPaRau3SqG+Y5rWFvw3mkarnkrnvk3uRas/dgkXDtXbLMh2XfL1kkz
l4+rKj9fcn1Kz135tfJ5rbdnw+9AKGbQuxnSBBWH6R0JaTHSnqSzSzeRFqd3
MBTj7Z5cg9P7G9dn1mTa5+tHmky7fK1K71NuUjG5XqR3M5SfyzbofQPl4bK7
Oo80R2mhijveDr83Ir16j+S6m8bfkLku3JLzNkiugco/v874V5LzEflKrVGt
Vb338VpyPiKf+2pyniK/+Tp8V8H+V/UI1SZ2S9Y5pXkpZtJ+lf4pTUzapuKs
N8PvqwwtWL+UvZE2Jx14c3Jsr1xEerLitLK0LyfnGspjVEeWBijN8tPws1Fs
L71Fuod0TenR0v/0HsKd4TqBYvs7wjUAxWzrwu+mKHeeF643KK5THUTar2qp
dcL1cmmV7yfn4Mp3ngm/46KY7e3kvE8+8a7weyTKJeeGa67KT1WbkfajPOWt
5NxQccjC8Dsuyonmh2sYirtUt9Ia0FrYmvx+hfzLovC7MsqtFoRrFYo5b8/3
gnJkaW56vqqN6j0f6YPKH6QzK7bcl/aD5Hck5KdUE5fWI11Sdaj2uUZ4W75n
lYOrbqk6nfQU1dKk46s+vo1xSwr2X/8DsaK7tw==
          "]], Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[CompressedData["
1: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
ACGd9Dg=
          "]], 
         Polygon3DBox[{{925, 924, 1299, 759, 760, 1300}, {1138, 747, 406, 407,
           748, 1139}, {1248, 670, 475, 474, 782, 1162}, {1085, 635, 752, 
          1293, 929, 930}, {1243, 657, 460, 459, 775, 1158}, {923, 922, 1296, 
          755, 756, 1297}, {1132, 742, 391, 392, 743, 1133}, {1086, 636, 754, 
          1295, 931, 932}}]}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ksrZ3EYB/Df3/1+Z9zlBbCYDQbFCv1NoiQkkRRTYyE1tiI2FlNzeQVs
yIqSLZq9y7jfspCdvAE+J4vv+TzfTuc8p3NO7fhM3/dYCGFJvhii+bPDU9QT
Q8hjJ2s4wHpOspVz7OYih/mLv2XavMV57nGF//iXJ1znI3f4ygOuJoWQbm+b
HOuNrJa8BNfo+TxlAf+zkGcs4jmLecESfpJLcymvWMZrlvOGFbxlJe9Yxfvo
np4l0852edCbWCPZnu1If3N+ny/c5gPXeMQ/POQyd/mDm9yQKfNPDnGBcc6y
hROsYz+r+c2uZzbbm8uGaL+MSY4+GnWOMIvDzOQgM6JvxPTofkxjH3sl1dzD
FH5lMuO0LnTR+tDBhOidKlmxj//hHUAyN70=
        "]]}, {
       Line3DBox[{826, 1129, 542, 825, 1305, 1038, 827, 1306, 1039, 828, 1307,
         1040, 829, 1308, 1041, 830, 1309, 1042, 831, 1310, 1203, 1396, 832, 
        1311, 1043, 833, 1312, 1044, 834, 1313, 1045, 835, 1314, 1046, 836, 
        1315, 1047, 837, 1316, 1048, 838, 1488, 1130, 1049, 1131}], 
       Line3DBox[{840, 1204, 1397, 839, 557, 841, 1317, 1050, 842, 1318, 1051,
         843, 1319, 1052, 844, 1320, 1053, 845, 1321, 1205, 1398, 846, 1206, 
        1399, 847, 1322, 1054, 848, 1323, 1055, 849, 1324, 1056, 850, 1325, 
        1057, 851, 1326, 1058, 852, 1327, 1059, 853}], 
       Line3DBox[{855, 1207, 1400, 854, 1208, 1401, 856, 573, 857, 1328, 1060,
         858, 1329, 1061, 859, 1330, 1062, 860, 1331, 1209, 1402, 861, 1210, 
        1403, 862, 1211, 1404, 863, 1332, 1063, 864, 1333, 1064, 865, 1334, 
        1065, 866, 1335, 1066, 867, 1336, 1067, 868}], 
       Line3DBox[{870, 1212, 1405, 869, 1213, 1406, 871, 1214, 1407, 872, 589,
         873, 1337, 1068, 874, 1338, 1069, 875, 1339, 1215, 1408, 876, 1216, 
        1409, 877, 1217, 1410, 878, 1218, 1411, 879, 597, 880, 1340, 1070, 
        881, 1341, 1071, 882, 1342, 1072, 883}], 
       Line3DBox[{885, 1219, 1412, 884, 1220, 1413, 886, 1221, 1414, 887, 
        1222, 1415, 888, 605, 889, 1343, 1073, 890, 1489, 1132, 1133, 1500, 
        891, 1134, 1135, 1501, 892, 1136, 1137, 1490, 893, 1223, 1416, 894, 
        1224, 1417, 895, 612, 896, 1344, 1074, 897, 1345, 1075, 898}], 
       Line3DBox[{900, 1225, 1418, 899, 1226, 1419, 901, 1227, 1420, 902, 
        1228, 1421, 903, 1229, 1422, 904, 620, 905, 1491, 1138, 1139, 1502, 
        906, 1140, 1141, 1503, 907, 1142, 1423, 1292, 908, 1146, 1424, 1294, 
        909, 1230, 1425, 910, 1231, 1426, 911, 1346, 1076, 912, 1347, 1077, 
        913}], Line3DBox[{917, 1348, 1078, 915, 1349, 1079, 919, 1350, 1080, 
        921, 1351, 1081, 923, 1297, 1352, 1169, 1082, 925, 1300, 1353, 1170, 
        1083, 1191, 1304, 1507, 1201, 1192, 1151, 1179, 1186, 633, 1182, 1180,
         1183, 1181, 1153, 1187, 1198, 1510, 1084, 1152, 1145, 1171, 1504, 
        1085, 930, 1148, 1172, 1505, 1086, 932, 1354, 1087, 934, 1355, 1088, 
        936, 1356, 1089, 938, 1358, 1091, 940}], 
       Line3DBox[{939, 1090, 1357, 937, 1438, 1238, 935, 1437, 1237, 933, 
        1436, 1236, 931, 1295, 1435, 1168, 1147, 929, 1293, 1434, 1167, 1144, 
        928, 1291, 1433, 1143, 1185, 1184, 927, 1509, 1196, 1197, 1190, 1200, 
        821, 926, 1150, 1432, 1299, 924, 1149, 1431, 1296, 922, 1430, 1235, 
        920, 1429, 1234, 918, 1428, 1233, 914, 1427, 1232, 916}], 
       Line3DBox[{942, 1239, 1439, 941, 1359, 1092, 943, 1360, 1093, 944, 
        1361, 1094, 945, 1298, 1362, 1173, 1095, 946, 1301, 1363, 1174, 1096, 
        1156, 1492, 1128, 1175, 1193, 1240, 1508, 1202, 1194, 1195, 1189, 
        1199, 646, 1188, 1154, 1364, 1097, 947, 1155, 1365, 1098, 948, 1366, 
        1099, 949, 1367, 1100, 950, 1368, 1101, 951, 1369, 1102, 952}], 
       Line3DBox[{954, 1241, 1440, 953, 1242, 1441, 955, 1370, 1103, 956, 
        1371, 1104, 957, 1302, 1372, 1105, 958, 1493, 1157, 1106, 1159, 1495, 
        1158, 1243, 1494, 1176, 1160, 1244, 1496, 959, 659, 960, 1373, 1107, 
        961, 1374, 1108, 962, 1375, 1109, 963, 1376, 1110, 964, 1377, 1111, 
        965}], 
       Line3DBox[{967, 1245, 1442, 966, 1246, 1443, 968, 1247, 1444, 969, 
        1378, 1112, 970, 1379, 1113, 971, 1497, 1161, 1114, 1177, 1506, 1162, 
        1248, 1498, 1178, 1163, 1249, 1499, 972, 1250, 1445, 973, 673, 974, 
        1380, 1115, 975, 1381, 1116, 976, 1382, 1117, 977, 1383, 1118, 978}], 
       Line3DBox[{980, 1251, 1446, 979, 1252, 1447, 981, 1253, 1448, 982, 681,
         983, 1384, 1119, 984, 1385, 1120, 985, 1386, 1254, 1449, 986, 1255, 
        1450, 987, 1256, 1451, 988, 1257, 1452, 989, 689, 990, 1387, 1121, 
        991, 1388, 1122, 992, 1389, 1123, 993}], 
       Line3DBox[{995, 1258, 1453, 994, 1259, 1454, 996, 1260, 1455, 997, 
        1261, 1456, 998, 697, 999, 1390, 1124, 1000, 1391, 1262, 1457, 1001, 
        1263, 1458, 1002, 1264, 1459, 1003, 1265, 1460, 1004, 1266, 1461, 
        1005, 705, 1006, 1392, 1125, 1007, 1393, 1126, 1008}], 
       Line3DBox[{1010, 1267, 1462, 1009, 1268, 1463, 1011, 1269, 1464, 1012, 
        1270, 1465, 1013, 1271, 1466, 1014, 1272, 1467, 1015, 1394, 1273, 
        1468, 1016, 1274, 1469, 1017, 1275, 1470, 1018, 1276, 1471, 1019, 
        1277, 1472, 1020, 1278, 1473, 1021, 721, 1022, 1395, 1127, 1023}], 
       Line3DBox[{1037, 1166, 785, 1036, 1487, 1290, 1035, 1486, 1289, 1034, 
        1485, 1288, 1033, 1484, 1287, 1032, 1483, 1286, 1031, 1482, 1285, 
        1030, 1481, 1480, 1284, 1029, 1479, 1283, 1028, 1478, 1282, 1027, 
        1477, 1281, 1026, 1476, 1280, 1025, 1475, 1279, 1024, 1303, 1474, 
        1164, 1165}]}, {
       Line3DBox[{327, 543, 1305, 328, 557, 356, 1401, 572, 371, 1406, 587, 
        386, 1413, 602, 401, 1419, 616, 416, 1428, 630, 1349, 430, 642, 1359, 
        442, 1441, 654, 454, 1443, 666, 469, 1447, 679, 484, 1454, 694, 499, 
        1463, 709, 514, 1475, 724, 529}], 
       Line3DBox[{329, 544, 1306, 330, 558, 1317, 357, 573, 372, 1407, 588, 
        387, 1414, 603, 402, 1420, 617, 417, 1429, 631, 1350, 431, 643, 1360, 
        443, 655, 1370, 455, 1444, 667, 470, 1448, 680, 485, 1455, 695, 500, 
        1464, 710, 515, 1476, 725, 530}], 
       Line3DBox[{331, 545, 1307, 332, 559, 1318, 358, 574, 1328, 373, 589, 
        388, 1415, 604, 403, 1421, 618, 418, 1430, 632, 1351, 432, 644, 1361, 
        444, 656, 1371, 456, 668, 1378, 471, 681, 486, 1456, 696, 501, 1465, 
        711, 516, 1477, 726, 531}], 
       Line3DBox[{333, 546, 1308, 334, 560, 1319, 359, 575, 1329, 374, 590, 
        1337, 389, 605, 404, 1422, 619, 419, 1431, 755, 756, 1352, 793, 757, 
        758, 1362, 795, 767, 768, 1372, 457, 669, 1379, 472, 682, 1384, 487, 
        697, 502, 1466, 712, 517, 1478, 727, 532}], 
       Line3DBox[{335, 547, 1309, 336, 561, 1320, 360, 576, 1330, 375, 591, 
        1338, 390, 606, 1343, 405, 620, 420, 1432, 759, 760, 1353, 794, 761, 
        762, 1363, 796, 770, 1493, 771, 458, 778, 1497, 779, 473, 683, 1385, 
        488, 698, 1390, 503, 1467, 713, 518, 1479, 728, 533}], 
       Line3DBox[{337, 548, 1310, 339, 562, 1321, 361, 577, 1331, 376, 592, 
        1339, 391, 742, 1489, 744, 406, 747, 1491, 749, 808, 821, 822, 809, 
        811, 810, 1507, 823, 812, 813, 769, 1492, 738, 797, 773, 776, 1495, 
        775, 459, 780, 799, 1506, 782, 474, 684, 1386, 489, 699, 1391, 504, 
        714, 1394, 519, 1480, 729, 534}], 
       Line3DBox[{341, 550, 1311, 342, 1399, 564, 363, 1403, 579, 378, 1409, 
        594, 393, 745, 1501, 790, 608, 408, 750, 1503, 792, 622, 422, 1433, 
        737, 764, 805, 634, 1510, 434, 818, 819, 807, 820, 646, 446, 777, 
        1496, 658, 461, 783, 1499, 671, 476, 1450, 686, 491, 1458, 701, 506, 
        1469, 716, 521, 1482, 731, 536}], 
       Line3DBox[{343, 551, 1312, 344, 565, 1322, 364, 1404, 580, 379, 1410, 
        595, 394, 746, 1490, 609, 409, 1423, 751, 623, 423, 1434, 752, 635, 
        1504, 435, 765, 647, 1364, 447, 659, 462, 1445, 672, 477, 1451, 687, 
        492, 1459, 702, 507, 1470, 717, 522, 1483, 732, 537}], 
       Line3DBox[{345, 552, 1313, 346, 566, 1323, 365, 581, 1332, 380, 1411, 
        596, 395, 1416, 610, 410, 1424, 753, 624, 424, 1435, 754, 636, 1505, 
        436, 766, 648, 1365, 448, 660, 1373, 463, 673, 478, 1452, 688, 493, 
        1460, 703, 508, 1471, 718, 523, 1484, 733, 538}], 
       Line3DBox[{347, 553, 1314, 348, 567, 1324, 366, 582, 1333, 381, 597, 
        396, 1417, 611, 411, 1425, 625, 425, 1436, 637, 1354, 437, 649, 1366, 
        449, 661, 1374, 464, 674, 1380, 479, 689, 494, 1461, 704, 509, 1472, 
        719, 524, 1485, 734, 539}], 
       Line3DBox[{349, 554, 1315, 350, 568, 1325, 367, 583, 1334, 382, 598, 
        1340, 397, 612, 412, 1426, 626, 426, 1437, 638, 1355, 438, 650, 1367, 
        450, 662, 1375, 465, 675, 1381, 480, 690, 1387, 495, 705, 510, 1473, 
        720, 525, 1486, 735, 540}], 
       Line3DBox[{351, 555, 1316, 352, 569, 1326, 368, 584, 1335, 383, 599, 
        1341, 398, 613, 1344, 413, 627, 1346, 427, 1438, 639, 1356, 439, 651, 
        1368, 451, 663, 1376, 466, 676, 1382, 481, 691, 1388, 496, 706, 1392, 
        511, 721, 526, 1487, 736, 541}], 
       Line3DBox[{353, 740, 1488, 741, 354, 570, 1327, 369, 585, 1336, 384, 
        600, 1342, 399, 614, 1345, 414, 628, 1347, 428, 640, 1357, 1358, 440, 
        652, 1369, 452, 664, 1377, 467, 677, 1383, 482, 692, 1389, 497, 707, 
        1393, 512, 722, 1395, 527, 785, 786, 787}], 
       Line3DBox[{528, 723, 784, 1474, 513, 708, 1462, 498, 693, 1453, 483, 
        678, 1446, 468, 665, 1442, 453, 653, 1440, 441, 641, 1439, 429, 1348, 
        629, 1427, 415, 615, 1418, 400, 601, 1412, 385, 586, 1405, 370, 571, 
        1400, 355, 556, 1397, 326, 542, 739, 788}], 
       Line3DBox[{535, 730, 1481, 520, 715, 1468, 505, 700, 1457, 490, 685, 
        1449, 475, 670, 1498, 800, 781, 460, 657, 1494, 798, 774, 445, 645, 
        1508, 824, 814, 772, 803, 806, 802, 433, 633, 804, 801, 763, 816, 817,
         1509, 815, 421, 621, 791, 1502, 748, 407, 607, 789, 1500, 743, 392, 
        593, 1408, 377, 578, 1402, 362, 563, 1398, 340, 549, 1396, 
        338}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJyNXXV8VUfTDgR3d1KCS5CgLQEGdw3uHlwKFJdQpMU1SCAQ3AmeoBMIEieB
uN8bAYoVp8W+czMzJ+/dcMvXf/Lrvts9s3NmZ555zrP3tR01zXFsVisrq7Ts
VlbWVvJPEsjfQIclTnvc06BXk4PbN8+Mh5f+Py0rXsegj3dZ6dDbt1sMZE2I
e3hoglEft276vk7yzAjwmVHSz+lQsj5+KJ9HvsMPQ6FkyuzLrQJT9PFc7qPb
TYr3hVx2nnHXb6bq4y47Tf9cBqf0f9L08TJDCtb7y8vlmvy7/N1L81Gdn4/W
R3X9I2QPqvaw/XhLsb877RfV/fYh/6DqH/Yjqv6UeeJXZX4m/198NLvRmY9x
ENa/Q2/rURnrl53da2TfMtHgUupLLu+HRgji8QKdOo4q2jwMCqb/zdhXxHO8
U2VvIIx63aPPkDkZfmjT9+CNcbeuw3v4FBzUK8NvNtuuGa/235nJzz1oPsp8
eW48rY/q+oXIHiyg2FOe7MetbL+Me9F+8aGyX/Hnl2+mfxJVf6LqT3lPEqcy
Ln4Uv1ryv+xrf/+/NzZvFwe3G2+b3/5Ehj19rfc0Xt8xEmacWlbbdlyyPj9u
5a/2h4NDYOvjoOs9smb4YetjB/cy3jfhqrFzR9t6Gf707maM6zBhTyY/u9J8
lPmyfiKtj1t4fRnvR/bgr4o9B8h+FPuDfuDPcPIPXlD8w/5E1Z9yzuXc6+eX
36vEqTxX7BC//ij+1xf7Nr9ytVjIM/pbr1JlMuJE4lyNq/zHYNzxN3egUPrf
DP/vmJ7/r8AsBzL5uQTNR5kvdhaxELebyB7Mzfb8yJ93ab/ozvuV+dvIP1iG
/aP4E1V/Sp6SPCrjcs7FHzIucSlxKs8VP4pff+R/S3lG8sloPu8yXiE9bxzL
5OckC/nBhvPAFiUPZFH8KevnJftxnWI/7xd7834V/2A+xT/sT1T9KXVC6pKM
i92y74xzTedQzr15fGZ+L5bOhaX8k99CPt+ZHs/ndT/L/GIW4lb8+VmJT4nD
0kocWvIb7xdjlP1yHGAY+yfI3J+o+lPqtNR5GZe6InVJxiUPSh7V6wufWzn3
ij36+woy35fu1x/l/13pfvbJ5Gdr9uc/ij8Lsd/y8PpBin8eKPaw/ZhHsf8K
7Rc3Kftl/2BLxT/sT1T9+SPcZKnOW6pLlvKopXMvcRqkjItf1fwpf5V1cLPy
HmTcRTkHMl7++/bgtu/bj1e/v19eJ5N/UPWnxLPgUDWeBTfJfiWepc4r8aDX
JRmX/CN5VM0zcu5lXOLSWvGn4kd93JL/eX0spKzP9mC8Yo/EczG2X43nnbxf
NZ67sX/UeFb9KflZcL2an1V7BCcJbgpS/FZE2ZfUIalLMi55M4viHznncu5l
fSUuM/xjnp8t+l/WYXyMZRV7CirvJch8vxiv7FfeV4ziH8nPqj8Fb0ifpMab
Gg+COwWHynMFJwlukvEvij9lXOqQ1CVZ/4E53tDnK+dcn6/0I/p4WfO+44f+
Z/uR8ZK6X2R8lem8FFD8I3hD9ectc/ysj0tfVF5574KfBder/lTPr+AkwU0y
ns8cV2TEszl+1seVvKmPFzPHz5nivKByLtab4+cf5p87jJ/3Kft1Uc5FkLk/
UfWn9IPSx8u49JnSdwb+wJ+C4wXXy3N7m/eD+vwY835QH5e6LnlRxznmdUgf
l7ypzo837wd1e/qa94P6fPHjHcV+S/5n/6Cn4h/pB1V/Cr8hvMiP/Cl9pvSd
Ol6xkAcsxW2YhfzQ0pzf0OcrdV0f72bOb2S8Rwv5pICFfC5xKXEq9nia8xs/
zD/Cb6j+VPCqPq7wdfq4wtfp4wpfp48rfF1GvTDn6/Rxha/LeI/mOEkfV/i6
jPdrztfp4wpfp9ovfJ0+rvB1+rjC1/0w/1jqi3PwvNcK/pd/z/H9df7f69cf
UKBkwNYkKNoYctQLSPghz8DzUZ2/wQLvtMcCvzSA88Z0rucW6q8+/ojPxUiF
B8jKdgpu0us7n5d8jCNkfAyfKz+lv5Z82kvp69luXM/7U3H1BqVvkvE9Ct6W
/TxQniv7kf3J/D3pdfBhpj4n0ML/XpjzQjal35TzsF6ZL/krSXmu5P3dCn6W
9zRAwSHi39IKPpT3Ie9Hr8vmdujryPsYo+S94kp+lnXEbjUP97JQH9ebx6c+
f7eFemepjtjzeSlG8f/DvCrz+L/T58v5kfNnYb7SJ5/OzHdxXd6s8MC26XXn
cqb5tlwvNis8mPi3uMIXCZ6IUniYH9ll4flYxsL4VWUd2Y/sTx9nu20VvCpx
X1ipj8rz9PEoC3hJscPS+9Lfr7xXC/GQmWfj+EhV8pX8e34lfizl8yPp5yjZ
Un7AP5T/3ZI9su43Jc+/4/M1QsnDlp4v5/aqkt8UO3T7v1k4X5b2K7hH7aOL
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
eh2pTf0RbKH+CKU/usrfBeU7odTZTtR/wT3qv3AU919LqF+DetSvofRrVowD
uL/T8/B/83XHM/l5nAUeqbWSTyRv8HdZlO+W0s+Opf4Xy1D/i9L/vqB+Gblf
RumXLfmf+3G8T/04Sj/e8NaNM8GlEiDXzV/CbyYn6Xz1IOrr4Qj19Xpdy0c8
ADQgHgCFB1hJvAEkE2+Ac5g3sCGeAQYTz4DCM6QRLwEHiJfAZOYl/puvy8yL
WuKRRhGvgpOJV0HhVXISD4MTiYfR/RxFvA0uJ94GPTk/3yeeB5nnQeF5OhIv
hFuIF0LhhbKz3z8q+k/59+zKe2lk7n8Q/9ejcczD4/KdRd7rV2X9rgrvIXGl
1DV9vhvnk6pK/9LSPD51/mQcx6HwMB4ch1Us9KcKDtFxfnfC+RDHOL884/wK
5nleX8eS/n8X45BNSj8yj/O5K/fjwZzPBYckKf2O9EH/KuPPGa+uU3Cv4Njj
jGMFV5/ldbJ/IJwj60jftF+xU/Ctf8Pv4nl4ReMo49t4nRMK7sqW7p+QZn7s
l1DRTfJ32yqsH5DviUofoa8vOP+lgs9jGHf5KLjrN+Y9Dil1sxrrFn7i78Xy
nTSY8dheBY+JDl+9R6DsC2VfnTh+kih+UOInq3lfqa9jy/Gp4gdFL6TX05rc
h/7F69vw+oW4XrdX6jXnZ1Dzs6v5+dLXl++Vah7rZH5+9fj5w5xnQNEdyflX
87wl/KPkE/27raJXRNErKt8XQL4viJ5HzSdb+DvUT4rej+b7ZOJPlO+wup5K
/vcwRXch/30/Radhx9/91e/a8n0/QPm+383Cd3zFTt1vR/j7XXnl+53iB31+
nvTxv5rdkX3w363czxfl95L2v/Od9fko8+nelyHTOm6c95Yr+SR9vnNSpnUq
ch6or5zH3uyHnoqOy47PbxFFd9Sb89JcJV9t57x02EJ+81Py2Bae78V5zJHn
W9KlpPtZ6/dVvZMy33zc+WGm8a6c964rec+V/emi5FVv5p1ucb6S+XyuMvFa
4Zzf1jBPJflN4tZR0R0pdur7Ff26fEcVHbucQzmXch5FNyw6YvkOKzpX0RfI
d3DREYpOU3QIonsTfY3oQET3Jjo40eFY0m+Jbkl0TKJfEr2OrC+6HdGXLFTs
ET2Ear98v8+q7Fe+N4vf5Dup6PtF7y/fVUXPLd9L5Tup6K1Ffy3zRR8semHR
G4ieVfStkldFfyl6TNEjiV5Q9IOi47KkexO9l5syX3ROtZT1RZezTbFHdCRv
FftF9/C7sl/5Du34fb+h6jfRzcs9CfmuLTp7+f4s351Fvy56dtEbiN5a9Ncy
Lvpg0QuLvkj0rB+V74CivxQ9pujNLOkIRT/3TJm/3rwv09cXnVNJxR7R5YhO
R3QjoiMRXYmMiw5AdBC5zP2Gqt/kPkmQoueU+yfyPV++g8t9ALkfIHoP0WUt
V/TJore2V/Thog9W71OInlX0raIzVHWZ+v1H1gVGKfNFh9dbWX+pBb16XXNd
lj4uupwAZb+WdMKie1D9Jvdw5F6O6EzkXoroI0SHIPcr5L6F3LOQ+wByP0D0
TqJfFz278Mmity6rfBcWfbDohcUeFSfJX8FDgo8EF11WvjsLTyI6vAaKPaIb
26fYLzon0T2Jvkh0OZO+7zdU/Sb3l+Q+k+hq5L6T6E1EByL3SeT+iuAxuV8h
9y2kT5H7AIL3BYeLfl3woOAc0VuL/lrGBXeqODbAQtwKvuysrC+6xveKPaLD
C1DsF13XPmW/onMS3ZOLud9Q9Zt8lxEdhPAq5t/lMu57ie5EdCjCq5jPz/ie
L9/75f6Q8GPm8zPuD8l3a/mOLbyl+fyMezByf0PucwifHGg2X++r9HsIci9B
7iOYz/dqJrhLcHBv5X0JblPfu7xfNX5EByy64Lbmz0XRBSv7wnvf3xeq+xKe
t973/Yaq34SvLPL994LqexHebf734wQtxAlaiBNU40TicJzyfVDiTfg8WUfi
Snhr4atFLyL3osQPom8QvYP4U+6ZyL0TeS+iwxZdtuixRTd8XllH/C/fK+Q7
hfhZtVP4X6fv7xfV/cp9SLkfKflQ7k+KPk7Nh3LfTvKD3AeT+2GST+T+ktxn
kr5b7tvI/Rvhi0T3L/cAZFx06q2U+aKrlv5e8pvogG8r9kh+Ex2r6FdFZ2n4
vh9Q9YPcC5V7omq9Fv2g1B25fyj3EaV+yX05uT8n9U7ud8l9L6mbV5TvDlI3
5V6E3JMQe0THX1KZL7rzOsr6opPerdgjut4xiv2iQxVd6mel/qp+EDznr/Ak
cp9W9JWCi+R+ptzXVPGks6KTX2pBl25J3yv3juQeieBD5b6NzreUMseT+n0T
uRfhqKwvOv46ij2iO1ftF520r7Jf0fX6ft9vqPpN6Y9Qwfm6XlV0qnLfVe6/
Sr8g9zNFFy/jcp9Q7hdKP7LWXCepf+8INO+P9Ps4yv0l3c9yb0edL/dM3ivr
y70IuSch9yMemPdHus5cdOeiQ/dU+iPRTSt9Jap+k/vYcj9b7fdF/yu6X7k/
LDp3mS/3XeWegfTLtc37fZ1H7WLe7+s8ZIh5v6/fb1Lug+l+lntQ6vxu5v2+
vn5d835f/363wbzf1+0PM+/30UK/r/oNVb/dNOepdF36QHM+Sr8X4GLOR6HK
R8n9GIPCR8n9JOGjvpjzUfq9MOUeXQYfy3yUOl/uO6nrXzHno/R7OnKf5LNi
v9x/yKLsV/T6dxX/CM8uvLvw7d1d820w6aRfla253aSb7llhT/r32VVbnRq+
aan1sQVW7DLpfCPyrU3/Pl7+77qNRy4PA4dVqePW1kyBMMOFziZ9Ataef+T4
0iAo8+/aUlajU8G37ygPkz5k/IKpZ/tW9IZDARuf3muVBs8+BS806W2mm3+n
hraMT6o6Frm55Lg/9g/os6mKayrUzRtZ7LqWxy68mdpjS4eHGDCr4p79M1Lg
mM2T96Y60uyqV+v7jaNw47mxLqNLJkP4/LT459r8tJGz38bVjsOELBc2Dzpt
gNnB81c6a+MdDq+s6twjEZs+X9/PqWcS/PrAN9/f2nPlO7R8l5Z4Htg2tbVJ
xxwx17WdSdf8+tamdP1A4XbTmx65Hgm5P+2oY/oe1X3YHj/Td6h6Xm273T0R
Ctmnzzji+SAFjtr+9MKkn6lSfeqXbwtuw0XPaa++ZdfiYHidOabvLB8t6Lov
ZjvvFlU8HAeN+Dbh+vtk6Di1SmVXbfy+zbiYP3rG4JrFW1NxoBHK3jv+l5dJ
17qlQEylPglafT1Z2ep6EnxdZWfVUKvXTr1C3P89nYSLXyesfjwnAawnWXdd
q9XrnE8il3wKM+C8lUHVdvnEwp1dq1vlOKrhjde795t0w1n7nD5n0hE7Vfsr
Xa/i7PPGs8focOi/vJXnjhfJcHL/4Q0mPcZ6p1qR1oP9oW5863pF9qaC9R9+
t036q3sW9NJ2aZXPdwuLwyiP1MTV/Qzw7GTfAVYXtTpS8XjUkdFJuHJN4X0t
rBOh5aEyNq3OpsHUxln6L9Twyqaub9a2uhkLVq5V4qM1PzwLqf7JK8yI15u0
/br0VRS0j4/uXkLbb//otK+5KsbAjNz32ofNMcI8T/qeXuTXQS1su4ZCpfm7
uiQnpcCaS2XS6+xov1ul297W8s+nU233YiwE1qib/n3NbuX7DnOyJOOIJaEh
dr2joN2XSen6DWx8ZtqqmGSMujBhQNLv4TBof+F0vcGpKL/csV0jIc5jweWL
w5NhyLcuBUy6NeOHL/02OqTgGneDc9Z/H8L8T8dfRWnrZG3zbOmC6BQ8vyP7
0VcDQqHC3vPdTPoE0X9kZT1II46H9fsaPF52NRXzP9tee9kFX7Ad936kSbdg
1rc67830fYzGM+vfqT86ZGE8Q8dt/js6FzKNi65W+tmA/+2/vCP0cfO+8p76
XB6/amH8koXxsxbGM/pQ6YOEf2j73b4yow8dX9njnzZa3/eP89xGu0siVr64
+4uvFs8l6hqXb9P6vksjG4TtdfDBfacTNtto/dfmjVsKDtb6vn+GTlv5qpQf
ZvtSNZ+1Freizxa9tvQjojMW3bHojX2fb+x2bGMKZtlWY97XOw+w9j+NmpTQ
nlu8X5D39mOpmPbrkz2xT/1Q8kadPs2KuWr94NE9Kz930ex5fvrQup80ewa7
NljYUesHX6wpHLylBKJD475N/bV15mabUeCl5oeZbw4PL1jgCkreq+kVWjNS
6weDV7r3raX1g1taVp5j6gcH+Ni6H9Ts37Hx6bbdM0Nx7xaXr/Ga/fvyLJ5e
2ysZ3E/nvz/4VDgWbzz/+A5vDYew7lx06PKdWvTToqeW71m/dZqQ/YSGo3I3
+WPT4EeRGH/+eV/TvsQP2RQ/tJ8yYOjwNqmYt9f6j3aXg7W6emDCrkMZ/vlL
8c/FAjHjbZ+k4viRzl0PjryLYY+HDDXpcN6PzFf08TkD/P40oeF7jEWr1aOa
B/hoeWaw29Y/SieAewOnucfdknDtEBiyL1yLE9Z5i+5b+sd8m4eP3TTCiJOy
DJ29dnQMnoWyuU06wLD8PcuVv5yM2TdO/7dm1QiUPHn6+sJsdTSc6hDaImmL
hlv9J/kUNeHVf/Yl/7K7QCruT7h0M2BZCNq/mV7INL781wF2p7rEQKzDhBzP
HIxY7EXpGia/tXxWfM/Eug+g5+pnucZp6wUssfU06W+3PQgv8MFoQL+t/Uea
9HEnWBd399XttRVtkvHMlEoFe9aPwg5VSCdwtc37Ub+8Tsa0yr99XDEwHCVP
vrg9Ile9fCGw8kH2rgM0u5rl77zzlJa3feu86GrSe921+7WjSf/1MtAlXff1
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
rv++gcwP+N/nauvI/P8D0FLdfQ==
     "]],
   Axes->True,
   BoxRatios->{1, 1, 0.4},
   Method->{"RotationControl" -> "Globe"},
   PlotRange->{{-100, 100}, {-100, 100}, {0., 141.42133603425862`}},
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171705647690735`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", 
    StyleBox["\[Infinity]", "MR"]}], "\[Infinity]"], 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.6171705717504725`*^9, 3.6171705880414047`*^9}}],

Cell[BoxData[
 FormBox[
  SqrtBox["\[Pi]"], TraditionalForm]], "Output",
 CellChangeTimes->{{3.617170568773302*^9, 3.6171705895074883`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Erf", "[", "\[Infinity]", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{3.6171706011441536`*^9}],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{3.61717060213021*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "\[Infinity]"], 
    FractionBox[
     RowBox[{"sin", "[", 
      RowBox[{
       SuperscriptBox["n", "2"], " ", "\[Kappa]", " ", "x"}], "]"}], 
     SuperscriptBox["n", "2"]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", " ", "\[Kappa]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"Plot", "::", "plln"}], "MessageName"], 
   RowBox[{
   ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(TraditionalForm\\`\\(2\\\\ \
\[Kappa]\\)\\)\[NoBreak] in \[NoBreak]\\!\\(TraditionalForm\\`\\({x, 0, \
\\(\\(2\\\\ \[Kappa]\\)\\)}\\)\\)\[NoBreak] is not a machine-sized real \
number. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/plln\\\", ButtonNote -> \
\\\"Plot::plln\\\"]\\)\"\>"}], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.6171706608605695`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "1"}], "\[Infinity]"], 
     FractionBox[
      RowBox[{"sin", "(", 
       RowBox[{"\[Kappa]", " ", 
        SuperscriptBox["n", "2"], " ", "x"}], ")"}], 
      SuperscriptBox["n", "2"]]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"2", " ", "\[Kappa]"}]}], "}"}]}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6171706608635693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"\[Pi]", ",", "10000"}], "]"}], "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 FormBox["3.\
141592653589793238462643383279502884197169399375105820974944592307816406286208\
998628034825342117067982148086513282306647093844609550582231725359408128481117\
450284102701938521105559644622948954930381964428810975665933446128475648233786\
783165271201909145648566923460348610454326648213393607260249141273724587006606\
315588174881520920962829254091715364367892590360011330530548820466521384146951\
941511609433057270365759591953092186117381932611793105118548074462379962749567\
351885752724891227938183011949129833673362440656643086021394946395224737190702\
179860943702770539217176293176752384674818467669405132000568127145263560827785\
771342757789609173637178721468440901224953430146549585371050792279689258923542\
019956112129021960864034418159813629774771309960518707211349999998372978049951\
059731732816096318595024459455346908302642522308253344685035261931188171010003\
137838752886587533208381420617177669147303598253490428755468731159562863882353\
787593751957781857780532171226806613001927876611195909216420198938095257201065\
485863278865936153381827968230301952035301852968995773622599413891249721775283\
479131515574857242454150695950829533116861727855889075098381754637464939319255\
060400927701671139009848824012858361603563707660104710181942955596198946767837\
449448255379774726847104047534646208046684259069491293313677028989152104752162\
056966024058038150193511253382430035587640247496473263914199272604269922796782\
354781636009341721641219924586315030286182974555706749838505494588586926995690\
927210797509302955321165344987202755960236480665499119881834797753566369807426\
542527862551818417574672890977772793800081647060016145249192173217214772350141\
441973568548161361157352552133475741849468438523323907394143334547762416862518\
983569485562099219222184272550254256887671790494601653466804988627232791786085\
784383827967976681454100953883786360950680064225125205117392984896084128488626\
945604241965285022210661186306744278622039194945047123713786960956364371917287\
467764657573962413890865832645995813390478027590099465764078951269468398352595\
709825822620522489407726719478268482601476990902640136394437455305068203496252\
451749399651431429809190659250937221696461515709858387410597885959772975498930\
161753928468138268683868942774155991855925245953959431049972524680845987273644\
695848653836736222626099124608051243884390451244136549762780797715691435997700\
129616089441694868555848406353422072225828488648158456028506016842739452267467\
678895252138522549954666727823986456596116354886230577456498035593634568174324\
112515076069479451096596094025228879710893145669136867228748940560101503308617\
928680920874760917824938589009714909675985261365549781893129784821682998948722\
658804857564014270477555132379641451523746234364542858444795265867821051141354\
735739523113427166102135969536231442952484937187110145765403590279934403742007\
310578539062198387447808478489683321445713868751943506430218453191048481005370\
614680674919278191197939952061419663428754440643745123718192179998391015919561\
814675142691239748940907186494231961567945208095146550225231603881930142093762\
137855956638937787083039069792077346722182562599661501421503068038447734549202\
605414665925201497442850732518666002132434088190710486331734649651453905796268\
561005508106658796998163574736384052571459102897064140110971206280439039759515\
677157700420337869936007230558763176359421873125147120532928191826186125867321\
579198414848829164470609575270695722091756711672291098169091528017350671274858\
322287183520935396572512108357915136988209144421006751033467110314126711136990\
865851639831501970165151168517143765761835155650884909989859982387345528331635\
507647918535893226185489632132933089857064204675259070915481416549859461637180\
270981994309924488957571282890592323326097299712084433573265489382391193259746\
366730583604142813883032038249037589852437441702913276561809377344403070746921\
120191302033038019762110110044929321516084244485963766983895228684783123552658\
213144957685726243344189303968642624341077322697802807318915441101044682325271\
620105265227211166039666557309254711055785376346682065310989652691862056476931\
257058635662018558100729360659876486117910453348850346113657686753249441668039\
626579787718556084552965412665408530614344431858676975145661406800700237877659\
134401712749470420562230538994561314071127000407854733269939081454664645880797\
270826683063432858785698305235808933065757406795457163775254202114955761581400\
250126228594130216471550979259230990796547376125517656751357517829666454779174\
501129961489030463994713296210734043751895735961458901938971311179042978285647\
503203198691514028708085990480109412147221317947647772622414254854540332157185\
306142288137585043063321751829798662237172159160771669254748738986654949450114\
654062843366393790039769265672146385306736096571209180763832716641627488880078\
692560290228472104031721186082041900042296617119637792133757511495950156604963\
186294726547364252308177036751590673502350728354056704038674351362222477158915\
049530984448933309634087807693259939780541934144737744184263129860809988868741\
326047215695162396586457302163159819319516735381297416772947867242292465436680\
098067692823828068996400482435403701416314965897940924323789690706977942236250\
822168895738379862300159377647165122893578601588161755782973523344604281512627\
203734314653197777416031990665541876397929334419521541341899485444734567383162\
499341913181480927777103863877343177207545654532207770921201905166096280490926\
360197598828161332316663652861932668633606273567630354477628035045077723554710\
585954870279081435624014517180624643626794561275318134078330336254232783944975\
382437205835311477119926063813346776879695970309833913077109870408591337464144\
282277263465947047458784778720192771528073176790770715721344473060570073349243\
693113835049316312840425121925651798069411352801314701304781643788518529092854\
520116583934196562134914341595625865865570552690496520985803385072242648293972\
858478316305777756068887644624824685792603953527734803048029005876075825104747\
091643961362676044925627420420832085661190625454337213153595845068772460290161\
876679524061634252257719542916299193064553779914037340432875262888963995879475\
729174642635745525407909145135711136941091193932519107602082520261879853188770\
584297259167781314969900901921169717372784768472686084900337702424291651300500\
516832336435038951702989392233451722013812806965011784408745196012122859937162\
313017114448464090389064495444006198690754851602632750529834918740786680881833\
851022833450850486082503930213321971551843063545500766828294930413776552793975\
175461395398468339363830474611996653858153842056853386218672523340283087112328\
278921250771262946322956398989893582116745627010218356462201349671518819097303\
811980049734072396103685406643193950979019069963955245300545058068550195673022\
921913933918568034490398205955100226353536192041994745538593810234395544959778\
377902374216172711172364343543947822181852862408514006660443325888569867054315\
470696574745855033232334210730154594051655379068662733379958511562578432298827\
372319898757141595781119635833005940873068121602876496286744604774649159950549\
737425626901049037781986835938146574126804925648798556145372347867330390468838\
343634655379498641927056387293174872332083760112302991136793862708943879936201\
629515413371424892830722012690147546684765357616477379467520049075715552781965\
362132392640616013635815590742202020318727760527721900556148425551879253034351\
398442532234157623361064250639049750086562710953591946589751413103482276930624\
743536325691607815478181152843667957061108615331504452127473924544945423682886\
061340841486377670096120715124914043027253860764823634143346235189757664521641\
376796903149501910857598442391986291642193994907236234646844117394032659184044\
378051333894525742399508296591228508555821572503107125701266830240292952522011\
872676756220415420516184163484756516999811614101002996078386909291603028840026\
910414079288621507842451670908700069928212066041837180653556725253256753286129\
104248776182582976515795984703562226293486003415872298053498965022629174878820\
273420922224533985626476691490556284250391275771028402799806636582548892648802\
545661017296702664076559042909945681506526530537182941270336931378517860904070\
866711496558343434769338578171138645587367812301458768712660348913909562009939\
361031029161615288138437909904231747336394804575931493140529763475748119356709\
110137751721008031559024853090669203767192203322909433467685142214477379393751\
703443661991040337511173547191855046449026365512816228824462575916333039107225\
383742182140883508657391771509682887478265699599574490661758344137522397096834\
080053559849175417381883999446974867626551658276584835884531427756879002909517\
028352971634456212964043523117600665101241200659755851276178583829204197484423\
608007193045761893234922927965019875187212726750798125547095890455635792122103\
334669749923563025494780249011419521238281530911407907386025152274299581807247\
162591668545133312394804947079119153267343028244186041426363954800044800267049\
624820179289647669758318327131425170296923488962766844032326092752496035799646\
925650493681836090032380929345958897069536534940603402166544375589004563288225\
054525564056448246515187547119621844396582533754388569094113031509526179378002\
974120766514793942590298969594699556576121865619673378623625612521632086286922\
210327488921865436480229678070576561514463204692790682120738837781423356282360\
896320806822246801224826117718589638140918390367367222088832151375560037279839\
400415297002878307667094447456013455641725437090697939612257142989467154357846\
878861444581231459357198492252847160504922124247014121478057345510500801908699\
603302763478708108175450119307141223390866393833952942578690507643100638351983\
438934159613185434754649556978103829309716465143840700707360411237359984345225\
161050702705623526601276484830840761183013052793205427462865403603674532865105\
706587488225698157936789766974220575059683440869735020141020672358502007245225\
632651341055924019027421624843914035998953539459094407046912091409387001264560\
016237428802109276457931065792295524988727584610126483699989225695968815920560\
01016552563756785667227966198857827948732908019306543`10000.", 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6171707016219006`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[ExponentialE]", ",", "50"}], "]"}]], "Input"],

Cell[BoxData[
 FormBox["2.\
7182818284590452353602874713526624977572470936999595749667819473231342795517`\
50.", TraditionalForm]], "Output",
 CellChangeTimes->{3.617170708313284*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", " ", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.6171708898116646`*^9, 3.617170893390869*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"n", "+", "1"}], "]"}], "==", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "n", "]"}], "^", "n"}], " ", "+", " ", "1"}]}], ",", 
   RowBox[{"a", "[", "n", "]"}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.617170720784997*^9, 3.6171707444503503`*^9}, {
  3.6171707976723948`*^9, 3.6171708152343993`*^9}, {3.6171708475702486`*^9, 
  3.6171708795050755`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"RSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "(", 
      RowBox[{"n", "+", "1"}], ")"}], "\[LongEqual]", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"a", "(", "n", ")"}], "n"], "+", "1"}]}], ",", 
    RowBox[{"a", "(", "n", ")"}], ",", "n"}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.617170710713421*^9, 3.617170746326458*^9}, {
  3.617170800129535*^9, 3.617170896390041*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"n", "+", "1"}], "]"}], "\[Equal]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"a", "[", "n", "]"}], "n"], "+", "1"}]}], ",", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"a", "[", "n", "]"}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.6171709218604975`*^9, 3.617170924939674*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"RSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "(", 
        RowBox[{"n", "+", "1"}], ")"}], "\[LongEqual]", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"a", "(", "n", ")"}], "n"], "+", "1"}]}], ",", 
      RowBox[{
       RowBox[{"a", "(", "0", ")"}], "\[LongEqual]", "1"}]}], "}"}], ",", 
    RowBox[{"a", "(", "n", ")"}], ",", "n"}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.617170916194174*^9, 3.6171709255127068`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", "x", "]"}], "x"], ",", 
   RowBox[{"x", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617170966603057*^9, 3.6171710162678976`*^9}}],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{{3.617170937227377*^9, 3.6171709812218933`*^9}, {
  3.617171016802928*^9, 3.6171710224252496`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Dt", "[", 
      RowBox[{
       RowBox[{"\[CurlyPhi]", "[", "x", "]"}], ",", "x", ",", "x"}], "]"}], 
     "+", 
     RowBox[{
      FractionBox[
       RowBox[{"8", "*", 
        SuperscriptBox["\[Pi]", "2"], "*", "m", "*", "E"}], 
       SuperscriptBox["h", "2"]], "*", 
      RowBox[{"\[CurlyPhi]", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{"\[CurlyPhi]", "[", "x", "]"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CurlyPhi]", "(", "x", ")"}], "\[Rule]", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        TagBox["c",
         C], "2"], " ", 
       RowBox[{"sin", "(", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"2", " ", "\[ExponentialE]"}]], " ", "\[Pi]", " ", 
          SqrtBox["m"], " ", "x"}], "h"], ")"}]}], "+", 
      RowBox[{
       SubscriptBox[
        TagBox["c",
         C], "1"], " ", 
       RowBox[{"cos", "(", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"2", " ", "\[ExponentialE]"}]], " ", "\[Pi]", " ", 
          SqrtBox["m"], " ", "x"}], "h"], ")"}]}]}]}], "}"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6171710241303473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       FractionBox["1", 
        SuperscriptBox["r", "2"]], ")"}], 
      RowBox[{
       SubscriptBox["\[PartialD]", "r"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[PartialD]", "r"], " ", 
           RowBox[{"\[CurlyPhi]", "[", 
            RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}], 
          ")"}]}], ")"}]}]}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["r", "2"], 
        RowBox[{"Sin", "[", "\[CapitalTheta]", "]"}]}]], 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[CapitalTheta]"], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"Sin", "[", "\[CapitalTheta]", "]"}], 
         RowBox[{
          SubscriptBox["\[PartialD]", "\[CapitalTheta]"], " ", 
          RowBox[{"\[CurlyPhi]", "[", 
           RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}]}], 
        ")"}]}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["r", "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[CapitalTheta]", "]"}], "2"]}]], ")"}], 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
       RowBox[{"\[CurlyPhi]", "[", 
        RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", "\[Mu]"}], 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["h", 
           RowBox[{"2", "\[Pi]"}]], ")"}], "2"]], ")"}], 
      RowBox[{"(", 
       RowBox[{"E", "+", 
        FractionBox[
         SuperscriptBox["Ze", "2"], 
         RowBox[{"4", "\[Pi]\[Epsilon]r"}]]}], ")"}], 
      RowBox[{"\[CurlyPhi]", "[", 
       RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}]}], 
    "\[Equal]", "0"}], ",", 
   RowBox[{"\[CurlyPhi]", "[", 
    RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SuperscriptBox["Ze", "2"], 
           RowBox[{"4", " ", "\[Pi]\[Epsilon]r"}]], "+", "\[ExponentialE]"}], 
         ")"}], " ", 
        RowBox[{"\[CurlyPhi]", "(", 
         RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], 
       SuperscriptBox["h", "2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[CurlyPhi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "(", 
          RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], "+", 
        RowBox[{"2", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["\[CurlyPhi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "(", 
          RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}]}], 
       SuperscriptBox["r", "2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[CapitalTheta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[CurlyPhi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "(", 
         RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], 
       SuperscriptBox["r", "2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"csc", "(", "\[CapitalTheta]", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"sin", "(", "\[CapitalTheta]", ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[CurlyPhi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "(", 
            RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], 
          "+", 
          RowBox[{
           RowBox[{"cos", "(", "\[CapitalTheta]", ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[CurlyPhi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "(", 
            RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}]}], 
         ")"}]}], 
       SuperscriptBox["r", "2"]]}], "\[LongEqual]", "0"}], ",", 
    RowBox[{"\[CurlyPhi]", "(", 
     RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "}"}]}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6171710348839626`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolveIntegrals", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", 
       SuperscriptBox["\[Pi]", "2"], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"\[ExponentialE]", "+", 
         FractionBox[
          SuperscriptBox["Ze", "2"], 
          RowBox[{"4", " ", "\[Pi]\[Epsilon]r"}]]}], ")"}], " ", 
       RowBox[{"\[CurlyPhi]", "[", 
        RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}], 
      SuperscriptBox["h", "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[CapitalTheta]", "]"}], "2"], " ", 
       RowBox[{
        SuperscriptBox["\[CurlyPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}], 
      SuperscriptBox["r", "2"]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"Csc", "[", "\[CapitalTheta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[CapitalTheta]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[CurlyPhi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "\[CapitalTheta]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[CurlyPhi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}]}], 
        ")"}]}], 
      SuperscriptBox["r", "2"]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "r", " ", 
        RowBox[{
         SuperscriptBox["\[CurlyPhi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{
         SuperscriptBox["\[CurlyPhi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}]}], 
      SuperscriptBox["r", "2"]]}], "==", "0"}], ",", 
   RowBox[{"\[CurlyPhi]", "[", 
    RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"DSolveIntegrals", "(", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SuperscriptBox["Ze", "2"], 
           RowBox[{"4", " ", "\[Pi]\[Epsilon]r"}]], "+", "\[ExponentialE]"}], 
         ")"}], " ", 
        RowBox[{"\[CurlyPhi]", "(", 
         RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], 
       SuperscriptBox["h", "2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[CurlyPhi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "(", 
          RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], "+", 
        RowBox[{"2", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["\[CurlyPhi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "(", 
          RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}]}], 
       SuperscriptBox["r", "2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[CapitalTheta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[CurlyPhi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "(", 
         RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], 
       SuperscriptBox["r", "2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"csc", "(", "\[CapitalTheta]", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"sin", "(", "\[CapitalTheta]", ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[CurlyPhi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "(", 
            RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], 
          "+", 
          RowBox[{
           RowBox[{"cos", "(", "\[CapitalTheta]", ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[CurlyPhi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "(", 
            RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}]}], 
         ")"}]}], 
       SuperscriptBox["r", "2"]]}], "\[LongEqual]", "0"}], ",", 
    RowBox[{"\[CurlyPhi]", "(", 
     RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "}"}]}], ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.617171059559374*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", 
       SuperscriptBox["\[Pi]", "2"], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"\[ExponentialE]", "+", 
         FractionBox[
          SuperscriptBox["Ze", "2"], 
          RowBox[{"4", " ", "\[Pi]\[Epsilon]r"}]]}], ")"}], " ", 
       RowBox[{"\[CurlyPhi]", "[", 
        RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}], 
      SuperscriptBox["h", "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[CapitalTheta]", "]"}], "2"], " ", 
       RowBox[{
        SuperscriptBox["\[CurlyPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}], 
      SuperscriptBox["r", "2"]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"Csc", "[", "\[CapitalTheta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[CapitalTheta]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[CurlyPhi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "\[CapitalTheta]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[CurlyPhi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}]}], 
        ")"}]}], 
      SuperscriptBox["r", "2"]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "r", " ", 
        RowBox[{
         SuperscriptBox["\[CurlyPhi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{
         SuperscriptBox["\[CurlyPhi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}]}], 
      SuperscriptBox["r", "2"]]}], "==", "0"}], ",", 
   RowBox[{"\[CurlyPhi]", "[", 
    RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SuperscriptBox["Ze", "2"], 
           RowBox[{"4", " ", "\[Pi]\[Epsilon]r"}]], "+", "\[ExponentialE]"}], 
         ")"}], " ", 
        RowBox[{"\[CurlyPhi]", "(", 
         RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], 
       SuperscriptBox["h", "2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[CurlyPhi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "(", 
          RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], "+", 
        RowBox[{"2", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["\[CurlyPhi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "(", 
          RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}]}], 
       SuperscriptBox["r", "2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[CapitalTheta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[CurlyPhi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "(", 
         RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], 
       SuperscriptBox["r", "2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"csc", "(", "\[CapitalTheta]", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"sin", "(", "\[CapitalTheta]", ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[CurlyPhi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "(", 
            RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], 
          "+", 
          RowBox[{
           RowBox[{"cos", "(", "\[CapitalTheta]", ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[CurlyPhi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "(", 
            RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}]}], 
         ")"}]}], 
       SuperscriptBox["r", "2"]]}], "\[LongEqual]", "0"}], ",", 
    RowBox[{"\[CurlyPhi]", "(", 
     RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "}"}]}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6171710703959937`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompleteIntegral", "[", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"\[ExponentialE]", "+", 
          FractionBox[
           SuperscriptBox["Ze", "2"], 
           RowBox[{"4", " ", "\[Pi]\[Epsilon]r"}]]}], ")"}], " ", 
        RowBox[{"\[CurlyPhi]", "[", 
         RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox["h", "2"]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[CapitalTheta]", "]"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["\[CurlyPhi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox["r", "2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", "\[CapitalTheta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[CapitalTheta]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[CurlyPhi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}], 
          "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[CapitalTheta]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[CurlyPhi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}]}], 
         ")"}]}], 
       SuperscriptBox["r", "2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["\[CurlyPhi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[CurlyPhi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}]}]}], 
       SuperscriptBox["r", "2"]]}], "==", "0"}], ",", 
    RowBox[{"\[CurlyPhi]", "[", 
     RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "}"}]}], "]"}], 
  "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"CompleteIntegral", "(", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["\[Pi]", "2"], " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox["Ze", "2"], 
            RowBox[{"4", " ", "\[Pi]\[Epsilon]r"}]], "+", "\[ExponentialE]"}],
           ")"}], " ", 
         RowBox[{"\[CurlyPhi]", "(", 
          RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], 
        SuperscriptBox["h", "2"]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{
           SuperscriptBox["\[CurlyPhi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"2", ",", "0", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "(", 
           RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], "+", 
         RowBox[{"2", " ", "r", " ", 
          RowBox[{
           SuperscriptBox["\[CurlyPhi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "(", 
           RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}]}], 
        SuperscriptBox["r", "2"]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["csc", "2"], "(", "\[CapitalTheta]", ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[CurlyPhi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "(", 
          RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], 
        SuperscriptBox["r", "2"]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"csc", "(", "\[CapitalTheta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"sin", "(", "\[CapitalTheta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[CurlyPhi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "(", 
             RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"cos", "(", "\[CapitalTheta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[CurlyPhi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "(", 
             RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}]}]}], 
          ")"}]}], 
        SuperscriptBox["r", "2"]]}], "\[LongEqual]", "0"}], ",", 
     RowBox[{"\[CurlyPhi]", "(", 
      RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "\[CapitalTheta]", ",", "\[Phi]"}], "}"}]}], "]"}], 
   ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.617171076729356*^9}]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   SuperscriptBox["x", "105"], "-", "1"}], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "-", "1"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "x", "+", "1"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "4"], "+", 
     SuperscriptBox["x", "3"], "+", 
     SuperscriptBox["x", "2"], "+", "x", "+", "1"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "6"], "+", 
     SuperscriptBox["x", "5"], "+", 
     SuperscriptBox["x", "4"], "+", 
     SuperscriptBox["x", "3"], "+", 
     SuperscriptBox["x", "2"], "+", "x", "+", "1"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "8"], "-", 
     SuperscriptBox["x", "7"], "+", 
     SuperscriptBox["x", "5"], "-", 
     SuperscriptBox["x", "4"], "+", 
     SuperscriptBox["x", "3"], "-", "x", "+", "1"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "12"], "-", 
     SuperscriptBox["x", "11"], "+", 
     SuperscriptBox["x", "9"], "-", 
     SuperscriptBox["x", "8"], "+", 
     SuperscriptBox["x", "6"], "-", 
     SuperscriptBox["x", "4"], "+", 
     SuperscriptBox["x", "3"], "-", "x", "+", "1"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "24"], "-", 
     SuperscriptBox["x", "23"], "+", 
     SuperscriptBox["x", "19"], "-", 
     SuperscriptBox["x", "18"], "+", 
     SuperscriptBox["x", "17"], "-", 
     SuperscriptBox["x", "16"], "+", 
     SuperscriptBox["x", "14"], "-", 
     SuperscriptBox["x", "13"], "+", 
     SuperscriptBox["x", "12"], "-", 
     SuperscriptBox["x", "11"], "+", 
     SuperscriptBox["x", "10"], "-", 
     SuperscriptBox["x", "8"], "+", 
     SuperscriptBox["x", "7"], "-", 
     SuperscriptBox["x", "6"], "+", 
     SuperscriptBox["x", "5"], "-", "x", "+", "1"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "48"], "+", 
     SuperscriptBox["x", "47"], "+", 
     SuperscriptBox["x", "46"], "-", 
     SuperscriptBox["x", "43"], "-", 
     SuperscriptBox["x", "42"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "41"]}], "-", 
     SuperscriptBox["x", "40"], "-", 
     SuperscriptBox["x", "39"], "+", 
     SuperscriptBox["x", "36"], "+", 
     SuperscriptBox["x", "35"], "+", 
     SuperscriptBox["x", "34"], "+", 
     SuperscriptBox["x", "33"], "+", 
     SuperscriptBox["x", "32"], "+", 
     SuperscriptBox["x", "31"], "-", 
     SuperscriptBox["x", "28"], "-", 
     SuperscriptBox["x", "26"], "-", 
     SuperscriptBox["x", "24"], "-", 
     SuperscriptBox["x", "22"], "-", 
     SuperscriptBox["x", "20"], "+", 
     SuperscriptBox["x", "17"], "+", 
     SuperscriptBox["x", "16"], "+", 
     SuperscriptBox["x", "15"], "+", 
     SuperscriptBox["x", "14"], "+", 
     SuperscriptBox["x", "13"], "+", 
     SuperscriptBox["x", "12"], "-", 
     SuperscriptBox["x", "9"], "-", 
     SuperscriptBox["x", "8"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "7"]}], "-", 
     SuperscriptBox["x", "6"], "-", 
     SuperscriptBox["x", "5"], "+", 
     SuperscriptBox["x", "2"], "+", "x", "+", "1"}], ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.617171089497086*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", "x", "]"}], "x"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input"],

Cell[BoxData[
 FormBox[
  TemplateBox[{"x"},
   "SinIntegral"], TraditionalForm]], "Output",
 CellChangeTimes->{3.617171091123179*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", "x", "]"}], "x"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "10"}], "\[Pi]"}], ",", 
     RowBox[{"10", "\[Pi]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]], LineBox[CompressedData["
1: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
c3nVuOyEuHkx5YGGKkTQX5QudN8JN749eMZuVIWUNSafpvjthIxLV5p/dVci
cZFM7Zt3d0Lwhh6BfaQCMX4h/j5QsRP8jvvIEHPL0ECMQ+BbBhlomghC347m
o647u3eNc8hA2t0guTtmeQgHKMx0CcrAM4q7iwI5F1We/bG7WEkGusIWH70Q
ykaJBiEsly1loHQm55RwdBo6+a7oPieNzgdhjtfT76A1rfVkEpKF766+ZtMM
cfg2dpT7YyoL5ixjRTM/4jGveUtJ3WFZ0Hj+inPwVSJWOH27Rf+MLNw5fvxI
Z34qPpzA89EgQhZCFEN5lpiy8GvZi55/42Vh39hXFv/PWfhc+fifJzRZcAyS
px7tz8aBvUnbqI9l4feayft3d3Jx4bqsJryUBXK2cjH1bQEm3gltYPggC40a
TYZ1ZYW4WXBuT+s3WRBWlzRkvfYIj6uX2hoxycG/8q5zs2zFmMFZ77qxshyc
JOoqbFktxfe+JLOwaMuBGMEo4HZxGRby33jQaSgH9/5YJepolGO16LZME0s5
oE5G3EyYKsf2HebdppflYFznzFSBUCV+Z1lmufWmHLSZxT8/7FKJL7zme9Eb
LgfGSkd7GB9V4pCViS9m6XLwKo/6+LhOFeYJ1r+0rUAOdB/5PN24XIWTeVI3
+yvkQPr+oHhMXRUuU3LhP9hJl3dFF4ZpP8bk6vYUrmE58Jz9mTF9/jHu2K0g
PzQlB31NeRrieY/xi2MLpENf5GBm1qhCl7can/50sJVnRQ4+fIj9xW1UjX/4
lJuNbMrBzmCSe4t3NWaN8HO0EpAHo/NGg7l91Thqx9RHPgl5oOm+y3z2qxqL
55G9RhXkQd94X9CEaA3O10pbjSbIwx33I2/yUA3Wwpu3rMnysNLudnqvaw1u
OuDKKWgsD/bs5ovlt2qw6VRH3PhBefgSzx/3mVaDx04pSsXZyUO84PaohSc1
2Onn3YIjLvJQXdfvUD9Rg+cCvmgKucsDz77yTKtvNdiX41DjhK88tDXtMHy8
pRZvxlcYJwTKw40mAYO3QrU4XFZwyO6OPFRVas5MKdbi7eWX7ESi5SGiyzEj
RbcW0wyfz0ylyINkRrakyp5arNJr4JaUKw/7VlZ0bh+sxdVH0n8dLZOHMzwr
30qO1OKQlq2L3+rl4W4XRz6XQy22UfX7EdwhD3FyiYEvTtRiufiZbyLD8uCt
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
8OaRWG6Z4NSXTwWuuiGI96h72zJ3uvl/YKM6kA==
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->
    NCache[{{(-10) Pi, 10 Pi}, {-0.21722533813706144`, 
      0.2498411106008519}}, {{-31.41592653589793, 
     31.41592653589793}, {-0.21722533813706144`, 0.2498411106008519}}],
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171711386758986`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", "x", "]"}], "x"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input"],

Cell[BoxData[
 FormBox["\[Pi]", TraditionalForm]], "Output",
 CellChangeTimes->{3.6171711418220787`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"SinIntegral", "[", "x", "]"}], ",", " ", 
    RowBox[{"x", "\[Rule]", " ", "Infinity"}]}], "]"}], "  ", "-", " ", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"SinIntegral", "[", "x", "]"}], ",", " ", 
    RowBox[{"x", "\[Rule]", " ", 
     RowBox[{"-", "Infinity"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.617171221329626*^9, 3.6171712793599453`*^9}}],

Cell[BoxData[
 FormBox["\[Pi]", TraditionalForm]], "Output",
 CellChangeTimes->{{3.6171712522083926`*^9, 3.617171279494953*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Pi]", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.6171713789646425`*^9, 3.61717137962068*^9}, {
  3.6171724986046824`*^9, 3.6171725047010307`*^9}}],

Cell[BoxData[
 FormBox["3.\
14159265358979323846264338327950288419716939937510582097494459230781640628621`\
50.", TraditionalForm]], "Output",
 CellChangeTimes->{{3.617171375786461*^9, 3.617171380230715*^9}, {
  3.617172490964245*^9, 3.617172505271064*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"16", 
     RowBox[{"ArcTan", "[", 
      FractionBox["1", "5"], "]"}]}], "-", 
    RowBox[{"4", 
     RowBox[{"ArcTan", "[", 
      FractionBox["1", "239"], "]"}]}]}], ",", "50"}], "]"}]], "Input"],

Cell[BoxData[
 FormBox["3.\
14159265358979323846264338327950288419716939937510582097494459230781640629062`\
50.", TraditionalForm]], "Output",
 CellChangeTimes->{{3.617172491817294*^9, 3.617172507344182*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  SuperscriptBox["2", 
   RowBox[{"-", "n"}]]}]], "Input"],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{3.6171725134495316`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "'"}], "[", "x", "]"}], "\[Equal]", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox["15", "2"], "+", 
       SuperscriptBox["x", "2"]}]], "+", "20", "-", "x"}]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6171725953282146`*^9, 3.617172663005086*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "(", "x", ")"}], "\[Rule]", 
     RowBox[{
      SubscriptBox[
       TagBox["c",
        C], "1"], "-", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", "225"}]], " ", "x"}], "+", 
      RowBox[{"20", " ", "x"}], "+", 
      RowBox[{
       FractionBox["225", "2"], " ", 
       RowBox[{
        SuperscriptBox["sinh", 
         RowBox[{"-", "1"}]], "(", 
        FractionBox["x", "15"], ")"}]}]}]}], "}"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6171726643331614`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", "1"}], "\[Equal]", "2"}]], "Input"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output",
 CellChangeTimes->{3.617172669662466*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"n", "+", "1"}], "]"}], "\[Equal]", 
      SuperscriptBox[
       RowBox[{"a", "[", "n", "]"}], "2"]}], ",", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], "\[Equal]", "3"}]}], "}"}], ",", 
   RowBox[{"a", "[", "n", "]"}], ",", "n"}], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
   RowBox[{
   ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(TraditionalForm\\`Solve\\)\[NoBreak], so some solutions may \
not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}], TraditionalForm]], "Message", \
"MSG",
 CellChangeTimes->{3.6171726852473574`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "(", "n", ")"}], "\[Rule]", 
      SuperscriptBox["3", 
       SuperscriptBox["2", 
        RowBox[{"n", "-", "1"}]]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "(", "n", ")"}], "\[Rule]", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["2", 
         RowBox[{"n", "-", "1"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Pi]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"log", "(", "3", ")"}]}]}], ")"}]}]]}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.617172685266359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"97856786897876877778465997698674456656846646846564646461661646456561\
6316363651", "*", "35464646464646646786666668"}]], "Input"],

Cell[BoxData[
 FormBox["34704563514994695194144713022753208465393032990885017314326935257056\
819346385929917564808424773208484868", TraditionalForm]], "Output",
 CellChangeTimes->{3.6171726893355913`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"a", "[", "n", "]"}], "-", 
        RowBox[{"a", "[", 
         RowBox[{"n", "-", "1"}], "]"}]}], 
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"n", "-", "1"}], "]"}], "-", 
        RowBox[{"a", "[", 
         RowBox[{"n", "-", "2"}], "]"}]}]], "\[Equal]", "b"}], ",", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], "\[Equal]", "c"}], ",", 
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], "\[Equal]", "d"}]}], "}"}], ",", 
   RowBox[{"a", "[", "n", "]"}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.6171910855154657`*^9, 3.617191086401517*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "(", "n", ")"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"c", " ", 
         SuperscriptBox["b", "n"]}]}], "+", 
       RowBox[{"d", " ", 
        SuperscriptBox["b", "n"]}], "+", 
       RowBox[{
        SuperscriptBox["b", "2"], " ", "c"}], "-", 
       RowBox[{"b", " ", "d"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "1"}], ")"}], " ", "b"}]]}], "}"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6171910882076197`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "k"], 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["b", "2"], " ", "c"}], "-", 
    RowBox[{"b", " ", "d"}], "+", 
    RowBox[{
     SuperscriptBox["b", "n"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "c"}], "+", "d"}], ")"}]}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "b"}], ")"}], " ", "b"}]]}]], "Input"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    RowBox[{"d", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["b", "k"], "-", 
       RowBox[{"b", " ", "k"}], "+", "k", "-", "1"}], ")"}]}], "-", 
    RowBox[{"c", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["b", "k"], "-", 
       RowBox[{
        SuperscriptBox["b", "2"], " ", "k"}], "+", 
       RowBox[{"b", " ", "k"}], "-", "1"}], ")"}]}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"b", "-", "1"}], ")"}], "2"]], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171910900407248`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox["c", "a"], "*", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Z", "*", "r"}], "a"]}]]}], ")"}], "2"], "*", 
   SuperscriptBox["r", "2"], 
   RowBox[{"\[DifferentialD]", "r", " "}]}]}]], "Input",
 CellChangeTimes->{{3.6171914230337706`*^9, 3.6171914325703163`*^9}},
 FontSize->18],

Cell[BoxData[
 FormBox[
  RowBox[{"ConditionalExpression", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"a", " ", 
      SuperscriptBox["c", "2"]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["Z", "3"]}]], ",", 
    RowBox[{
     RowBox[{"Re", "(", 
      FractionBox["Z", "a"], ")"}], ">", "0"}]}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.617191414964309*^9, 3.617191433877391*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["c", "2"], 
  FractionBox[
   FractionBox[
    SuperscriptBox["a", "3"], 
    RowBox[{"4", " ", 
     SuperscriptBox["Z", "3"]}]], 
   SuperscriptBox["a", "2"]]}]], "Input",
 FontSize->18],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"a", " ", 
    SuperscriptBox["c", "2"]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["Z", "3"]}]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.6171914150653152`*^9, 3.6171914344744253`*^9}},
 FontSize->18]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"a", " ", 
      SuperscriptBox["c", "2"]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["Z", "3"]}]], "\[Equal]", "1"}], ",", "c"}], 
  "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["Z", 
          RowBox[{"3", "/", "2"}]]}], 
        SqrtBox["a"]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", "\[Rule]", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["Z", 
         RowBox[{"3", "/", "2"}]]}], 
       SqrtBox["a"]]}], "}"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171914361035185`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c", "+", 
        RowBox[{"k", "*", 
         FractionBox["r", "a"]}]}], ")"}], "*", 
      FractionBox["1", "a"], "*", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Z", "*", "r"}], "a"]}]]}], ")"}], "2"], "*", 
   SuperscriptBox["r", "2"], 
   RowBox[{"\[DifferentialD]", "r"}]}]}]], "Input",
 FontSize->18],

Cell[BoxData[
 FormBox[
  RowBox[{"ConditionalExpression", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"c", " ", "Z", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c", " ", "Z"}], "+", "6"}], ")"}]}], "+", "12"}], ")"}]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["Z", "5"]}]], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Re", "(", "a", ")"}], "\[NotEqual]", "0"}], "\[Or]", 
       RowBox[{"a", "\[NotElement]", 
        TagBox["\[DoubleStruckCapitalR]",
         Function[{}, Reals]]}]}], ")"}], "\[And]", 
     RowBox[{
      RowBox[{"Re", "(", 
       FractionBox["Z", "a"], ")"}], ">", "0"}]}]}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6171914402247543`*^9},
 FontSize->18]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"l", "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "l", "-", "1"}], ")"}], "!"}], 
        RowBox[{"2", "n", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "+", "l"}], ")"}], "!"}], ")"}], "3"]}]], "*", 
       SuperscriptBox["\[Rho]", "3"]}], ")"}], 
     FractionBox["1", "2"]]}], "\[IndentingNewLine]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"\[Rho]", "=", 
    FractionBox[
     RowBox[{"2", " ", "Z", " ", "r"}], 
     RowBox[{"n", " ", 
      SubscriptBox["a", "0"]}]]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"L", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "\[Rho]"], "*", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "\[Rho]"], "*", 
        SuperscriptBox["\[Rho]", 
         RowBox[{"n", "+", "l"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", 
         RowBox[{"n", "+", "l"}]}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Rho]", ",", 
      RowBox[{
       RowBox[{"2", "l"}], "+", "1"}]}], "}"}]}], "]"}]}]}], "Input",
 FontSize->18],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{{3.6171914411038046`*^9, 3.617191451639407*^9}}],

Cell[BoxData[
 FormBox["0", TraditionalForm]], "Output",
 CellChangeTimes->{{3.6171914411038046`*^9, 3.617191451641407*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox[
   SqrtBox[
    SuperscriptBox["\[Rho]", "3"]], 
   SqrtBox["2"]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.6171914411038046`*^9, 3.6171914516424074`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
      SuperscriptBox["\[ExponentialE]", "\[Rho]"]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"]}]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.6171914411038046`*^9, 3.617191451643407*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  FractionBox[
   SqrtBox[
    SuperscriptBox["\[Rho]", "3"]], 
   SqrtBox["2"]], TraditionalForm]], "Input",
 CellChangeTimes->{3.617191443772957*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
      SuperscriptBox["\[ExponentialE]", "\[Rho]"]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"]}]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.617191441112805*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"B", "*", "L", "*", 
  SuperscriptBox["\[Rho]", 
   RowBox[{"l", "+", "1"}]], "*", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox["\[Rho]", "2"]}]]}]], "Input"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Rho]"}], "/", "2"}]], " ", "\[Rho]", " ", 
    SqrtBox[
     SuperscriptBox["\[Rho]", "3"]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
         SuperscriptBox["\[ExponentialE]", "\[Rho]"]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"]}]}], ")"}]}]}], ")"}]}], 
   SqrtBox["2"]], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171914689763985`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "\[Rho]"}], "/", "2"}]], " ", "\[Rho]", " ", 
    SqrtBox[
     SuperscriptBox["\[Rho]", "3"]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "\[Rho]"}], "+", "3"}], ")"}]}], 
   SqrtBox["2"]], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171914700804615`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Rho]"], " ", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "\[Rho]"}], "/", "2"}]], " ", "\[Rho]", " ", 
        SqrtBox[
         SuperscriptBox["\[Rho]", "3"]], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"2", " ", "\[Rho]"}]}], ")"}]}], 
       SqrtBox["2"]], ")"}]}], "\[Equal]", "0"}], ",", "\[Rho]"}], 
  "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Rho]", "\[Rule]", 
      RowBox[{"-", "3"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Rho]", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["5", "6"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Rho]", "\[Rule]", "0"}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.617191471734556*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[Rho]"}], "/", "2"}]], " ", "\[Rho]", " ", 
     SqrtBox[
      RowBox[{"Abs", "[", 
       SuperscriptBox["\[Rho]", "3"], "]"}]], " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       RowBox[{"2", " ", "\[Rho]"}]}], ")"}]}], 
    SqrtBox["2"]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", 
     RowBox[{"-", "10"}], ",", "5"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
fZpL/A+SGSFO
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{{-10, 5}, {-0.17123663989610485`, 4031.7603416485917`}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171914748047323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sec", "[", 
   RowBox[{
    FractionBox["\[Pi]", "3"], "-", " ", 
    FractionBox["\[Pi]", "18"]}], "]"}], " ", 
  RowBox[{"Tan", "[", " ", 
   FractionBox["\[Pi]", "18"], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"tan", "(", 
    FractionBox["\[Pi]", "18"], ")"}], " ", 
   RowBox[{"csc", "(", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], "9"], ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171920928230805`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"tan", "(", 
    FractionBox["\[Pi]", "18"], ")"}], " ", 
   RowBox[{"csc", "(", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], "9"], ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171920944721746`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigExpand", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  FractionBox["1", 
   RowBox[{
    RowBox[{"4", " ", 
     RowBox[{
      SuperscriptBox["cos", "4"], "(", 
      FractionBox["\[Pi]", "18"], ")"}]}], "-", 
    RowBox[{"4", " ", 
     RowBox[{
      SuperscriptBox["sin", "2"], "(", 
      FractionBox["\[Pi]", "18"], ")"}], " ", 
     RowBox[{
      SuperscriptBox["cos", "2"], "(", 
      FractionBox["\[Pi]", "18"], ")"}]}]}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171920961102686`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigFactor", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"2", "/", "9"}]]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RadicalBox[
        RowBox[{"-", "1"}], "18"], "-", "\[ImaginaryI]"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RadicalBox[
        RowBox[{"-", "1"}], "18"], "+", "\[ImaginaryI]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RadicalBox[
       RowBox[{"-", "1"}], "9"], "-", "\[ImaginaryI]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RadicalBox[
       RowBox[{"-", "1"}], "9"], "+", "\[ImaginaryI]"}], ")"}]}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.617192097397342*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"2", "/", "9"}]]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RadicalBox[
        RowBox[{"-", "1"}], "18"], "-", "\[ImaginaryI]"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RadicalBox[
        RowBox[{"-", "1"}], "18"], "+", "\[ImaginaryI]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RadicalBox[
       RowBox[{"-", "1"}], "9"], "-", "\[ImaginaryI]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RadicalBox[
       RowBox[{"-", "1"}], "9"], "+", "\[ImaginaryI]"}], ")"}]}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6171920987334185`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", "\[GreaterEqual]", "4"}]], "Input"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output",
 CellChangeTimes->{3.617192100793536*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"x", "=", "1"}], "\n", 
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"Sec", "[", "x", "]"}], "+", 
    RowBox[{"Tan", "[", "x", "]"}], "+", "1"}], 
   RowBox[{
    RowBox[{"Cot", "[", "x", "]"}], "-", 
    RowBox[{"Csc", "[", "x", "]"}], "+", "1"}]], "\[Equal]", 
  RowBox[{"1", "+", 
   FractionBox["2", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"Sin", "[", "x", "]"}], "-", "1"}]]}]}]}], "Input",
 CellChangeTimes->{3.6171923693508973`*^9}],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{3.617192196190993*^9, 3.6171923711710014`*^9}],

Cell[BoxData[
 FormBox["False", TraditionalForm]], "Output",
 CellChangeTimes->{3.617192196190993*^9, 3.617192371175001*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sec", "[", "x", "]"}], "-", "1"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Cot", "[", "x", "]"}], "2"]}], 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "+", "1"}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "-", "1"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Sec", "[", "x", "]"}], "2"]}], 
    RowBox[{
     RowBox[{"Sec", "[", "x", "]"}], "+", "1"}]]}], "]"}]], "Input",
 CellChangeTimes->{3.6171923758292675`*^9}],

Cell[BoxData[
 FormBox["0", TraditionalForm]], "Output",
 CellChangeTimes->{3.6171922015883017`*^9, 3.6171923769303303`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"1", "+", 
   FractionBox["2", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"Sin", "[", "x", "]"}], "-", "1"}]]}], "]"}]], "Input",
 CellChangeTimes->{3.617192381739606*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"1", "+", 
   FractionBox["2", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"sin", "(", "1", ")"}], "+", 
     RowBox[{"cos", "(", "1", ")"}]}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171922046004744`*^9, 3.617192382815667*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{
    RowBox[{"Sec", "[", "x", "]"}], "+", 
    RowBox[{"Tan", "[", "x", "]"}], "+", "1"}], 
   RowBox[{
    RowBox[{"Cot", "[", "x", "]"}], "-", 
    RowBox[{"Csc", "[", "x", "]"}], "+", "1"}]], "]"}]], "Input",
 CellChangeTimes->{3.6171923867008896`*^9}],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"1", "+", 
    RowBox[{"tan", "(", "1", ")"}], "+", 
    RowBox[{"sec", "(", "1", ")"}]}], 
   RowBox[{"1", "+", 
    RowBox[{"cot", "(", "1", ")"}], "-", 
    RowBox[{"csc", "(", "1", ")"}]}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171922064265785`*^9, 3.617192387830954*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"t", "=", 
   RowBox[{"{", 
    RowBox[{
    "1.1", ",", "1.425", ",", "1.5", ",", "1.575", ",", "1.65", ",", "1.475", 
     ",", "1.8", ",", "1.875", ",", "1.95", ",", "2.025", ",", "1.85", ",", 
     "2.175", ",", "0.83", ",", "0.9416", ",", "1.05", ",", "1.1583", ",", 
     "1.26", ",", "1.375"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.6171923932112617`*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"1.1`"},
       {"1.425`"},
       {"1.5`"},
       {"1.575`"},
       {"1.65`"},
       {"1.475`"},
       {"1.8`"},
       {"1.875`"},
       {"1.95`"},
       {"2.025`"},
       {"1.85`"},
       {"2.175`"},
       {"0.83`"},
       {"0.9416`"},
       {"1.05`"},
       {"1.1583`"},
       {"1.26`"},
       {"1.375`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.617192210162792*^9, 3.6171923944783344`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "t", "]"}]], "Input",
 CellChangeTimes->{3.6171924029298177`*^9}],

Cell[BoxData[
 FormBox[
  GraphicsBox[
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{1., 1.1}, {2., 1.425}, {3., 1.5}, {4., 1.575}, {5., 1.65}, {6.,
      1.475}, {7., 1.8}, {8., 1.875}, {9., 1.95}, {10., 2.025}, {11., 1.85}, {
     12., 2.175}, {13., 0.83}, {14., 0.9416}, {15., 1.05}, {16., 1.1583}, {
     17., 1.26}, {18., 1.375}}]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, Automatic},
   PlotRange->Automatic,
   PlotRangeClipping->True], TraditionalForm]], "Output",
 CellChangeTimes->{3.617192403948876*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BarChart", "[", "t", "]"}], "\n", 
 RowBox[{"BarChart", "[", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox["t", "3"]}]], 
   SuperscriptBox["t", 
    RowBox[{"5", "/", "3"}]]], "]"}]}], "Input",
 CellChangeTimes->{3.6171922310569873`*^9, 3.617192410717263*^9}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{
    {Opacity[0], PointBox[{{0.4545454545454546, 0.}}]}, 
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.7]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5454545454545454, 0.}, {1.4545454545454546`, 1.1},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{24.30460780598016, 
            51.35068300475881}, {-8.579320689072318, 151.02187645728134`}}],
          StatusArea[#, 1.1]& ,
          TagBoxNote->"1.1"],
         StyleBox["1.1`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.1, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5454545454545454`, 0.}, {2.4545454545454546`, 
             1.425}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{52.40529039350645, 
            79.4513655922851}, {-55.29103799254676, 151.02187645728134`}}],
          StatusArea[#, 1.425]& ,
          TagBoxNote->"1.425"],
         StyleBox["1.425`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.425, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5454545454545454`, 0.}, {3.4545454545454546`, 
             1.5}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{80.50597298103273, 
            107.55204817981138`}, {-66.07066506257934, 151.02187645728134`}}],
          StatusArea[#, 1.5]& ,
          TagBoxNote->"1.5"],
         StyleBox["1.5`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.5, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5454545454545454`, 0.}, {4.454545454545454, 
             1.575}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{108.60665556855903`, 
            135.65273076733766`}, {-76.85029213261191, 151.02187645728134`}}],
          StatusArea[#, 1.575]& ,
          TagBoxNote->"1.575"],
         StyleBox["1.575`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.575, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.545454545454545, 0.}, {5.454545454545454, 1.65}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{136.7073381560853, 
            163.75341335486397`}, {-87.62991920264446, 151.02187645728134`}}],
          StatusArea[#, 1.65]& ,
          TagBoxNote->"1.65"],
         StyleBox["1.65`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.65, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.545454545454545, 0.}, {6.454545454545454, 1.475}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{164.8080207436116, 
            191.85409594239024`}, {-62.477456039235165`, 
            151.02187645728134`}}],
          StatusArea[#, 1.475]& ,
          TagBoxNote->"1.475"],
         StyleBox["1.475`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.475, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.545454545454545, 0.}, {7.454545454545454, 1.8}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{192.9087033311379, 
            219.95477852991655`}, {-109.18917334270964`, 
            151.02187645728134`}}],
          StatusArea[#, 1.8]& ,
          TagBoxNote->"1.8"],
         StyleBox["1.8`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.8, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.545454545454545, 0.}, {8.454545454545453, 1.875}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{221.00938591866418`, 
            248.0554611174428}, {-119.96880041274221`, 151.02187645728134`}}],
          StatusArea[#, 1.875]& ,
          TagBoxNote->"1.875"],
         StyleBox["1.875`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.875, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{8.545454545454545, 0.}, {9.454545454545453, 1.95}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.1100685061905, 
            276.15614370496905`}, {-130.74842748277473`, 
            151.02187645728134`}}],
          StatusArea[#, 1.95]& ,
          TagBoxNote->"1.95"],
         StyleBox["1.95`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.95, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{9.545454545454545, 0.}, {10.454545454545453`, 
             2.025}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{277.21075109371674`, 
            304.25682629249536`}, {-141.5280545528073, 151.02187645728134`}}],
          StatusArea[#, 2.025]& ,
          TagBoxNote->"2.025"],
         StyleBox["2.025`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.025, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{10.545454545454545`, 0.}, {11.454545454545453`, 
             1.85}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{305.31143368124305`, 
            332.35750888002167`}, {-116.37559138939798`, 
            151.02187645728134`}}],
          StatusArea[#, 1.85]& ,
          TagBoxNote->"1.85"],
         StyleBox["1.85`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.85, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{11.545454545454545`, 0.}, {12.454545454545453`, 
             2.175}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{333.4121162687693, 
            360.4581914675479}, {-163.08730869287245`, 151.02187645728134`}}],
          StatusArea[#, 2.175]& ,
          TagBoxNote->"2.175"],
         StyleBox["2.175`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.175, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{12.545454545454545`, 0.}, {13.454545454545453`, 
             0.83}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{361.5127988562956, 388.5588740550742}, {
            30.22733676304496, 151.02187645728134`}}],
          StatusArea[#, 0.83]& ,
          TagBoxNote->"0.83"],
         StyleBox["0.83`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.83, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{13.545454545454545`, 0.}, {14.454545454545453`, 
             0.9416}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{389.6134814438219, 416.65955664260053`}, {
            14.18725168283649, 151.02187645728134`}}],
          StatusArea[#, 0.9416]& ,
          TagBoxNote->"0.9416"],
         StyleBox["0.9416`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.9416, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{14.545454545454545`, 0.}, {15.454545454545453`, 
             1.05}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{417.71416403134816`, 
            444.7602392301268}, {-1.3929026423839161`, 151.02187645728134`}}],
          StatusArea[#, 1.05]& ,
          TagBoxNote->"1.05"],
         StyleBox["1.05`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.05, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{15.545454545454545`, 0.}, {16.454545454545453`, 
             1.1583}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{445.81484661887447`, 
            472.8609218176531}, {-16.958684131510978`, 151.02187645728134`}}],
          StatusArea[#, 1.1583]& ,
          TagBoxNote->"1.1583"],
         StyleBox["1.1583`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.1583, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{16.545454545454543`, 0.}, {17.454545454545453`, 
             1.26}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{473.9155292064007, 
            500.9616044051794}, {-31.57585843847511, 151.02187645728134`}}],
          StatusArea[#, 1.26]& ,
          TagBoxNote->"1.26"],
         StyleBox["1.26`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.26, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{17.545454545454543`, 0.}, {18.454545454545453`, 
             1.375}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{502.016211793927, 
            529.0622869927057}, {-48.10461994585839, 151.02187645728134`}}],
          StatusArea[#, 1.375]& ,
          TagBoxNote->"1.375"],
         StyleBox["1.375`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.375, {
           GrayLevel[0]}], 
         "Tooltip"]& ]}}, {}, {}}, {}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, \
{}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, GraphicsGroupBox[
     {GrayLevel[0], 
      StyleBox[
       LineBox[{{{0.5454545454545454, 0.}, 
          Offset[{0, -4}, {0.5454545454545454, 0.}]}, {{18.454545454545453`, 
          0.}, Offset[{0, -4}, {18.454545454545453`, 0.}]}}],
       Antialiasing->False]}]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesOrigin->{0.4545454545454546, 0},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   PlotRangePadding->Scaled[0.02],
   Ticks->{None, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{3.617192234766199*^9, 3.617192420376816*^9}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{
    {Opacity[0], PointBox[{{0.4545454545454546, 0.}}]}, 
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.7]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5454545454545454, 0.}, {1.4545454545454546`, 
             0.5912496291890776}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{24.30460780598016, 
            51.35068300475881}, {-29.15056692790202, 151.02187645728137`}}],
          StatusArea[#, 0.5912496291890776]& ,
          TagBoxNote->"0.5912496291890776"],
         StyleBox["0.5912496291890776`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.5912496291890776, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5454545454545454`, 0.}, {2.4545454545454546`, 
             0.34462915394081356`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{52.40529039350645, 79.4513655922851}, {
            45.37680813778546, 151.02187645728137`}}],
          StatusArea[#, 0.34462915394081356`]& ,
          TagBoxNote->"0.34462915394081356"],
         StyleBox["0.34462915394081356`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.34462915394081356`, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5454545454545454`, 0.}, {3.4545454545454546`, 
             0.30857968209703107`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{80.50597298103273, 107.55204817981138`}, {
            56.270763744338154`, 151.02187645728137`}}],
          StatusArea[#, 0.30857968209703107`]& ,
          TagBoxNote->"0.30857968209703107"],
         StyleBox["0.30857968209703107`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.30857968209703107`, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5454545454545454`, 0.}, {4.454545454545454, 
             0.27745622098360473`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{108.60665556855903`, 135.65273076733766`}, {
            65.67610552468975, 151.02187645728137`}}],
          StatusArea[#, 0.27745622098360473`]& ,
          TagBoxNote->"0.27745622098360473"],
         StyleBox["0.27745622098360473`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.27745622098360473`, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.545454545454545, 0.}, {5.454545454545454, 
             0.25041756865577247`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{136.7073381560853, 163.75341335486397`}, {
            73.84704016131523, 151.02187645728137`}}],
          StatusArea[#, 0.25041756865577247`]& ,
          TagBoxNote->"0.25041756865577247"],
         StyleBox["0.25041756865577247`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.25041756865577247`, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.545454545454545, 0.}, {6.454545454545454, 
             0.3200013760676178}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{164.8080207436116, 191.85409594239024`}, {
            52.81918954079923, 151.02187645728137`}}],
          StatusArea[#, 0.3200013760676178]& ,
          TagBoxNote->"0.3200013760676178"],
         StyleBox["0.3200013760676178`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.3200013760676178, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.545454545454545, 0.}, {7.454545454545454, 
             0.20604834742253023`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{192.9087033311379, 219.95477852991655`}, {
            87.25517907960071, 151.02187645728137`}}],
          StatusArea[#, 0.20604834742253023`]& ,
          TagBoxNote->"0.20604834742253023"],
         StyleBox["0.20604834742253023`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.20604834742253023`, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.545454545454545, 0.}, {8.454545454545453, 
             0.18774303259547157`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{221.00938591866418`, 248.0554611174428}, {
            92.78694631197811, 151.02187645728137`}}],
          StatusArea[#, 0.18774303259547157`]& ,
          TagBoxNote->"0.18774303259547157"],
         StyleBox["0.18774303259547157`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.18774303259547157`, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{8.545454545454545, 0.}, {9.454545454545453, 
             0.17152110575989082`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.1100685061905, 276.15614370496905`}, {
            97.68912495041612, 151.02187645728137`}}],
          StatusArea[#, 0.17152110575989082`]& ,
          TagBoxNote->"0.17152110575989082"],
         StyleBox["0.17152110575989082`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.17152110575989082`, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{9.545454545454545, 0.}, {10.454545454545453`, 
             0.15708794033416507`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{277.21075109371674`, 304.25682629249536`}, {
            102.05074955593739`, 151.02187645728137`}}],
          StatusArea[#, 0.15708794033416507`]& ,
          TagBoxNote->"0.15708794033416507"],
         StyleBox["0.15708794033416507`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.15708794033416507`, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{10.545454545454545`, 0.}, {11.454545454545453`, 
             0.1935971035699897}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{305.31143368124305`, 332.35750888002167`}, {
            91.01787769454126, 151.02187645728137`}}],
          StatusArea[#, 0.1935971035699897]& ,
          TagBoxNote->"0.1935971035699897"],
         StyleBox["0.1935971035699897`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.1935971035699897, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{11.545454545454545`, 0.}, {12.454545454545453`, 
             0.13264912771821943`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{333.4121162687693, 360.4581914675479}, {
            109.43602667923841`, 151.02187645728137`}}],
          StatusArea[#, 0.13264912771821943`]& ,
          TagBoxNote->"0.13264912771821943"],
         StyleBox["0.13264912771821943`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.13264912771821943`, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{12.545454545454545`, 0.}, {13.454545454545453`, 
             1.0344631849887749`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{361.5127988562956, 
            388.5588740550742}, {-163.08730869287254`, 151.02187645728137`}}],
          StatusArea[#, 1.0344631849887749`]& ,
          TagBoxNote->"1.0344631849887749"],
         StyleBox["1.0344631849887749`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.0344631849887749`, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{13.545454545454545`, 0.}, {14.454545454545453`, 
             0.8076912081746598}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{389.6134814438219, 
            416.65955664260053`}, {-94.55804260740422, 151.02187645728137`}}],
          StatusArea[#, 0.8076912081746598]& ,
          TagBoxNote->"0.8076912081746598"],
         StyleBox["0.8076912081746598`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.8076912081746598, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{14.545454545454545`, 0.}, {15.454545454545453`, 
             0.6496529769441439}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{417.71416403134816`, 
            444.7602392301268}, {-46.79974305106026, 151.02187645728137`}}],
          StatusArea[#, 0.6496529769441439]& ,
          TagBoxNote->"0.6496529769441439"],
         StyleBox["0.6496529769441439`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.6496529769441439, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{15.545454545454545`, 0.}, {16.454545454545453`, 
             0.532047581395293}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{445.81484661887447`, 
            472.8609218176531}, {-11.26002796862636, 151.02187645728137`}}],
          StatusArea[#, 0.532047581395293]& ,
          TagBoxNote->"0.532047581395293"],
         StyleBox["0.532047581395293`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.532047581395293, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{16.545454545454543`, 0.}, {17.454545454545453`, 
             0.44700468581958713`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{473.9155292064007, 500.9616044051794}, {
            14.439475565548804`, 151.02187645728137`}}],
          StatusArea[#, 0.44700468581958713`]& ,
          TagBoxNote->"0.44700468581958713"],
         StyleBox["0.44700468581958713`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.44700468581958713`, {
           GrayLevel[0]}], "Tooltip"]& ]}, 
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{17.545454545454543`, 0.}, {18.454545454545453`, 
             0.37191514637732875`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{502.016211793927, 529.0622869927057}, {
            37.13112865675869, 151.02187645728137`}}],
          StatusArea[#, 0.37191514637732875`]& ,
          TagBoxNote->"0.37191514637732875"],
         StyleBox["0.37191514637732875`", {
           GrayLevel[0]}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.37191514637732875`, {
           GrayLevel[0]}], 
         "Tooltip"]& ]}}, {}, {}}, {}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, \
{}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, GraphicsGroupBox[
     {GrayLevel[0], 
      StyleBox[
       LineBox[{{{0.5454545454545454, 0.}, 
          Offset[{0, -4}, {0.5454545454545454, 0.}]}, {{18.454545454545453`, 
          0.}, Offset[{0, -4}, {18.454545454545453`, 0.}]}}],
       Antialiasing->False]}]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesOrigin->{0.4545454545454546, 0},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   PlotRangePadding->Scaled[0.02],
   Ticks->{None, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{3.617192234766199*^9, 3.6171924205138235`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"m", " ", 
     SuperscriptBox["c", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[Alpha]", "2"], 
         RowBox[{
          RowBox[{"-", "k"}], "+", "n", "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k", "2"], "-", 
            SuperscriptBox["\[Alpha]", "2"]}]]}]], "+", "1"}], ")"}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]]}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"m", " ", 
       SuperscriptBox["c", "2"]}], 
      SqrtBox[
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"(", 
           RowBox[{"l", "+", "1"}], ")"}], " ", "h"}], 
         RowBox[{
          SuperscriptBox["m", "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["c", "2"]}]]}]]], "+", 
     FractionBox[
      SuperscriptBox["ze", "2"], 
      RowBox[{
       RowBox[{"4", " ", "\[Pi]"}], "\[Element]", "r"}]]}]}], ",", "r"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6171924260511403`*^9, 3.6171924323555007`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"Solve", "::", "inex"}], "MessageName"], 
   RowBox[{
   ":", " "}], "\<\"Solve was unable to solve the system with inexact \
coefficients or the system obtained by direct rationalization of inexact \
numbers present in the system. Since many of the methods used by Solve \
require exact input, providing Solve with an exact version of the system may \
help. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::inex\\\"]\\)\"\>"}], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.6171922856651106`*^9, {3.617192427139202*^9, 3.617192434102601*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"89875517873681764", " ", "m"}], 
      SqrtBox[
       RowBox[{
        FractionBox["0.00005325135399088152`", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["k", "2"], "-", "0.00005325135399088152`"}]], "-", 
          "k", "+", "n"}]], "+", "1"}]]], "\[LongEqual]", 
     RowBox[{
      FractionBox[
       RowBox[{"89875517873681764", " ", "m"}], 
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"1.1733703394146586`*^-51", " ", "l", " ", 
           RowBox[{"(", 
            RowBox[{"l", "+", "1"}], ")"}]}], 
          RowBox[{
           SuperscriptBox["m", "2"], " ", 
           SuperscriptBox["r", "2"]}]]}]]], "+", 
      FractionBox[
       SuperscriptBox["ze", "2"], 
       RowBox[{
        RowBox[{"4", " ", "\[Pi]"}], "\[Element]", "r"}]]}]}], ",", "r"}], 
   "]"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.6171922856661105`*^9, {3.6171924271572037`*^9, 3.6171924341206017`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Alpha]", "=", "FineStructureConstant"}]], "Input",
 CellChangeTimes->{3.6171924408679876`*^9}],

Cell[BoxData[
 FormBox["0.007297352533`", TraditionalForm]], "Output",
 CellChangeTimes->{3.6171922778016605`*^9, 3.617192443815156*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "=", "1.0545726691251018`*^-34"}]], "Input",
 CellChangeTimes->{3.6171924478353863`*^9}],

Cell[BoxData[
 FormBox["1.0545726691251018`*^-34", TraditionalForm]], "Output",
 CellChangeTimes->{3.617192320724116*^9, 3.6171924501645193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", "299792458"}]], "Input",
 CellChangeTimes->{3.617192454043741*^9}],

Cell[BoxData[
 FormBox["299792458", TraditionalForm]], "Output",
 CellChangeTimes->{3.6171923240293045`*^9, 3.617192455115803*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "=", "ElectronMass"}]], "Input",
 CellChangeTimes->{3.6171924589870243`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"9.10938188`*^-31", " ", "Kilogram"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.617192459876075*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Epsilon]", "=", 
  FractionBox["8.854187", 
   SuperscriptBox["10", "12"]]}]], "Input",
 CellChangeTimes->{3.6171924683105574`*^9}],

Cell[BoxData[
 FormBox["8.854186999999999`*^-12", TraditionalForm]], "Output",
 CellChangeTimes->{3.6171924745419135`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"z", "=", "2.2"}], "\n", 
 RowBox[{"n", "=", "4"}]}], "Input",
 CellChangeTimes->{3.617192471474738*^9}],

Cell[BoxData[
 FormBox["2.2`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.617192473338845*^9, 3.6171924762720127`*^9}}],

Cell[BoxData[
 FormBox["4", TraditionalForm]], "Output",
 CellChangeTimes->{{3.617192473338845*^9, 3.617192476282013*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k", "=", "1"}]], "Input",
 CellChangeTimes->{3.6171924812592983`*^9}],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{3.6171924826293764`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l", "=", "1"}]], "Input",
 CellChangeTimes->{3.617192487171636*^9}],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{3.6171924881426916`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"m", " ", 
     SuperscriptBox["c", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[Alpha]", "2"], 
         RowBox[{
          RowBox[{"-", "k"}], "+", "n", "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k", "2"], "-", 
            SuperscriptBox["\[Alpha]", "2"]}]]}]], "+", "1"}], ")"}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]]}], "\[Equal]", 
    RowBox[{
     FractionBox[
      SuperscriptBox["mc", "2"], 
      SqrtBox[
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"(", 
           RowBox[{"l", "+", "1"}], ")"}], " ", "h"}], 
         RowBox[{
          SuperscriptBox["m", "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["c", "2"]}]]}]]], "+", 
     FractionBox[
      SuperscriptBox["ze", "2"], 
      RowBox[{
       RowBox[{"4", " ", "\[Pi]"}], "\[Element]", "r"}]]}]}], ",", "r"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.6171924934839973`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"8.187049643125109`*^-14", " ", "Kilogram"}], "\[LongEqual]", 
     RowBox[{
      FractionBox[
       SuperscriptBox["mc", "2"], 
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox["2.8280513052475834`*^9", 
          RowBox[{
           SuperscriptBox["Kilogram", "2"], " ", 
           SuperscriptBox["r", "2"]}]]}]]], "+", 
      FractionBox[
       SuperscriptBox["ze", "2"], 
       RowBox[{
        RowBox[{"4", " ", "\[Pi]"}], "\[Element]", "r"}]]}]}], ",", "r"}], 
   "]"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.617192494732068*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", 
   RowBox[{"{", "r", "}"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["c", "2"], " ", "m", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[Alpha]", "2"], 
         RowBox[{
          RowBox[{"-", "k"}], "+", "n", "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k", "2"], "-", 
            SuperscriptBox["\[Alpha]", "2"]}]]}]], "+", "1"}], ")"}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]]}], "+", 
    FractionBox[
     SuperscriptBox["mc", "2"], 
     SqrtBox[
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"(", 
          RowBox[{"l", "+", "1"}], ")"}], " ", "h"}], 
        RowBox[{
         SuperscriptBox["m", "2"], " ", 
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["c", "2"]}]]}]]], "-", 
    FractionBox[
     SuperscriptBox["ze", "2"], 
     RowBox[{
      RowBox[{"4", " ", "\[Pi]"}], "\[Element]", "r"}]]}], ")"}]}]], "Input",
 CellChangeTimes->{3.6171925005394006`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2.8280513052475834`*^9", " ", 
      SuperscriptBox["mc", "2"]}], 
     RowBox[{
      SuperscriptBox["Kilogram", "2"], " ", 
      SuperscriptBox["r", "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["2.8280513052475834`*^9", 
          RowBox[{
           SuperscriptBox["Kilogram", "2"], " ", 
           SuperscriptBox["r", "2"]}]]}], ")"}], 
       RowBox[{"3", "/", "2"}]]}]]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["ze", "2"], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "\[Pi]"}], "\[Element]", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "\[Pi]"}], "\[Element]", "r"}], ")"}], "2"]], "+", 
   "0.`"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171925016214623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["ze", "2"], " ", 
    RowBox[{
     SuperscriptBox["Element", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{
      RowBox[{"4", " ", "\[Pi]"}], ",", "r"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", "\[Pi]"}], "\[Element]", "r"}], ")"}], "2"]], "-", 
  FractionBox[
   RowBox[{"2.828046449740806`*^9", " ", "m", " ", 
    SuperscriptBox["c", "2"]}], 
   RowBox[{
    SuperscriptBox["Kilogram", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["2.828046449740806`*^9", 
        RowBox[{
         SuperscriptBox["Kilogram", "2"], " ", 
         SuperscriptBox["r", "2"]}]]}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox["r", "3"]}]]}]], "Input",
 CellChangeTimes->{3.6171925073907924`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["ze", "2"], " ", 
     RowBox[{
      SuperscriptBox["Element", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "(", 
      RowBox[{
       RowBox[{"4", " ", "\[Pi]"}], ",", "r"}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "\[Pi]"}], "\[Element]", "r"}], ")"}], "2"]], "-", 
   FractionBox["0.0002315351079605372`", 
    RowBox[{"Kilogram", " ", 
     SuperscriptBox["r", "3"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["2.828046449740806`*^9", 
         RowBox[{
          SuperscriptBox["Kilogram", "2"], " ", 
          SuperscriptBox["r", "2"]}]]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171925084748545`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["ze", "2"], " ", 
    RowBox[{
     SuperscriptBox["Element", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{
      RowBox[{"4", " ", "\[Pi]"}], ",", "r"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", "\[Pi]"}], "\[Element]", "r"}], ")"}], "2"]], "-", 
  FractionBox["0.00023153530672315005`", 
   RowBox[{"Kilogram", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["2.828046449740806`*^9", 
        SuperscriptBox["r", "2"]]}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox["r", "3"]}]]}]], "Input",
 CellChangeTimes->{3.617192512207068*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["ze", "2"], " ", 
     RowBox[{
      SuperscriptBox["Element", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "(", 
      RowBox[{
       RowBox[{"4", " ", "\[Pi]"}], ",", "r"}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "\[Pi]"}], "\[Element]", "r"}], ")"}], "2"]], "-", 
   FractionBox["0.00023153530672315005`", 
    RowBox[{"Kilogram", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["2.828046449740806`*^9", 
         SuperscriptBox["r", "2"]]}], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     SuperscriptBox["r", "3"]}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.617192513220126*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["ze", "2"], " ", 
       RowBox[{
        SuperscriptBox["Element", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{
         RowBox[{"4", " ", "\[Pi]"}], ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "\[Pi]"}], "\[Element]", "r"}], ")"}], "2"]], "-", 
     FractionBox["0.00023153530672315005`", 
      RowBox[{"Kilogram", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox["2.828046449740806`*^9", 
           SuperscriptBox["r", "2"]]}], ")"}], 
        RowBox[{"3", "/", "2"}]], " ", 
       SuperscriptBox["r", "3"]}]]}], "\[Equal]", "0"}], ",", "r"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.6171925174303665`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["ze", "2"], " ", 
        RowBox[{
         SuperscriptBox["Element", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "(", 
         RowBox[{
          RowBox[{"4", " ", "\[Pi]"}], ",", "r"}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "\[Pi]"}], "\[Element]", "r"}], ")"}], "2"]], "-", 
      FractionBox["0.00023153530672315005`", 
       RowBox[{"Kilogram", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["2.828046449740806`*^9", 
            SuperscriptBox["r", "2"]]}], ")"}], 
         RowBox[{"3", "/", "2"}]], " ", 
        SuperscriptBox["r", "3"]}]]}], "\[LongEqual]", "0"}], ",", "r"}], 
   "]"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.617192518670438*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", "\[ImaginaryI]\[Pi]"}]]}], "==", "0"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]\[Pi]"}]], "+", "1"}], "\[LongEqual]", 
   "0"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171925327372427`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox["c", "a"], "*", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Z", "*", "r"}], "a"]}]]}], ")"}], "2"], "*", 
   SuperscriptBox["r", "2"], 
   RowBox[{"\[DifferentialD]", "r"}]}]}]], "Input",
 FontSize->18],

Cell[BoxData[
 FormBox[
  RowBox[{"ConditionalExpression", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"22468879468420441", " ", "a"}], 
     SuperscriptBox["Z", "3"]], ",", 
    RowBox[{
     RowBox[{"Re", "(", 
      FractionBox["Z", "a"], ")"}], ">", "0"}]}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6171926124518013`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "c", "]"}], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{
   SuperscriptBox["c", "2"], " ", 
   SuperscriptBox["a", "3"]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4", " ", 
     SuperscriptBox["Z", "3"]}], ")"}], " ", 
   SuperscriptBox["a", "2"]}]]}], "Input",
 CellChangeTimes->{{3.617192618308137*^9, 3.61719263358401*^9}},
 FontSize->18],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"a", " ", 
    SuperscriptBox["c", "2"]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["Z", "3"]}]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.6171926224513736`*^9, 3.6171926345110636`*^9}},
 FontSize->18]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"a", " ", 
      SuperscriptBox["c", "2"]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["Z", "3"]}]], "\[Equal]", "1"}], ",", "c"}], 
  "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["Z", 
          RowBox[{"3", "/", "2"}]]}], 
        SqrtBox["a"]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", "\[Rule]", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["Z", 
         RowBox[{"3", "/", "2"}]]}], 
       SqrtBox["a"]]}], "}"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.617192637651243*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c", "+", 
        RowBox[{"k", "*", 
         FractionBox["r", "a"]}]}], ")"}], "*", 
      FractionBox["1", "a"], "*", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Z", "*", "r"}], "a"]}]]}], ")"}], "2"], "*", 
   SuperscriptBox["r", "2"], 
   RowBox[{"\[DifferentialD]", "r"}]}]}]], "Input",
 FontSize->18],

Cell[BoxData[
 FormBox[
  RowBox[{"ConditionalExpression", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"c", " ", "Z", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c", " ", "Z"}], "+", "3"}], ")"}]}], "+", "3"}], ")"}]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["Z", "5"]}]], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Re", "(", "a", ")"}], "\[NotEqual]", "0"}], "\[Or]", 
       RowBox[{"a", "\[NotElement]", 
        TagBox["\[DoubleStruckCapitalR]",
         Function[{}, Reals]]}]}], ")"}], "\[And]", 
     RowBox[{
      RowBox[{"Re", "(", 
       FractionBox["Z", "a"], ")"}], ">", "0"}]}]}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6171926421495004`*^9},
 FontSize->18]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"l", "=", "1"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "l", "-", "1"}], ")"}], "!"}], 
        RowBox[{"2", "n", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "+", "l"}], ")"}], "!"}], ")"}], "3"]}]], "*", 
       SuperscriptBox["\[Rho]", "3"]}], ")"}], 
     FractionBox["1", "2"]]}], "\[IndentingNewLine]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"\[Rho]", "=", 
    FractionBox[
     RowBox[{"2", " ", "Z", " ", "r"}], 
     RowBox[{"n", " ", 
      SubscriptBox["a", "0"]}]]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"L", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "\[Rho]"], "*", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "\[Rho]"], "*", 
        SuperscriptBox["\[Rho]", 
         RowBox[{"n", "+", "l"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", 
         RowBox[{"n", "+", "l"}]}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Rho]", ",", 
      RowBox[{
       RowBox[{"2", "l"}], "+", "1"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]", "=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"2", "l"}], "+", "1"}], "2"], "*", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"l", "-", 
         RowBox[{"Abs", "[", "m", "]"}]}], ")"}], "!"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"l", "+", 
         RowBox[{"Abs", "[", "m", "]"}]}], ")"}], "!"}]]}], ")"}], 
   FractionBox["1", "2"]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"2", 
       RowBox[{"Abs", "[", "m", "]"}]}]], 
     RowBox[{
      SuperscriptBox["2", "l"], "*", 
      RowBox[{"l", "!"}]}]], "*", 
    RowBox[{"D", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "-", "1"}], ")"}], 
       "l"], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"l", "+", 
         RowBox[{"Abs", "[", "m", "]"}]}]}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q", "[", 
   RowBox[{"\[Rho]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ":=", 
  RowBox[{"B", "*", "L", "*", 
   SuperscriptBox["\[Rho]", 
    RowBox[{"l", "+", "1"}]], "*", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox["\[Rho]", "2"]}]], "*", "\[Beta]", "*", "P", "*", 
   FractionBox["1", 
    SuperscriptBox["\[Pi]", 
     FractionBox["1", "2"]]], "*", 
   RowBox[{"Cos", "[", 
    RowBox[{
     RowBox[{"Abs", "[", "m", "]"}], "*", "\[Phi]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"B", "*", "L", "*", 
  SuperscriptBox["\[Rho]", 
   RowBox[{"l", "+", "1"}]], "*", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox["\[Rho]", "2"]}]], "*", "\[Beta]", "*", "P", "*", 
  FractionBox["1", 
   SuperscriptBox["\[Pi]", 
    FractionBox["1", "2"]]], "*", 
  RowBox[{"Cos", "[", 
   RowBox[{
    RowBox[{"Abs", "[", "m", "]"}], "*", "\[Phi]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], "\[IndentingNewLine]"}]}], "Input",
 FontSize->18],

Cell[BoxData[
 FormBox["4", TraditionalForm]], "Output",
 CellChangeTimes->{3.61719265228108*^9}],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{3.61719265228308*^9}],

Cell[BoxData[
 FormBox["0", TraditionalForm]], "Output",
 CellChangeTimes->{3.61719265228408*^9}],

Cell[BoxData[
 FormBox[
  FractionBox[
   SqrtBox[
    SuperscriptBox["\[Rho]", "3"]], 
   RowBox[{"480", " ", 
    SqrtBox["30"]}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.61719265228508*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "5"]}], "+", 
      RowBox[{"25", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "4"]}], "+", 
      RowBox[{"200", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "3"]}], "+", 
      RowBox[{"600", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "2"]}], "+", 
      RowBox[{"600", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
      RowBox[{"120", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"]}]}], ")"}]}], "+", 
   RowBox[{"3", " ", 
    SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "5"]}], "+", 
      RowBox[{"30", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "4"]}], "+", 
      RowBox[{"300", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "3"]}], "+", 
      RowBox[{"1200", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "2"]}], "+", 
      RowBox[{"1800", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
      RowBox[{"720", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"]}]}], ")"}]}], "+", 
   RowBox[{"3", " ", 
    SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "5"]}], "+", 
      RowBox[{"35", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "4"]}], "+", 
      RowBox[{"420", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "3"]}], "+", 
      RowBox[{"2100", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "2"]}], "+", 
      RowBox[{"4200", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
      RowBox[{"2520", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "5"]}], "+", 
      RowBox[{"40", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "4"]}], "+", 
      RowBox[{"560", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "3"]}], "+", 
      RowBox[{"3360", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       SuperscriptBox["\[Rho]", "2"]}], "+", 
      RowBox[{"8400", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
      RowBox[{"6720", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"]}]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6171926523060813`*^9}],

Cell[BoxData[
 FormBox[
  SqrtBox[
   FractionBox["3", "2"]], TraditionalForm]], "Output",
 CellChangeTimes->{3.617192652307081*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"cos", "(", "\[Theta]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.617192652308081*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{"960", " ", 
     SqrtBox[
      RowBox[{"5", " ", "\[Pi]"}]]}]], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Rho]"}], "/", "2"}]], " ", 
    SuperscriptBox["\[Rho]", "2"], " ", 
    SqrtBox[
     SuperscriptBox["\[Rho]", "3"]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "5"]}], "+", 
         RowBox[{"25", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "4"]}], "+", 
         RowBox[{"200", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "3"]}], "+", 
         RowBox[{"600", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "2"]}], "+", 
         RowBox[{"600", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
         RowBox[{"120", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"]}]}], ")"}]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "5"]}], "+", 
         RowBox[{"30", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "4"]}], "+", 
         RowBox[{"300", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "3"]}], "+", 
         RowBox[{"1200", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "2"]}], "+", 
         RowBox[{"1800", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
         RowBox[{"720", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"]}]}], ")"}]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "5"]}], "+", 
         RowBox[{"35", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "4"]}], "+", 
         RowBox[{"420", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "3"]}], "+", 
         RowBox[{"2100", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "2"]}], "+", 
         RowBox[{"4200", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
         RowBox[{"2520", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "5"]}], "+", 
         RowBox[{"40", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "4"]}], "+", 
         RowBox[{"560", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "3"]}], "+", 
         RowBox[{"3360", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", 
          SuperscriptBox["\[Rho]", "2"]}], "+", 
         RowBox[{"8400", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"], " ", "\[Rho]"}], "+", 
         RowBox[{"6720", " ", 
          SuperscriptBox["\[ExponentialE]", "\[Rho]"]}]}], ")"}]}]}], ")"}], 
    " ", 
    RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.617192652339083*^9}],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "\[Rho]"}], "/", "2"}]], " ", 
    SuperscriptBox["\[Rho]", "2"], " ", 
    SqrtBox[
     SuperscriptBox["\[Rho]", "3"]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["\[Rho]", "5"]}], "+", 
      RowBox[{"65", " ", 
       SuperscriptBox["\[Rho]", "4"]}], "+", 
      RowBox[{"730", " ", 
       SuperscriptBox["\[Rho]", "3"]}], "+", 
      RowBox[{"3465", " ", 
       SuperscriptBox["\[Rho]", "2"]}], "+", 
      RowBox[{"6750", " ", "\[Rho]"}], "+", "4140"}], ")"}], " ", 
    RowBox[{"cos", "(", "\[Theta]", ")"}]}], 
   RowBox[{"240", " ", 
    SqrtBox[
     RowBox[{"5", " ", "\[Pi]"}]]}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.617192652372085*^9}]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"240", " ", 
    SqrtBox[
     RowBox[{"5", " ", "\[Pi]"}]]}]], 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"3", " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"], "+", 
          SuperscriptBox["z", "2"]}], ")"}], 
        FractionBox["1", "2"]], "/", "2"}]}]], " ", 
    SuperscriptBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"], "+", 
        SuperscriptBox["z", "2"]}], ")"}], 
      FractionBox["1", "2"]], "2"], " ", 
    SqrtBox[
     SuperscriptBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"], "+", 
         SuperscriptBox["z", "2"]}], ")"}], 
       FractionBox["1", "2"]], "3"]], " ", 
    RowBox[{"(", 
     RowBox[{"4140", "+", 
      RowBox[{"6750", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"], "+", 
          SuperscriptBox["z", "2"]}], ")"}], 
        FractionBox["1", "2"]]}], "+", 
      RowBox[{"3465", " ", 
       SuperscriptBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"], "+", 
           SuperscriptBox["z", "2"]}], ")"}], 
         FractionBox["1", "2"]], "2"]}], "+", 
      RowBox[{"730", " ", 
       SuperscriptBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"], "+", 
           SuperscriptBox["z", "2"]}], ")"}], 
         FractionBox["1", "2"]], "3"]}], "+", 
      RowBox[{"65", " ", 
       SuperscriptBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"], "+", 
           SuperscriptBox["z", "2"]}], ")"}], 
         FractionBox["1", "2"]], "4"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"], "+", 
           SuperscriptBox["z", "2"]}], ")"}], 
         FractionBox["1", "2"]], "5"]}]}], ")"}], " ", 
    FractionBox["z", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"], "+", 
        SuperscriptBox["z", "2"]}], ")"}], 
      FractionBox["1", "2"]]]}], ")"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"0.0023128714785184802`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"3", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["y", "2"], "+", "5.840000000000001`"}]]}], "2"]], " ", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["y", "2"], "+", "5.840000000000001`"}]], " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["y", "2"], "+", "5.840000000000001`"}], ")"}], 
     RowBox[{"3", "/", "2"}]]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["y", "2"], "+", "5.840000000000001`"}], ")"}], 
       RowBox[{"5", "/", "2"}]]}], "+", 
     RowBox[{"65", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["y", "2"], "+", "5.840000000000001`"}], ")"}], "2"]}],
      "+", 
     RowBox[{"730", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["y", "2"], "+", "5.840000000000001`"}], ")"}], 
       RowBox[{"3", "/", "2"}]]}], "+", 
     RowBox[{"3465", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["y", "2"], "+", "5.840000000000001`"}], ")"}]}], "+", 
     RowBox[{"6750", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["y", "2"], "+", "5.840000000000001`"}]]}], "+", 
     "4140"}], ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6171926595884976`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Which", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PrimeQ", "[", "x", "]"}], "==", "True"}], ",", "1", ",", 
   RowBox[{
    RowBox[{"PrimeQ", "[", "x", "]"}], "==", "False"}], ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.617193432097683*^9, 3.617193446176488*^9}}],

Cell[BoxData[
 FormBox["2", TraditionalForm]], "Output",
 CellChangeTimes->{3.6171934462994947`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Prime", "[", 
    RowBox[{"Round", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617193506551941*^9, 3.6171935093671026`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"Prime", "::", "intpp"}], "MessageName"], 
   RowBox[{
   ":", " "}], "\<\"Positive integer argument expected in \
\[NoBreak]\\!\\(TraditionalForm\\`\\*TemplateBox[List[\\\"0\\\"], \\\"Prime\\\
\", Rule[SyntaxForm, SubscriptBox]]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Prime\\\", ButtonNote -> \
\\\"Prime::intpp\\\"]\\)\"\>"}], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{{3.61719350128164*^9, 3.6171935100411406`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"Prime", "::", "intpp"}], "MessageName"], 
   RowBox[{
   ":", " "}], "\<\"Positive integer argument expected in \
\[NoBreak]\\!\\(TraditionalForm\\`\\*TemplateBox[List[\\\"0.`\\\"], \\\"Prime\
\\\", Rule[SyntaxForm, SubscriptBox]]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Prime\\\", ButtonNote -> \
\\\"Prime::intpp\\\"]\\)\"\>"}], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{{3.61719350128164*^9, 3.617193510049141*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"Prime", "::", "intpp"}], "MessageName"], 
   RowBox[{
   ":", " "}], "\<\"Positive integer argument expected in \
\[NoBreak]\\!\\(TraditionalForm\\`\\*TemplateBox[List[\\\"0\\\"], \\\"Prime\\\
\", Rule[SyntaxForm, SubscriptBox]]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Prime\\\", ButtonNote -> \
\\\"Prime::intpp\\\"]\\)\"\>"}], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{{3.61719350128164*^9, 3.6171935100521417`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"General", "::", "stop"}], "MessageName"], 
   RowBox[{
   ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(TraditionalForm\\`\\*StyleBox[\\(Prime :: intpp\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}], TraditionalForm]], "Message", \
"MSG",
 CellChangeTimes->{{3.61719350128164*^9, 3.6171935100811434`*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxF0H9Qy3EcBvDvWjFr1KJdhFv6vS10SMRZOMqS0DhL1iaT1FquTlZdjjH9
McZ1bcrZ5ZBf40rcSVJrmmqbo6S71ilWNHV+rGlNM5zd5/3cPffc698niJ+3
65AHhmGCv/23mQRHvh82uAH7H2bo0lBTuwdYWduD614EJgZJwt/HgvXK8MgW
/RDyed8uWk3GR2R+f+pzvH4EOf+FhJ8XbkGuE5F2BySOI9cUH7Us3/sN+ZRq
eufE2HdkrHuQ2SS2IocVCIpSaTZkr1Vlnx5YwWabYo/3s5/IzXVJ1CjaJLIi
F2dJVoDPXxHuV9SDJV39xvcGsIvvR5D0g8WOhPiIUXDsFnO64yvYdrFMrP8J
rh9YoLjqBIsiHz8UedrdJjDTpXIlLg68bTi79FI+WG8uTe3bOoWcbJbTFy92
IFva+Cdfqn8hLyX3LtrEdSITN9h4Jutv5K3jnMkl7L+/ut2nycRxGDjkR+e0
B6g2sMCrcNBo9EA2x9k7c1fikQ8eK35EqgJX5tU+NXWBO3K6W+85wVcYMZoO
zNPteUzRmFIzggdvuvdLg58JpuQcaKMSwU1fgrUcXzD/6Ki2ggJ+kF3QTggG
Tx9x6UqWgSuz/LsyE8DLDtONSTywq+nuWIYB/MqP4V24xgv56f1T1Qz8DORi
HC1FPwAmmsQJwoaZyMM3gypUJQTkioj5nk/Ys5DlVQIdj0pE5lSkG0mfwLdz
cJm9u7yR7ZtvTKmawZSpokTtO/AKddLlz9/Aa6vi1dGT4I3SmFaxE9zuXM5S
YSS3FzITC+hv2/BgvSWU+3kGOIVHHSURwdw4IllFAQv9J2Kjg8G3Sqv7TrDB
H4c3FmmkYA25sUM3Ab62PjrQwJuNrD5TSD4cNQdZyj7IwtvAq0w1t6UGH2Rl
ZLXawPJFLmuRKVlPwNsD2Tc6Q8jI8UJdGrkcLHoxr0X4HKxayA/R28A9iROr
7XYw4fhZVsg0+JpsB7vRCV53PYCb4gL3Ng5ljWB+bocxRa/vHCvxAPfRX13u
IYCZZ60tDB8wOW6dz0Ag+MNXSbosAnx6H8UxHg8OaautTE4Dc+wNGb4ysDxK
Q3vTDBZYPV930OYi8+t+UMsvgOVvSDKtDtxsDZtyucB/AEkLj3A=
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 2.},
   PlotRange->{{0, 5}, {2., 11.}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.6171935012846403`*^9, 3.617193510583172*^9}}]
}, Open  ]]
},
WindowSize->{1664, 915},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.5000001192092896`,
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 132, 4, 48, "Input"],
Cell[714, 28, 602, 18, 45, "Output"]
}, Open  ]],
Cell[1331, 49, 101, 1, 41, "Text"],
Cell[CellGroupData[{
Cell[1457, 54, 216, 7, 71, "Input"],
Cell[1676, 63, 1539, 44, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3252, 112, 366, 12, 43, "Input"],
Cell[3621, 126, 43073, 715, 346, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46731, 846, 348, 12, 64, "Input"],
Cell[47082, 860, 59810, 967, 445, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106929, 1832, 352, 12, 64, "Input"],
Cell[107284, 1846, 61160, 990, 455, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168481, 2841, 352, 12, 64, "Input"],
Cell[168836, 2855, 61160, 990, 455, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230033, 3850, 346, 10, 65, "Input"],
Cell[230382, 3862, 140, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230559, 3870, 146, 3, 71, "Input"],
Cell[230708, 3875, 97, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230842, 3882, 423, 13, 83, "Input"],
Cell[231268, 3897, 624, 13, 35, "Message"],
Cell[231895, 3912, 512, 16, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232444, 3933, 122, 3, 71, "Input"],
Cell[232569, 3938, 10406, 132, 1543, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243012, 4075, 92, 2, 43, "Input"],
Cell[243107, 4079, 183, 4, 42, "Output"]
}, Open  ]],
Cell[243305, 4086, 154, 3, 43, "Input"],
Cell[CellGroupData[{
Cell[243484, 4093, 469, 12, 43, "Input"],
Cell[243956, 4107, 452, 13, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244445, 4125, 486, 14, 46, "Input"],
Cell[244934, 4141, 539, 16, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245510, 4162, 228, 6, 69, "Input"],
Cell[245741, 4170, 175, 3, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245953, 4178, 509, 15, 75, "Input"],
Cell[246465, 4195, 838, 28, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247340, 4228, 2241, 67, 150, "Input"],
Cell[249584, 4297, 3091, 86, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252712, 4388, 2915, 82, 201, "Input"],
Cell[255630, 4472, 3098, 86, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258765, 4563, 2906, 82, 159, "Input"],
Cell[261674, 4647, 3091, 86, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264802, 4738, 3040, 84, 201, "Input"],
Cell[267845, 4824, 3216, 87, 106, "Output"]
}, Open  ]],
Cell[271076, 4914, 26, 0, 43, "Input"],
Cell[CellGroupData[{
Cell[271127, 4918, 109, 3, 48, "Input"],
Cell[271239, 4923, 3147, 89, 113, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274423, 5017, 160, 5, 69, "Input"],
Cell[274586, 5024, 134, 4, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274757, 5033, 267, 9, 69, "Input"],
Cell[275027, 5044, 32611, 542, 357, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307675, 5591, 231, 7, 69, "Input"],
Cell[307909, 5600, 104, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308050, 5607, 437, 11, 43, "Input"],
Cell[308490, 5620, 128, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308655, 5627, 202, 4, 43, "Input"],
Cell[308860, 5633, 257, 5, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309154, 5643, 267, 9, 70, "Input"],
Cell[309424, 5654, 208, 4, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309669, 5663, 159, 5, 78, "Input"],
Cell[309831, 5670, 100, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309968, 5677, 408, 12, 64, "Input"],
Cell[310379, 5691, 719, 25, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311135, 5721, 79, 2, 43, "Input"],
Cell[311217, 5725, 101, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311355, 5732, 389, 12, 48, "Input"],
Cell[311747, 5746, 586, 13, 35, "Message"],
Cell[312336, 5761, 740, 23, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313113, 5789, 153, 2, 43, "Input"],
Cell[313269, 5793, 205, 3, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313511, 5801, 718, 21, 73, "Input"],
Cell[314232, 5824, 594, 20, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314863, 5849, 463, 17, 81, "Input"],
Cell[315329, 5868, 589, 19, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315955, 5892, 496, 15, 86, "Input"],
Cell[316454, 5909, 410, 13, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316901, 5927, 229, 9, 104, "Input"],
Cell[317133, 5938, 262, 8, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317432, 5951, 246, 9, 76, "Input"],
Cell[317681, 5962, 548, 19, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318266, 5986, 543, 18, 89, "Input"],
Cell[318812, 6006, 835, 27, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319684, 6038, 1428, 46, 279, "Input"],
Cell[321115, 6086, 124, 2, 42, "Output"],
Cell[321242, 6090, 124, 2, 42, "Output"],
Cell[321369, 6094, 204, 6, 82, "Output"],
Cell[321576, 6102, 672, 19, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322285, 6126, 175, 6, 94, InheritFromParent],
Cell[322463, 6134, 646, 19, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323146, 6158, 207, 6, 51, "Input"],
Cell[323356, 6166, 940, 27, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324333, 6198, 61, 1, 43, "Input"],
Cell[324397, 6201, 410, 13, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324844, 6219, 565, 18, 100, "Input"],
Cell[325412, 6239, 414, 14, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325863, 6258, 522, 17, 93, "Input"],
Cell[326388, 6277, 15957, 268, 370, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342382, 6550, 225, 7, 66, "Input"],
Cell[342610, 6559, 266, 8, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342913, 6572, 61, 1, 43, "Input"],
Cell[342977, 6575, 266, 8, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343280, 6588, 63, 1, 43, "Input"],
Cell[343346, 6591, 478, 15, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343861, 6611, 63, 1, 43, "Input"],
Cell[343927, 6614, 792, 28, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344756, 6647, 63, 1, 43, "Input"],
Cell[344822, 6650, 794, 28, 88, "Output"]
}, Open  ]],
Cell[345631, 6681, 26, 0, 43, "Input"],
Cell[CellGroupData[{
Cell[345682, 6685, 63, 1, 43, "Input"],
Cell[345748, 6688, 101, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345886, 6695, 498, 15, 101, "Input"],
Cell[346387, 6712, 122, 2, 42, "Output"],
Cell[346512, 6716, 124, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346673, 6723, 636, 21, 77, "Input"],
Cell[347312, 6746, 124, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347473, 6753, 253, 7, 73, "Input"],
Cell[347729, 6762, 289, 8, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348055, 6775, 326, 9, 73, "Input"],
Cell[348384, 6786, 339, 9, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348760, 6800, 424, 9, 43, "Input"],
Cell[349187, 6811, 1044, 37, 469, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350268, 6853, 105, 2, 43, "Input"],
Cell[350376, 6857, 565, 13, 371, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350978, 6875, 328, 9, 114, "Input"],
Cell[351309, 6886, 17431, 479, 351, "Output"],
Cell[368743, 7367, 18670, 475, 351, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387450, 7847, 1171, 38, 131, "Input"],
Cell[388624, 7887, 727, 14, 65, "Message"],
Cell[389354, 7903, 1088, 33, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390479, 7941, 120, 2, 43, "Input"],
Cell[390602, 7945, 136, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390775, 7952, 116, 2, 43, "Input"],
Cell[390894, 7956, 145, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391076, 7963, 99, 2, 43, "Input"],
Cell[391178, 7967, 130, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391345, 7974, 104, 2, 43, "Input"],
Cell[391452, 7978, 143, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391632, 7986, 157, 4, 71, "Input"],
Cell[391792, 7992, 122, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391951, 7999, 128, 3, 71, "Input"],
Cell[392082, 8004, 127, 2, 42, "Output"],
Cell[392212, 8008, 122, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392371, 8015, 93, 2, 43, "Input"],
Cell[392467, 8019, 100, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392604, 8026, 91, 2, 43, "Input"],
Cell[392698, 8030, 100, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392835, 8037, 1119, 37, 131, "Input"],
Cell[393957, 8076, 655, 20, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394649, 8101, 1119, 37, 144, "Input"],
Cell[395771, 8140, 1036, 33, 104, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396844, 8178, 966, 32, 100, "Input"],
Cell[397813, 8212, 938, 30, 95, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398788, 8247, 812, 27, 93, "Input"],
Cell[399603, 8276, 867, 28, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400507, 8309, 981, 31, 93, "Input"],
Cell[401491, 8342, 1042, 32, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402570, 8379, 149, 4, 45, "Input"],
Cell[402722, 8385, 245, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403004, 8397, 421, 14, 86, "Input"],
Cell[403428, 8413, 349, 11, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403814, 8429, 385, 12, 143, "Input"],
Cell[404202, 8443, 262, 8, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404501, 8456, 246, 9, 76, "Input"],
Cell[404750, 8467, 546, 19, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405333, 8491, 543, 18, 89, "Input"],
Cell[405879, 8511, 834, 27, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406750, 8543, 3746, 121, 774, "Input"],
Cell[410499, 8666, 97, 2, 42, "Output"],
Cell[410599, 8670, 97, 2, 42, "Output"],
Cell[410699, 8674, 97, 2, 42, "Output"],
Cell[410799, 8678, 203, 7, 82, "Output"],
Cell[411005, 8687, 3374, 84, 81, "Output"],
Cell[414382, 8773, 132, 4, 78, "Output"],
Cell[414517, 8779, 135, 3, 42, "Output"],
Cell[414655, 8784, 4018, 98, 103, "Output"],
Cell[418676, 8884, 836, 25, 84, "Output"]
}, Open  ]],
Cell[419527, 8912, 26, 0, 43, "Input"],
Cell[CellGroupData[{
Cell[419578, 8916, 2731, 88, 269, "Input"],
Cell[422312, 9006, 1490, 47, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423839, 9058, 297, 8, 43, "Input"],
Cell[424139, 9068, 100, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424276, 9075, 274, 7, 43, "Input"],
Cell[424553, 9084, 589, 12, 35, "Message"],
Cell[425145, 9098, 589, 12, 35, "Message"],
Cell[425737, 9112, 589, 12, 35, "Message"],
Cell[426329, 9126, 607, 13, 35, "Message"],
Cell[426939, 9141, 1589, 32, 366, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
